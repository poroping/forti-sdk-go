{
    "swagger": "2.0",
    "info": {
        "termsOfService": "http:\/\/fortinet.com\/terms\/",
        "version": "v2",
        "contact": {
            "url": "http:\/\/modskristensen.net",
            "name": "FortiOS Web Application Team",
            "email": "fosguiqateam@fortinet.com"
        },
        "description": "REST API for configuring FortiOS objects and settings",
        "title": "FortiOS Monitor"
    },
    "host": "172.16.177.65",
    "basePath": "\/api\/v2\/monitor",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application\/json"
    ],
    "produces": [
        "application\/json"
    ],
    "securityDefinitions": {
        "APIKeyQueryParam": {
            "type": "apiKey",
            "name": "access_token",
            "in": "query"
        }
    },
    "security": [
        {
            "APIKeyQueryParam": []
        }
    ],
    "paths": {
        "\/azure\/application-list": {
            "get": {
                "summary": "Retrieve a list of Azure applications that can be used for configuring an Azure SDN connector.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Azure Application List",
                            "description": "List all Azure applications accessible by the managed identity assigned to this Azure VM.",
                            "type": "object",
                            "properties": {
                                "tenant_ids": {
                                    "type": "array",
                                    "title": "Tenant IDs",
                                    "description": "List of tenant IDs.",
                                    "items": {
                                        "type": "object",
                                        "title": "Tenant ID",
                                        "description": "Tenant ID information.",
                                        "properties": {
                                            "tenant_id": {
                                                "type": "string",
                                                "title": "Tenant ID",
                                                "description": "The tenant ID."
                                            },
                                            "display_name": {
                                                "type": "string",
                                                "title": "Tenant Name",
                                                "description": "Name of the tenant ID."
                                            }
                                        }
                                    }
                                },
                                "client_ids": {
                                    "type": "array",
                                    "title": "Client IDs",
                                    "description": "List of client IDs.",
                                    "items": {
                                        "type": "object",
                                        "title": "Client ID",
                                        "description": "Client ID information.",
                                        "properties": {
                                            "client_id": {
                                                "type": "string",
                                                "title": "Client ID",
                                                "description": "The client ID."
                                            },
                                            "display_name": {
                                                "type": "string",
                                                "title": "Client Name",
                                                "description": "Name of the client ID."
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/azure\/application-list.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "azure"
                ]
            }
        },
        "\/azure\/application-list\/refresh": {
            "post": {
                "summary": "Update the Azure application list data or get the status of an update.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Azure Application List Refresh and Status",
                            "description": "Refreshes the Azure application list data or gets the status of a refresh.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "title": "Status",
                                    "description": "Status of the application list refresh.",
                                    "enum": [
                                        "failed",
                                        "finished",
                                        "pending"
                                    ]
                                },
                                "update_timestamp": {
                                    "type": "integer",
                                    "title": "Update Timestamp",
                                    "description": "Timestamp of when the update request was made. This is used to get the status of the update."
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/azure\/application-list.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "last_update_time": {
                                    "description": "Timestamp of a previous update request. If this is not provided then it will refresh the Azure application list data.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "azure"
                ]
            }
        },
        "\/endpoint-control\/record-list": {
            "get": {
                "summary": "List endpoint records. This should only be used when you need to retrieve endpoint information from FortiEMS.\nAccess Group: utmgrp.endpoint-control",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "intf_name",
                        "in": "query",
                        "description": "Filter: Name of interface where the endpoint was detected.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "endpoint-control"
                ]
            }
        },
        "\/endpoint-control\/summary": {
            "get": {
                "summary": "Summary of FortiClient endpoint records.\nAccess Group: utmgrp.endpoint-control",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "endpoint-control"
                ]
            }
        },
        "\/endpoint-control\/installer": {
            "get": {
                "summary": "List available FortiClient installers.\nAccess Group: utmgrp.endpoint-control",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "min_version",
                        "in": "query",
                        "description": "Filter: Minimum installer version. (String of the format n[.n[.n]]).",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "endpoint-control"
                ]
            }
        },
        "\/endpoint-control\/installer\/download": {
            "get": {
                "summary": "Download a FortiClient installer via FortiGuard.\nAccess Group: utmgrp.endpoint-control",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Name of installer (image_id).",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "endpoint-control"
                ]
            }
        },
        "\/endpoint-control\/avatar\/download": {
            "get": {
                "summary": "Download an endpoint avatar image.\nAccess Group: utmgrp.endpoint-control",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "uid",
                        "in": "query",
                        "description": "Single FortiClient UID.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User name of the endpoint.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fingerprint",
                        "in": "query",
                        "description": "Avatar fingerprint.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "default",
                        "in": "query",
                        "description": "Default avatar name ['authuser'|'unauthuser'|'authuser_72'|'unauthuser_72']. Default avatar when endpoint \/ device avatar is not available. If default is not set, Not found 404 is returned.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "endpoint-control"
                ]
            }
        },
        "\/endpoint-control\/ems\/status": {
            "get": {
                "summary": "Retrieve EMS connection status for a specific EMS.\nAccess Group: utmgrp.endpoint-control",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "EMS Status",
                            "description": "Retrieve EMS connection status for a specific EMS.",
                            "type": "object",
                            "required": [
                                "ems_name",
                                "ems_status_id",
                                "ems_status"
                            ],
                            "properties": {
                                "ems_name": {
                                    "type": "string",
                                    "title": "EMS Name",
                                    "description": "EMS server name (as defined in CLI table endpoint-control.fctems)."
                                },
                                "ems_serial": {
                                    "type": "string",
                                    "title": "EMS Serial",
                                    "description": "EMS serial."
                                },
                                "ems_status_id": {
                                    "type": "integer",
                                    "title": "Connection Status ID",
                                    "description": "Connection status ID.",
                                    "enum": [
                                        1,
                                        0,
                                        -1,
                                        -2,
                                        -3,
                                        -4,
                                        -5,
                                        -9999
                                    ]
                                },
                                "ems_status": {
                                    "type": "string",
                                    "title": "Connection Status",
                                    "description": "Connection status.",
                                    "enum": [
                                        "success",
                                        "not_reachable",
                                        "auth_failed",
                                        "auth_pending",
                                        "cert_untrusted",
                                        "no_api",
                                        "not_sent",
                                        "other",
                                        "internal",
                                        "cert_unauthorized"
                                    ]
                                },
                                "mgmt_ip": {
                                    "type": "string",
                                    "title": "Management IP Address",
                                    "description": "Management IP address of the EMS server."
                                },
                                "mgmt_port": {
                                    "type": "integer",
                                    "title": "Management Port",
                                    "description": "Management port of the EMS server."
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/endpoint-control\/ems.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "ems_name",
                        "in": "query",
                        "description": "EMS server name (as defined in CLI table endpoint-control.fctems).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ems_serial",
                        "in": "query",
                        "description": "EMS serial",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "endpoint-control"
                ]
            }
        },
        "\/endpoint-control\/ems\/cert-status": {
            "get": {
                "summary": "Retrieve authentication status of the EMS server certificate for a specific EMS.\nAccess Group: utmgrp.endpoint-control",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "EMS Certificate Status",
                            "description": "Retrieve authentication status of the EMS server certificate for a specific EMS.",
                            "type": "object",
                            "required": [
                                "ems_name",
                                "status"
                            ],
                            "properties": {
                                "ems_name": {
                                    "type": "string",
                                    "title": "EMS Name",
                                    "description": "EMS server name (as defined in CLI table endpoint-control.fctems)."
                                },
                                "status": {
                                    "type": "string",
                                    "title": "Status",
                                    "description": "Certificate status.",
                                    "enum": [
                                        "success",
                                        "pending",
                                        "error"
                                    ]
                                },
                                "error": {
                                    "type": "string",
                                    "title": "Error",
                                    "description": "Error code.",
                                    "enum": [
                                        "cert_mismatch",
                                        "cert_unverifiable",
                                        "denied",
                                        "internal",
                                        "no_conn",
                                        "no_cert",
                                        "invalid_args",
                                        "cert_unknown"
                                    ]
                                },
                                "cert": {
                                    "type": "object",
                                    "title": "Certificate",
                                    "description": "Details of the EMS server certificate.",
                                    "required": [
                                        "issuer",
                                        "fingerprint",
                                        "status",
                                        "serial_number"
                                    ],
                                    "properties": {
                                        "status": {
                                            "title": "Certificate Status",
                                            "description": "Status of the certificate.",
                                            "type": "string",
                                            "enum": [
                                                "valid",
                                                "invalid",
                                                "expired",
                                                "pending",
                                                "unknown"
                                            ]
                                        },
                                        "valid_from": {
                                            "title": "Valid From",
                                            "description": "Timestamp of the validity start date, in seconds.",
                                            "type": "integer"
                                        },
                                        "valid_to": {
                                            "title": "Valid To",
                                            "description": "Timestamp of the validity end date, in seconds.",
                                            "type": "integer"
                                        },
                                        "valid_from_raw": {
                                            "title": "Valid From Raw",
                                            "description": "Raw validity start date string from the certificate data.",
                                            "type": "string"
                                        },
                                        "valid_to_raw": {
                                            "title": "Valid to Raw",
                                            "description": "Raw validity end date string from the certificate data.",
                                            "type": "string"
                                        },
                                        "signature_algorithm": {
                                            "title": "Signature Algorithm",
                                            "description": "Hashing algorithm used for the signature.",
                                            "type": "string"
                                        },
                                        "subject": {
                                            "title": "Subject",
                                            "description": "Parsed certificate subject string.",
                                            "type": "object",
                                            "properties": {
                                                "C": {
                                                    "title": "Country",
                                                    "description": "Subject country.",
                                                    "type": "string"
                                                },
                                                "ST": {
                                                    "title": "State",
                                                    "description": "Subject state.",
                                                    "type": "string"
                                                },
                                                "L": {
                                                    "title": "Locality",
                                                    "description": "Subject locality.",
                                                    "type": "string"
                                                },
                                                "O": {
                                                    "title": "Organization",
                                                    "description": "Subject organization.",
                                                    "type": "string"
                                                },
                                                "OU": {
                                                    "title": "Organizational Unit",
                                                    "description": "Subject organizational unit.",
                                                    "type": "string"
                                                },
                                                "CN": {
                                                    "title": "Common Name",
                                                    "description": "Subject common name.",
                                                    "type": "string"
                                                }
                                            },
                                            "additionalProperties": {
                                                "title": "Other Subject Properties",
                                                "description": "Additional attributes from the certificate's subject field.",
                                                "type": "string"
                                            }
                                        },
                                        "subject_raw": {
                                            "title": "Subject Raw",
                                            "description": "Raw subject string from certificate data.",
                                            "type": "string"
                                        },
                                        "issuer": {
                                            "title": "Issuer",
                                            "description": "Parsed certificate issuer string.",
                                            "type": "object",
                                            "properties": {
                                                "C": {
                                                    "title": "Country",
                                                    "description": "Issuer country.",
                                                    "type": "string"
                                                },
                                                "ST": {
                                                    "title": "State",
                                                    "description": "Issuer state.",
                                                    "type": "string"
                                                },
                                                "L": {
                                                    "title": "Locality",
                                                    "description": "Issuer locality.",
                                                    "type": "string"
                                                },
                                                "O": {
                                                    "title": "Organization",
                                                    "description": "Issuer organization.",
                                                    "type": "string"
                                                },
                                                "OU": {
                                                    "title": "Organizational Unit",
                                                    "description": "Issuer organizational unit.",
                                                    "type": "string"
                                                },
                                                "CN": {
                                                    "title": "Common Name",
                                                    "description": "Issuer common name.",
                                                    "type": "string"
                                                }
                                            },
                                            "additionalProperties": {
                                                "title": "Other Issuer Properties",
                                                "description": "Additional attributes from the certificate's issuer field.",
                                                "type": "string"
                                            }
                                        },
                                        "issuer_raw": {
                                            "title": "Issuer Raw",
                                            "description": "Raw issuer string from the certificate data.",
                                            "type": "string"
                                        },
                                        "fingerprint": {
                                            "title": "Fingerprint",
                                            "description": "MD5 fingerprint of the certificate.",
                                            "type": "string"
                                        },
                                        "version": {
                                            "title": "Version",
                                            "description": "Certificate version.",
                                            "type": "integer"
                                        },
                                        "is_ca": {
                                            "title": "Is CA",
                                            "description": "True when the certificate is a root certificate authority.",
                                            "type": "boolean"
                                        },
                                        "serial_number": {
                                            "title": "Serial Number",
                                            "description": "The serial number of the certificate.",
                                            "type": "string"
                                        },
                                        "ext": {
                                            "title": "Extensions",
                                            "description": "Additional certificate fields.",
                                            "type": "array",
                                            "items": {
                                                "title": "Extension Field",
                                                "description": "An extension field in this certificate.",
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "title": "Extension Name",
                                                        "description": "Name of the extension field.",
                                                        "type": "string"
                                                    },
                                                    "data": {
                                                        "title": "Extension Data",
                                                        "description": "Extension field data.",
                                                        "type": "string"
                                                    },
                                                    "critical": {
                                                        "title": "Critical",
                                                        "description": "True when the extension is critical (has a higher priority).",
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/endpoint-control\/ems.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "ems_name",
                        "in": "query",
                        "description": "EMS server name (as defined in CLI table endpoint-control.fctems).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "with_cert",
                        "in": "query",
                        "description": "Return detailed certificate information. Available when the certificate is authenticated by installed CA certificates. ",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "tags": [
                    "endpoint-control"
                ]
            }
        },
        "\/endpoint-control\/ems\/verify-cert": {
            "post": {
                "summary": "Verify EMS server certificate for a specific EMS.\nAccess Group: utmgrp.endpoint-control",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Verify EMS Certificate",
                            "description": "Verify EMS server certificate for a specific EMS.",
                            "type": "object",
                            "required": [
                                "ems_name",
                                "status"
                            ],
                            "properties": {
                                "ems_name": {
                                    "type": "string",
                                    "title": "EMS Name",
                                    "description": "EMS server name (as defined in CLI table endpoint-control.fctems)."
                                },
                                "status": {
                                    "type": "string",
                                    "title": "Status",
                                    "description": "Certificate verify status.",
                                    "enum": [
                                        "success",
                                        "error"
                                    ]
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/endpoint-control\/ems.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ems_name": {
                                    "description": "EMS server name (as defined in CLI table endpoint-control.fctems).",
                                    "type": "string"
                                },
                                "fingerprint": {
                                    "description": "EMS server certificate fingerprint to check with.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "endpoint-control"
                ]
            }
        },
        "\/endpoint-control\/ems\/status-summary": {
            "get": {
                "summary": "Retrieve status summary for all configured EMS.\nAccess Group: utmgrp.endpoint-control",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiClient EMS Status Summaries",
                            "description": "List status summaries for configured FortiClient EMS entries.",
                            "type": "array",
                            "items": {
                                "title": "FortiClient EMS Status Summary",
                                "description": "Retrieve status summary of the EMS server.",
                                "type": "object",
                                "required": [
                                    "name",
                                    "cert_status"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "title": "EMS Name",
                                        "description": "EMS server name (as defined in CLI table endpoint-control.fctems)."
                                    },
                                    "cert_status": {
                                        "type": "object",
                                        "title": "EMS Certificate Status",
                                        "description": "Retrieve authentication status of the EMS server certificate.",
                                        "required": [
                                            "status"
                                        ],
                                        "properties": {
                                            "status": {
                                                "type": "string",
                                                "title": "Status",
                                                "description": "Certificate status.",
                                                "enum": [
                                                    "success",
                                                    "pending",
                                                    "error"
                                                ]
                                            },
                                            "error": {
                                                "type": "string",
                                                "title": "Error",
                                                "description": "Error code.",
                                                "enum": [
                                                    "cert_mismatch",
                                                    "cert_unverifiable",
                                                    "denied",
                                                    "internal",
                                                    "no_conn",
                                                    "no_cert",
                                                    "invalid_args",
                                                    "cert_unknown"
                                                ]
                                            }
                                        }
                                    },
                                    "conn_status": {
                                        "title": "EMS Connection Status",
                                        "description": "Retrieve EMS connection status for a specific EMS.",
                                        "type": "object",
                                        "required": [
                                            "ems_name",
                                            "ems_status_id",
                                            "ems_status"
                                        ],
                                        "properties": {
                                            "ems_name": {
                                                "type": "string",
                                                "title": "EMS Name",
                                                "description": "EMS server name (as defined in CLI table endpoint-control.fctems)."
                                            },
                                            "ems_serial": {
                                                "type": "string",
                                                "title": "EMS Serial",
                                                "description": "EMS serial."
                                            },
                                            "ems_status_id": {
                                                "type": "integer",
                                                "title": "Connection Status ID",
                                                "description": "Connection status ID.",
                                                "enum": [
                                                    1,
                                                    0,
                                                    -1,
                                                    -2,
                                                    -3,
                                                    -4,
                                                    -5,
                                                    -9999
                                                ]
                                            },
                                            "ems_status": {
                                                "type": "string",
                                                "title": "Connection Status",
                                                "description": "Connection status.",
                                                "enum": [
                                                    "success",
                                                    "not_reachable",
                                                    "auth_failed",
                                                    "auth_pending",
                                                    "cert_untrusted",
                                                    "no_api",
                                                    "not_sent",
                                                    "other",
                                                    "internal",
                                                    "cert_unauthorized"
                                                ]
                                            },
                                            "mgmt_ip": {
                                                "type": "string",
                                                "title": "Management IP Address",
                                                "description": "Management IP address of the EMS server."
                                            },
                                            "mgmt_port": {
                                                "type": "integer",
                                                "title": "Management Port",
                                                "description": "Management port of the EMS server."
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/endpoint-control\/ems.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "endpoint-control"
                ]
            }
        },
        "\/extender-controller\/extender": {
            "get": {
                "summary": "Retrieve statistics for specific configured FortiExtender units.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiExtender Information",
                            "description": "Retrieve detailed information for a FortiExtender.",
                            "type": "array",
                            "items": {
                                "title": "FortiExtender Information",
                                "description": "Details for a FortiExtender.",
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "FortiExtender name."
                                    },
                                    "id": {
                                        "type": "string",
                                        "title": "ID",
                                        "description": "FortiExtender ID."
                                    },
                                    "system": {
                                        "type": "object",
                                        "title": "System Information",
                                        "description": "FortiExtender system information.",
                                        "properties": {
                                            "cpu": {
                                                "type": "integer",
                                                "title": "CPU Usage",
                                                "description": "Current CPU usage (percentage) of the FortiExtender."
                                            },
                                            "memory": {
                                                "type": "integer",
                                                "title": "Memory Usage",
                                                "description": "Current memory usage (percentage) of the FortiExtender."
                                            },
                                            "ip": {
                                                "type": "string",
                                                "title": "IP Address",
                                                "description": "IP address of the FortiExtender."
                                            },
                                            "software_version": {
                                                "type": "string",
                                                "title": "Software Version",
                                                "description": "Software version of the FortiExtender."
                                            },
                                            "hardware_version": {
                                                "type": "string",
                                                "title": "Hardware Version",
                                                "description": "Hardware version of the FortiExtender."
                                            },
                                            "mac": {
                                                "type": "string",
                                                "title": "MAC Address",
                                                "description": "MAC address of the FortiExtender."
                                            },
                                            "netmask": {
                                                "type": "string",
                                                "title": "Netmask",
                                                "description": "Netmask for the FortiExtender's IP address."
                                            },
                                            "gateway": {
                                                "type": "string",
                                                "title": "Gateway",
                                                "description": "Network gateway of the FortiExtender."
                                            },
                                            "addr_type": {
                                                "type": "string",
                                                "title": "Address Type",
                                                "description": "IP address type of the FortiExtender."
                                            },
                                            "fgt_ip": {
                                                "type": "string",
                                                "title": "FortiGate IP",
                                                "description": "IP address of the FortiGate to which the FortiExtender is attached."
                                            },
                                            "gps_lat": {
                                                "type": "string",
                                                "title": "Latitude",
                                                "description": "Latitude of FortiExtender in decimal degrees format."
                                            },
                                            "gps_long": {
                                                "type": "string",
                                                "title": "Longitude",
                                                "description": "Longitude of FortiExtender in decimal degrees format."
                                            },
                                            "temperature": {
                                                "type": "string",
                                                "title": "Temperature",
                                                "description": "Temperature of FortiExtender in Celsius degree."
                                            },
                                            "error": {
                                                "type": "integer",
                                                "title": "Error",
                                                "description": "Error code when retrieving system information."
                                            }
                                        }
                                    },
                                    "usage": {
                                        "type": "object",
                                        "title": "Usage",
                                        "description": "Data usage for the current month.",
                                        "properties": {
                                            "rx": {
                                                "type": "integer",
                                                "title": "RX",
                                                "description": "Amount of received data, in bytes."
                                            },
                                            "tx": {
                                                "type": "integer",
                                                "title": "TX",
                                                "description": "Amount of transmitted data, in bytes."
                                            },
                                            "error": {
                                                "type": "integer",
                                                "title": "Error",
                                                "description": "Error code for retrieving data usage for the current month."
                                            }
                                        }
                                    },
                                    "last": {
                                        "type": "object",
                                        "title": "Last",
                                        "description": "Data usage for the last month.",
                                        "properties": {
                                            "rx": {
                                                "type": "integer",
                                                "title": "RX",
                                                "description": "Amount of received data, in bytes."
                                            },
                                            "tx": {
                                                "type": "integer",
                                                "title": "TX",
                                                "description": "Amount of transmitted data, in bytes."
                                            },
                                            "error": {
                                                "type": "integer",
                                                "title": "Error",
                                                "description": "Error code for retrieving data usage for the last month."
                                            }
                                        }
                                    }
                                },
                                "additionalProperties": {
                                    "type": "object",
                                    "title": "Modem Information",
                                    "description": "FortiExtender modem information.",
                                    "properties": {
                                        "data_plan": {
                                            "type": "string",
                                            "title": "Data Plan",
                                            "description": "Data plan assigned to this modem."
                                        },
                                        "physical_port": {
                                            "type": "string",
                                            "title": "Physical Port",
                                            "description": "Physical port the modem is attached to."
                                        },
                                        "manufacturer": {
                                            "type": "string",
                                            "title": "Manufacturer",
                                            "description": "Modem manufacturer."
                                        },
                                        "product": {
                                            "type": "string",
                                            "title": "Product",
                                            "description": "Modem product name."
                                        },
                                        "model": {
                                            "type": "string",
                                            "title": "Model",
                                            "description": "Modem model type."
                                        },
                                        "revision": {
                                            "type": "string",
                                            "title": "Revision",
                                            "description": "Modem revision."
                                        },
                                        "imsi": {
                                            "type": "string",
                                            "title": "IMSI",
                                            "description": "International mobile subscriber identity of the modem."
                                        },
                                        "pin_status": {
                                            "type": "string",
                                            "title": "PIN Status",
                                            "description": "PIN status.",
                                            "enum": [
                                                "",
                                                "enable",
                                                "disable"
                                            ]
                                        },
                                        "service": {
                                            "type": "string",
                                            "title": "Service",
                                            "description": "Network service."
                                        },
                                        "signal_strength": {
                                            "type": "string",
                                            "title": "Signal Strength",
                                            "description": "Signal strength."
                                        },
                                        "rssi": {
                                            "type": "string",
                                            "title": "RSSI",
                                            "description": "Received signal strength indicator."
                                        },
                                        "connect_status": {
                                            "type": "string",
                                            "title": "Connection Status",
                                            "description": "Connection status.",
                                            "enum": [
                                                "CONN_STATE_INVALID",
                                                "CONN_STATE_CONFIG",
                                                "CONN_STATE_MDM_INIT",
                                                "CONN_STATE_MDM_RESET_INIT",
                                                "CONN_STATE_SELECT_SIM",
                                                "CONN_STATE_MDM_FW_UPGRADE",
                                                "CONN_STATE_START_SESSION",
                                                "CONN_STATE_CONNECTED",
                                                "CONN_STATE_DISCONNECTED",
                                                "CONN_STATE_MDM_PLUGOUT",
                                                "CONN_STATE_IDLE",
                                                "CONN_STATE_FAILURE_SAFE"
                                            ]
                                        },
                                        "gsm_profile": {
                                            "type": "array",
                                            "title": "GSM Profiles",
                                            "description": "List of GSM profiles.",
                                            "items": {
                                                "title": "GSM Profile",
                                                "description": "Details for a GSM profile.",
                                                "type": "object",
                                                "properties": {
                                                    "cid": {
                                                        "type": "string",
                                                        "title": "CID",
                                                        "description": "Cell ID of a GSM profile."
                                                    },
                                                    "apn": {
                                                        "type": "string",
                                                        "title": "APN",
                                                        "description": "Access Point Name of a GSM profile."
                                                    }
                                                }
                                            }
                                        },
                                        "cdma_profile": {
                                            "type": "object",
                                            "title": "CDMA Profile",
                                            "description": "CDMA profile.",
                                            "properties": {
                                                "NAI": {
                                                    "type": "string",
                                                    "title": "NAI",
                                                    "description": "Network access identifier."
                                                },
                                                "idx": {
                                                    "type": "string",
                                                    "title": "Index",
                                                    "description": "Index."
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "title": "Status",
                                                    "description": "Status."
                                                },
                                                "home_addr": {
                                                    "type": "string",
                                                    "title": "Home Address",
                                                    "description": "Home address."
                                                },
                                                "primary_ha": {
                                                    "type": "string",
                                                    "title": "Primary HA",
                                                    "description": "Primary home agent."
                                                },
                                                "secondary_ha": {
                                                    "type": "string",
                                                    "title": "Secondary HA",
                                                    "description": "Secondary home agent."
                                                },
                                                "aaa_spi": {
                                                    "type": "string",
                                                    "title": "AAA SPI",
                                                    "description": "AAA security parameter index."
                                                },
                                                "ha_spi": {
                                                    "type": "string",
                                                    "title": "HA SPI",
                                                    "description": "HA security parameter index."
                                                }
                                            }
                                        },
                                        "esn_imei": {
                                            "type": "string",
                                            "title": "ESN IMEI",
                                            "description": "International mobile equipment identity."
                                        },
                                        "activation_status": {
                                            "type": "string",
                                            "title": "Activation Status",
                                            "description": "Activation status."
                                        },
                                        "roaming_status": {
                                            "type": "string",
                                            "title": "Roaming Status",
                                            "description": "Roaming service status."
                                        },
                                        "usim_status": {
                                            "type": "string",
                                            "title": "USIM Status",
                                            "description": "USIM status."
                                        },
                                        "oma_dm_version": {
                                            "type": "string",
                                            "title": "OMA DM Version",
                                            "description": "OMA device management version."
                                        },
                                        "plmn": {
                                            "type": "string",
                                            "title": "PLMN",
                                            "description": "Public land mobile network."
                                        },
                                        "band": {
                                            "type": "string",
                                            "title": "Band",
                                            "description": "Frequency band."
                                        },
                                        "signal_rsrq": {
                                            "type": "string",
                                            "title": "RSRQ",
                                            "description": "Reference signal received quality."
                                        },
                                        "signal_rsrp": {
                                            "type": "string",
                                            "title": "RSRP",
                                            "description": "Reference signal received power."
                                        },
                                        "lte_sinr": {
                                            "type": "string",
                                            "title": "LTE SINR",
                                            "description": "LTE signal-to-interference-plus-noise ratio."
                                        },
                                        "lte_rssi": {
                                            "type": "string",
                                            "title": "LTE RSSI",
                                            "description": "LTE Received signal strength indicator."
                                        },
                                        "lte_rs_throughput": {
                                            "type": "string",
                                            "title": "RS Throughput",
                                            "description": "RS throughput."
                                        },
                                        "lte_ts_throughput": {
                                            "type": "string",
                                            "title": "TS Throughput",
                                            "description": "TS throughput."
                                        },
                                        "lte_physical_cellid": {
                                            "type": "string",
                                            "title": "LTE Physical CID",
                                            "description": "LTE physical cell ID."
                                        },
                                        "modem_type": {
                                            "type": "string",
                                            "title": "Modem Type",
                                            "description": "Modem type."
                                        },
                                        "drc_cdma_evdo": {
                                            "type": "string",
                                            "title": "DRC CDMA EV-DO",
                                            "description": "DRC index of EV-DO."
                                        },
                                        "current_snr": {
                                            "type": "string",
                                            "title": "Current SNR",
                                            "description": "Current signal-to-noise ratio."
                                        },
                                        "wireless_operator": {
                                            "type": "string",
                                            "title": "Wireless Operator",
                                            "description": "Wireless operator."
                                        },
                                        "operating_mode": {
                                            "type": "string",
                                            "title": "Operating Mode",
                                            "description": "Current operating mode."
                                        },
                                        "wireless_signal": {
                                            "type": "string",
                                            "title": "Wireless Signal",
                                            "description": "Wireless signal strength."
                                        },
                                        "usb_wan_mac": {
                                            "type": "string",
                                            "title": "USB WAN MAC",
                                            "description": "WAN MAC address of USB."
                                        },
                                        "error": {
                                            "type": "integer",
                                            "title": "Error",
                                            "description": "Error code for retrieving modem information."
                                        }
                                    },
                                    "additionalProperties": {
                                        "type": "object",
                                        "title": "SIM Information",
                                        "description": "SIM information.",
                                        "properties": {
                                            "carrier": {
                                                "type": "string",
                                                "title": "Carrier",
                                                "description": "Network carrier."
                                            },
                                            "phone_number": {
                                                "type": "string",
                                                "title": "Phone Number",
                                                "description": "SIM phone number."
                                            },
                                            "status": {
                                                "type": "string",
                                                "title": "Status",
                                                "description": "Status."
                                            },
                                            "is_active": {
                                                "type": "integer",
                                                "title": "Active SIM",
                                                "description": "True when this SIM is the active SIM."
                                            },
                                            "imsi": {
                                                "type": "string",
                                                "title": "IMSI",
                                                "description": "IMSI number."
                                            },
                                            "iccid": {
                                                "type": "string",
                                                "title": "ICCID",
                                                "description": "SIM ICCID."
                                            },
                                            "maximum_allowed_data": {
                                                "type": "integer",
                                                "title": "Data Limit",
                                                "description": "Data limit for the SIM, in MB."
                                            },
                                            "overage_allowed": {
                                                "type": "string",
                                                "title": "Overage Allowed",
                                                "description": "True when data overages are allowed for this SIM."
                                            },
                                            "next_billing_date": {
                                                "type": "string",
                                                "title": "Next Billing Date",
                                                "description": "Next billing date."
                                            },
                                            "data_usage": {
                                                "type": "integer",
                                                "title": "Data Usage",
                                                "description": "Current cycle data usage, in MB."
                                            },
                                            "slot": {
                                                "type": "integer",
                                                "title": "SIM",
                                                "description": "SIM number."
                                            },
                                            "modem": {
                                                "type": "integer",
                                                "title": "Modem",
                                                "description": "ID of the modem containing the SIM."
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/extender-controller\/extender.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "FortiExtender ID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "List of FortiExtender IDs to query.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Statistic type.'type' options are [system | modem | usage | last]. If 'type' is not specified, all types of statistics are retrieved.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "extender-controller"
                ]
            }
        },
        "\/extender-controller\/extender\/diagnose": {
            "post": {
                "summary": "Execute diagnotic commands.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Diagnose Extender",
                            "description": "Run diagnostic commands for a FortiExtender.",
                            "type": "object",
                            "properties": {
                                "result": {
                                    "title": "Diagnostic Result",
                                    "description": "Result of the diagnostic command.",
                                    "type": "string"
                                },
                                "error": {
                                    "title": "Diagnostic Error Code",
                                    "description": "Error code received while running the diagnostic command.",
                                    "type": "integer"
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/extender-controller\/extender.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "description": "FortiExtender ID.",
                                    "type": "string"
                                },
                                "cmd": {
                                    "description": "Command to execute.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "extender-controller"
                ]
            }
        },
        "\/extender-controller\/extender\/reset": {
            "post": {
                "summary": "Reset a specific FortiExtender unit.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "description": "FortiExtender ID to reset.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "extender-controller"
                ]
            }
        },
        "\/extender-controller\/extender\/upgrade": {
            "post": {
                "summary": "Upgrade FortiExtender.\nAccess Group: sysgrp.mnt",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Upgrade FortiExtender",
                            "description": "Upload firmware image for upgrading FortiExtender.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "title": "Status",
                                    "description": "Result of upgrading the FortiExtender.",
                                    "enum": [
                                        "success"
                                    ]
                                },
                                "error": {
                                    "type": "integer",
                                    "title": "Error",
                                    "description": "Error code for the FortiExtender upgrade failure."
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/extender-controller\/extender.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "description": "FortiExtender ID to upgrade.",
                                    "type": "string"
                                },
                                "file_content": {
                                    "description": "Provided when uploading a file: base64 encoded file data. Must not contain whitespace or other invalid base64 characters. Must be included in HTTP body.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "extender-controller"
                ]
            }
        },
        "\/firewall\/health": {
            "get": {
                "summary": "List configured load balance server health monitors.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/local-in": {
            "get": {
                "summary": "List implicit and explicit local-in firewall policies.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/acl": {
            "get": {
                "summary": "List counters for all IPv4 ACL.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/acl\/clear_counters": {
            "post": {
                "summary": "Reset counters for one or more IPv4 ACLs by policy ID.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "policy": {
                                    "description": "Single policy ID to reset.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/acl6": {
            "get": {
                "summary": "List counters for all IPv6 ACL.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/acl6\/clear_counters": {
            "post": {
                "summary": "Reset counters for one or more IPv6 ACLs by policy ID.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "policy": {
                                    "description": "Single policy ID to reset.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/central-snat-map": {
            "get": {
                "summary": "List traffic statistics for firewall central SNAT policies.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Firewall Central SNAT Policy Statistics",
                            "description": "List traffic statistics for firewall central SNAT policies.",
                            "type": "array",
                            "items": {
                                "title": "Central SNAT Policy Statistics Entry",
                                "description": "Traffic statistics for a firewall central SNAT policy.",
                                "type": "object",
                                "required": [
                                    "policyid"
                                ],
                                "properties": {
                                    "policyid": {
                                        "type": "integer",
                                        "title": "Policy ID",
                                        "description": "Policy ID."
                                    },
                                    "last_used": {
                                        "type": "integer",
                                        "title": "Last Used",
                                        "description": "Timestamp of when the policy was last used."
                                    },
                                    "first_used": {
                                        "type": "integer",
                                        "title": "First Used",
                                        "description": "Timestamp of when the policy was first used."
                                    },
                                    "hit_count": {
                                        "type": "integer",
                                        "title": "Hit Count",
                                        "description": "Number of times the policy has been used."
                                    },
                                    "uuid": {
                                        "type": "string",
                                        "title": "UUID",
                                        "description": "Policy UUID."
                                    },
                                    "uuid_type": {
                                        "type": "string",
                                        "title": "UUID Object Type",
                                        "description": "UUID object type.",
                                        "enum": [
                                            "firewall.central-snat-map"
                                        ]
                                    },
                                    "1_week_ipv4": {
                                        "type": "object",
                                        "title": "Firewall Central SNAT Policy IPv4 Weekly Statistics",
                                        "description": "List of the last week of IPv4 traffic statistics for a firewall central SNAT policy.",
                                        "required": [
                                            "hit_count"
                                        ],
                                        "properties": {
                                            "hit_count": {
                                                "type": "array",
                                                "title": "Weekly Hit Count",
                                                "description": "Number of times the central SNAT policy was used by IPv4 traffic in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One statistic."
                                                }
                                            }
                                        }
                                    },
                                    "1_week_ipv6": {
                                        "type": "object",
                                        "title": "Firewall Central SNAT Policy IPv6 Weekly Statistics",
                                        "description": "List of the last week of IPv6 traffic statistics for a firewall central SNAT policy.",
                                        "required": [
                                            "hit_count"
                                        ],
                                        "properties": {
                                            "hit_count": {
                                                "type": "array",
                                                "title": "Weekly Hit Count",
                                                "description": "Number of times the central SNAT policy was used by IPv6 traffic in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One statistic."
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/firewall\/central-snat-map.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "policyid",
                        "in": "query",
                        "description": "Filter: Policy ID.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ip_version",
                        "in": "query",
                        "description": "Filter: Traffic IP Version. [ ipv4 | ipv6 ], if left empty, will retrieve data for both IPv4 and IPv6.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/central-snat-map\/reset": {
            "post": {
                "summary": "Reset traffic statistics for all firewall central SNAT policies.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/central-snat-map\/clear-counters": {
            "post": {
                "summary": "Reset traffic statistics for one or more firewall central SNAT policy by policy ID.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "policy": {
                                    "description": "Single policy ID to reset.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/dnat": {
            "get": {
                "summary": "List hit count statistics for firewall virtual IP\/server.\nAccess Group: fwgrp.address",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Firewall Virtual IP\/Server Statistics",
                            "description": "List hit count statistics for firewall virtual IP.",
                            "type": "array",
                            "items": {
                                "title": "Firewall Virtual IP\/Server Statistics Entry",
                                "description": "Hit count statistics for a firewall virtual IP\/server.",
                                "type": "object",
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "title": "Virtual IP\/Server Index",
                                        "description": "Virtual IP\/Server Index."
                                    },
                                    "last_used": {
                                        "type": "integer",
                                        "title": "Last Used",
                                        "description": "Timestamp of when the virtual IP\/server was last used."
                                    },
                                    "first_used": {
                                        "type": "integer",
                                        "title": "First Used",
                                        "description": "Timestamp of when the virtual IP\/server was first used."
                                    },
                                    "hit_count": {
                                        "type": "integer",
                                        "title": "Hit Count",
                                        "description": "Number of times the virtual IP\/server has been used."
                                    },
                                    "uuid": {
                                        "type": "string",
                                        "title": "UUID",
                                        "description": "Virtual IP\/server UUID."
                                    },
                                    "uuid_type": {
                                        "type": "string",
                                        "title": "UUID Object Type",
                                        "description": "UUID object type.",
                                        "enum": [
                                            "firewall.vip",
                                            "firewall.vip6",
                                            "firewall.vipgrp",
                                            "firewall.vipgrp6"
                                        ]
                                    },
                                    "1_week_ipv4": {
                                        "type": "object",
                                        "title": "Firewall Virtual IP\/Server IPv4 Weekly Statistics",
                                        "description": "List of the last week of IPv4 hit count statistics for a firewall virtual IP\/server.",
                                        "required": [
                                            "hit_count"
                                        ],
                                        "properties": {
                                            "hit_count": {
                                                "type": "array",
                                                "title": "Weekly Hit Count",
                                                "description": "Number of times the virtual IP\/server was used by IPv4 traffic in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One statistic."
                                                }
                                            }
                                        }
                                    },
                                    "1_week_ipv6": {
                                        "type": "object",
                                        "title": "Firewall Virtual IP\/Server IPv6 Weekly Statistics",
                                        "description": "List of the last week of IPv6 hit count statistics for a firewall virtual IP\/server.",
                                        "required": [
                                            "hit_count"
                                        ],
                                        "properties": {
                                            "hit_count": {
                                                "type": "array",
                                                "title": "Weekly Hit Count",
                                                "description": "Number of times the virtual IP\/server was used by IPv6 traffic in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One statistic."
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/firewall\/dnat.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "Filter: Virtual IP's UUID.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip_version",
                        "in": "query",
                        "description": "Filter: Traffic IP Version. [ ipv4 | ipv6 ], if left empty, will retrieve data for both IPv4 and IPv6.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/dnat\/reset": {
            "post": {
                "summary": "Reset hit count statistics for all firewall virtual IPs\/servers.\nAccess Group: fwgrp.address",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/dnat\/clear-counters": {
            "post": {
                "summary": "Reset hit count statistics for one or more firewall virtual IP\/server by ID.\nAccess Group: fwgrp.address",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "description": "Single IDs to reset.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/internet-service-match": {
            "get": {
                "summary": "List internet services that exist at a given IP or Subnet.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "ip",
                        "in": "query",
                        "description": "IP (in dot-decimal notation).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "mask",
                        "in": "query",
                        "description": "IP Mask (in dot-decimal notation).",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/internet-service-reputation": {
            "get": {
                "summary": "List internet services with reputation information that exist at a given IP.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Firewall Internet Service Reputations",
                            "description": "List of reputations for matched internet services for an IP address.",
                            "type": "array",
                            "items": {
                                "title": "Firewall Internet Service Reputation",
                                "description": "Internet service reputation for an IP address.",
                                "type": "object",
                                "required": [
                                    "id",
                                    "name",
                                    "reputation",
                                    "popularity"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "title": "ID",
                                        "description": "Internet service ID."
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "Internet service name."
                                    },
                                    "reputation": {
                                        "type": "integer",
                                        "title": "Reputation",
                                        "description": "IP address reputation ID."
                                    },
                                    "popularity": {
                                        "type": "integer",
                                        "title": "Popularity",
                                        "description": "Popularity of the internet service."
                                    },
                                    "botnet_id": {
                                        "type": "integer",
                                        "title": "Botnet ID",
                                        "description": "Botnet ID."
                                    },
                                    "domain_id": {
                                        "type": "integer",
                                        "title": "Domain ID",
                                        "description": "Domain ID."
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "title": "Country ID",
                                        "description": "Country ID."
                                    },
                                    "region_id": {
                                        "type": "integer",
                                        "title": "Region ID",
                                        "description": "Region ID."
                                    },
                                    "city_id": {
                                        "type": "integer",
                                        "title": "City ID",
                                        "description": "City ID."
                                    },
                                    "blocklist": {
                                        "type": "array",
                                        "title": "IP Blocklists",
                                        "description": "Blocklists on which the matched IP addresses are listed.",
                                        "items": {
                                            "title": "IP Blocklist",
                                            "description": "Blocklist on which the matched IP address is listed.",
                                            "type": "object",
                                            "required": [
                                                "vendor_id",
                                                "reason_id"
                                            ],
                                            "properties": {
                                                "vendor_id": {
                                                    "type": "integer",
                                                    "title": "Vendor ID",
                                                    "description": "Vendor ID for the IP address blocklist."
                                                },
                                                "reason_id": {
                                                    "type": "integer",
                                                    "title": "Reason ID",
                                                    "description": "Reason ID for the IP address blocklist."
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/firewall\/internet-service-reputation.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "ip",
                        "in": "query",
                        "description": "IP (in dot-decimal notation).",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/internet-service-details": {
            "get": {
                "summary": "List all details for a given Internet Service ID.\nAccess Group: fwgrp.address",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "definitions": {
                                "id": {
                                    "type": "integer",
                                    "title": "ID",
                                    "description": "Internet service ID."
                                },
                                "q_origin_key": {
                                    "type": "integer",
                                    "title": "CMDB entry ID",
                                    "description": "Internet service CMDB entry ID."
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "description": "Internet service name."
                                },
                                "start_ip": {
                                    "type": "string",
                                    "title": "Start IP",
                                    "description": "IP address for the start of the IP range."
                                },
                                "end_ip": {
                                    "type": "string",
                                    "title": "End IP",
                                    "description": "IP address for the end of the IP range."
                                },
                                "start_port": {
                                    "type": "integer",
                                    "title": "Start Port",
                                    "description": "Port number for the start of the port range."
                                },
                                "end_port": {
                                    "type": "integer",
                                    "title": "End Port",
                                    "description": "Port number for the end of the port range."
                                }
                            },
                            "anyOf": [
                                {
                                    "title": "Firewall Internet Service Summary",
                                    "type": "object",
                                    "description": "Internet service summary for a given internet service ID.",
                                    "required": [
                                        "id",
                                        "q_origin_key",
                                        "name",
                                        "total"
                                    ],
                                    "properties": {
                                        "id": {
                                            "$ref": "#\/definitions\/id"
                                        },
                                        "q_origin_key": {
                                            "$ref": "#\/definitions\/q_origin_key"
                                        },
                                        "name": {
                                            "$ref": "#\/definitions\/name"
                                        },
                                        "total": {
                                            "type": "integer",
                                            "title": "Total Count",
                                            "description": "Total count of internet service entries."
                                        }
                                    }
                                },
                                {
                                    "title": "Firewall Internet Service Details",
                                    "type": "object",
                                    "description": "Internet service details for a given internet service ID.",
                                    "required": [
                                        "id",
                                        "q_origin_key",
                                        "name",
                                        "entry",
                                        "disable_entry"
                                    ],
                                    "properties": {
                                        "id": {
                                            "$ref": "#\/definitions\/id"
                                        },
                                        "q_origin_key": {
                                            "$ref": "#\/definitions\/q_origin_key"
                                        },
                                        "name": {
                                            "$ref": "#\/definitions\/name"
                                        },
                                        "entry": {
                                            "type": "array",
                                            "title": "Internet Service Entries",
                                            "description": "Internet service entries.",
                                            "items": {
                                                "title": "Internet Service Entry",
                                                "description": "Internet service entry.",
                                                "type": "object",
                                                "required": [
                                                    "proto",
                                                    "ip_range",
                                                    "port",
                                                    "country_id",
                                                    "region_id",
                                                    "city_id",
                                                    "popularity",
                                                    "reputation"
                                                ],
                                                "properties": {
                                                    "proto": {
                                                        "type": "integer",
                                                        "title": "Protocol",
                                                        "description": "Protocol number."
                                                    },
                                                    "ip_range": {
                                                        "title": "IP Range",
                                                        "description": "IP range of the internet service entry.",
                                                        "type": "object",
                                                        "required": [
                                                            "start_ip",
                                                            "end_ip"
                                                        ],
                                                        "properties": {
                                                            "start_ip": {
                                                                "$ref": "#\/definitions\/start_ip"
                                                            },
                                                            "end_ip": {
                                                                "$ref": "#\/definitions\/end_ip"
                                                            }
                                                        }
                                                    },
                                                    "port": {
                                                        "type": "array",
                                                        "title": "Port Ranges",
                                                        "description": "Port ranges for the internet service entries.",
                                                        "items": {
                                                            "title": "Port Range",
                                                            "description": "Port range of the internet service entry.",
                                                            "type": "object",
                                                            "required": [
                                                                "start_port",
                                                                "end_port"
                                                            ],
                                                            "properties": {
                                                                "start_port": {
                                                                    "$ref": "#\/definitions\/start_port"
                                                                },
                                                                "end_port": {
                                                                    "$ref": "#\/definitions\/end_port"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "country_id": {
                                                        "type": "integer",
                                                        "title": "Country ID",
                                                        "description": "Country ID."
                                                    },
                                                    "region_id": {
                                                        "type": "integer",
                                                        "title": "Region ID",
                                                        "description": "Region ID."
                                                    },
                                                    "city_id": {
                                                        "type": "integer",
                                                        "title": "City ID",
                                                        "description": "City ID."
                                                    },
                                                    "popularity": {
                                                        "type": "integer",
                                                        "title": "Popularity",
                                                        "description": "Popularity of the internet service entry."
                                                    },
                                                    "reputation": {
                                                        "type": "integer",
                                                        "title": "Reputation",
                                                        "description": "IP address reputation ID."
                                                    },
                                                    "botnet_id": {
                                                        "type": "integer",
                                                        "title": "Botnet ID",
                                                        "description": "Botnet ID."
                                                    },
                                                    "blocklist": {
                                                        "type": "array",
                                                        "title": "IP Blocklists",
                                                        "description": "Blocklists on which the matched IP addresses are listed.",
                                                        "items": {
                                                            "title": "IP Blocklist",
                                                            "description": "Blocklist on which the matched IP address is listed.",
                                                            "type": "object",
                                                            "required": [
                                                                "vendor_id",
                                                                "reason_id"
                                                            ],
                                                            "properties": {
                                                                "vendor_id": {
                                                                    "type": "integer",
                                                                    "title": "Vendor ID",
                                                                    "description": "Vendor ID for the IP address blocklist."
                                                                },
                                                                "reason_id": {
                                                                    "type": "integer",
                                                                    "title": "Reason ID",
                                                                    "description": "Reason ID for the IP address blocklist."
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "disable_entry": {
                                            "type": "array",
                                            "title": "Disabled Internet Service Entries",
                                            "description": "Disabled internet service entries.",
                                            "items": {
                                                "title": "Disabled Internet Service Entry",
                                                "description": "Disabled internet service entry.",
                                                "type": "object",
                                                "required": [
                                                    "id",
                                                    "protocol",
                                                    "ip_range",
                                                    "port_range"
                                                ],
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "title": "ID",
                                                        "description": "Disabled internet service entry ID."
                                                    },
                                                    "protocol": {
                                                        "type": "integer",
                                                        "title": "Protocol",
                                                        "description": "Protocol number."
                                                    },
                                                    "ip_range": {
                                                        "type": "array",
                                                        "title": "IP Ranges",
                                                        "description": "IP address ranges of the disabled internet service entry.",
                                                        "items": {
                                                            "title": "IP Range",
                                                            "description": "IP address range of the internet service entry.",
                                                            "type": "object",
                                                            "required": [
                                                                "id",
                                                                "start_ip",
                                                                "end_ip"
                                                            ],
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "title": "IP Range ID",
                                                                    "description": "IP address range ID."
                                                                },
                                                                "start_ip": {
                                                                    "$ref": "#\/definitions\/start_ip"
                                                                },
                                                                "end_ip": {
                                                                    "$ref": "#\/definitions\/end_ip"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "port_range": {
                                                        "type": "array",
                                                        "title": "Port Ranges",
                                                        "description": "Port ranges of the disabled internet service entry.",
                                                        "items": {
                                                            "title": "Port Range",
                                                            "description": "Port range of the disabled internet service entry.",
                                                            "type": "object",
                                                            "required": [
                                                                "id",
                                                                "start_port",
                                                                "end_port"
                                                            ],
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "title": "Port Range ID",
                                                                    "description": "Port range ID."
                                                                },
                                                                "start_port": {
                                                                    "$ref": "#\/definitions\/start_port"
                                                                },
                                                                "end_port": {
                                                                    "$ref": "#\/definitions\/end_port"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ],
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/firewall\/internet-service-details.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the Internet Service to get details for.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "country_id",
                        "in": "query",
                        "description": "Filter: Country ID.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "region_id",
                        "in": "query",
                        "description": "Filter: Region ID.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "city_id",
                        "in": "query",
                        "description": "Filter: City ID.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Starting entry index. If a value is less than zero, it will be set to zero.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of entries to return. Valid range is [20, 1000]; if a value is specified out of that range, it will be rounded up or down. Default value is 1000.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "summary_only",
                        "in": "query",
                        "description": "Only return number of entries instead of entries.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/policy": {
            "get": {
                "summary": "List traffic statistics for firewall policies.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Firewall Policy Statistics",
                            "description": "List traffic statistics for firewall policies.",
                            "type": "array",
                            "items": {
                                "title": "Policy Statistics Entry",
                                "description": "Traffic statistics for a firewall policy.",
                                "type": "object",
                                "required": [
                                    "policyid",
                                    "active_sessions",
                                    "bytes",
                                    "packets"
                                ],
                                "properties": {
                                    "policyid": {
                                        "type": "integer",
                                        "title": "Policy ID",
                                        "description": "Policy ID."
                                    },
                                    "active_sessions": {
                                        "type": "integer",
                                        "title": "Active Sessions",
                                        "description": "Number of active sessions."
                                    },
                                    "bytes": {
                                        "type": "integer",
                                        "title": "Bytes",
                                        "description": "Bytes of traffic affected by this policy."
                                    },
                                    "packets": {
                                        "type": "integer",
                                        "title": "Packets",
                                        "description": "Number of packets affected by this policy."
                                    },
                                    "last_used": {
                                        "type": "integer",
                                        "title": "Last Used",
                                        "description": "Timestamp of when the policy was last used."
                                    },
                                    "first_used": {
                                        "type": "integer",
                                        "title": "First Used",
                                        "description": "Timestamp of when the policy was first used."
                                    },
                                    "hit_count": {
                                        "type": "integer",
                                        "title": "Hit Count",
                                        "description": "Number of times the policy has been used."
                                    },
                                    "uuid": {
                                        "type": "string",
                                        "title": "UUID",
                                        "description": "Policy UUID."
                                    },
                                    "uuid_type": {
                                        "type": "string",
                                        "title": "UUID Object Type",
                                        "description": "UUID object type.",
                                        "enum": [
                                            "firewall.policy"
                                        ]
                                    },
                                    "session_count": {
                                        "type": "integer",
                                        "title": "Session Count",
                                        "description": "Number of active established sessions."
                                    },
                                    "session_first_used": {
                                        "type": "integer",
                                        "title": "Session First Used",
                                        "description": "Timestamp of when the first session was established."
                                    },
                                    "session_last_used": {
                                        "type": "integer",
                                        "title": "Session Last Used",
                                        "description": "Timestamp of when the most recent established session was destroyed."
                                    },
                                    "software_bytes": {
                                        "type": "integer",
                                        "title": "Software Bytes",
                                        "description": "Bytes of traffic processed by this policy with software."
                                    },
                                    "software_packets": {
                                        "type": "integer",
                                        "title": "Software Packets",
                                        "description": "Number of packets processed by this policy with software."
                                    },
                                    "asic_bytes": {
                                        "type": "integer",
                                        "title": "SPU Bytes",
                                        "description": "Bytes of traffic processed by this policy with the SPU."
                                    },
                                    "asic_packets": {
                                        "type": "integer",
                                        "title": "SPU Packets",
                                        "description": "Number of packets processed by this policy with the SPU."
                                    },
                                    "nturbo_bytes": {
                                        "type": "integer",
                                        "title": "NTurbo Bytes",
                                        "description": "Bytes of traffic processed by this policy with nTurbo."
                                    },
                                    "nturbo_packets": {
                                        "type": "integer",
                                        "title": "NTurbo Packets",
                                        "description": "Number of packets processed by this policy with nTurbo."
                                    },
                                    "oversize": {
                                        "type": "boolean",
                                        "title": "Oversize",
                                        "description": "True when the number of addresses used by the policy exceeds the maximum number supported by the system."
                                    },
                                    "1_week_ipv4": {
                                        "type": "object",
                                        "title": "Firewall Policy IPv4 Weekly Statistics",
                                        "description": "List of the last week of IPv4 traffic statistics for a firewall policy.",
                                        "required": [
                                            "bytes",
                                            "packets",
                                            "hit_count"
                                        ],
                                        "properties": {
                                            "bytes": {
                                                "type": "array",
                                                "title": "Weekly Bytes",
                                                "description": "Bytes of IPv4 traffic affected by this policy in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            },
                                            "packets": {
                                                "type": "array",
                                                "title": "Weekly Packets",
                                                "description": "Packets of IPv4 traffic affected by this policy in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            },
                                            "hit_count": {
                                                "type": "array",
                                                "title": "Weekly Hit Count",
                                                "description": "Number of times the policy has been used by IPv4 traffic in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            },
                                            "software_bytes": {
                                                "type": "array",
                                                "title": "Weekly Software Bytes",
                                                "description": "Bytes of IPv4 traffic processed by this policy with software in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            },
                                            "software_packets": {
                                                "type": "array",
                                                "title": "Weekly Software Packets",
                                                "description": "Packets of IPv4 traffic processed by this policy with software in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            },
                                            "asic_bytes": {
                                                "type": "array",
                                                "title": "Weekly SPU Bytes",
                                                "description": "Bytes of IPv4 traffic processed by this policy with the SPU in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            },
                                            "asic_packets": {
                                                "type": "array",
                                                "title": "Weekly SPU Packets",
                                                "description": "Packets of IPv4 traffic processed by this policy with the SPU in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            },
                                            "nturbo_bytes": {
                                                "type": "array",
                                                "title": "Weekly NTurbo Bytes",
                                                "description": "Bytes of IPv4 traffic processed by this policy with nTurbo in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            },
                                            "nturbo_packets": {
                                                "type": "array",
                                                "title": "Weekly NTurbo Packets",
                                                "description": "Packets of IPv4 traffic processed by this policy with nTurbo in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            }
                                        }
                                    },
                                    "1_week_ipv6": {
                                        "type": "object",
                                        "title": "Firewall Policy IPv6 Weekly Statistics",
                                        "description": "List of the last week of IPv6 traffic statistics for a firewall policy.",
                                        "required": [
                                            "bytes",
                                            "packets",
                                            "hit_count"
                                        ],
                                        "properties": {
                                            "bytes": {
                                                "type": "array",
                                                "title": "Weekly Bytes",
                                                "description": "Bytes of IPv6 traffic affected by this policy in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            },
                                            "packets": {
                                                "type": "array",
                                                "title": "Weekly Packets",
                                                "description": "Packets of IPv6 traffic affected by this policy in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            },
                                            "hit_count": {
                                                "type": "array",
                                                "title": "Weekly Hit Count",
                                                "description": "Number of times the policy has been used by IPv6 traffic in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            },
                                            "software_bytes": {
                                                "type": "array",
                                                "title": "Weekly Software Bytes",
                                                "description": "Bytes of IPv6 traffic processed by this policy with software in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            },
                                            "software_packets": {
                                                "type": "array",
                                                "title": "Weekly Software Packets",
                                                "description": "Packets of IPv6 traffic processed by this policy with software in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            },
                                            "asic_bytes": {
                                                "type": "array",
                                                "title": "Weekly SPU Bytes",
                                                "description": "Bytes of IPv6 traffic processed by this policy with the SPU in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            },
                                            "asic_packets": {
                                                "type": "array",
                                                "title": "Weekly SPU Packets",
                                                "description": "Packets of IPv6 traffic processed by this policy with the SPU in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            },
                                            "nturbo_bytes": {
                                                "type": "array",
                                                "title": "Weekly NTurbo Bytes",
                                                "description": "Bytes of IPv6 traffic processed by this policy with nTurbo in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            },
                                            "nturbo_packets": {
                                                "type": "array",
                                                "title": "Weekly NTurbo Packets",
                                                "description": "Packets of IPv6 traffic processed by this policy with nTurbo in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/firewall\/policy.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "policyid",
                        "in": "query",
                        "description": "Filter: Policy ID.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ip_version",
                        "in": "query",
                        "description": "Filter: Traffic IP Version. [ ipv4 | ipv6 ], if left empty, will retrieve data for both ipv4 and ipv6.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/policy\/reset": {
            "post": {
                "summary": "Reset traffic statistics for all firewall policies.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/policy\/clear_counters": {
            "post": {
                "summary": "Reset traffic statistics for one or more firewall policies by policy ID.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "policy": {
                                    "description": "Single policy ID to reset.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/security-policy": {
            "get": {
                "summary": "List IPS engine statistics for security policies.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Firewall Security Policy Statistics",
                            "description": "List IPS engine statistics for security policies.",
                            "type": "array",
                            "items": {
                                "title": "Policy Statistics",
                                "description": "IPS engine statistics for a security policy.",
                                "type": "object",
                                "required": [
                                    "policyid",
                                    "hit_count"
                                ],
                                "properties": {
                                    "policyid": {
                                        "type": "integer",
                                        "title": "Policy ID",
                                        "description": "Policy ID."
                                    },
                                    "hit_count": {
                                        "type": "integer",
                                        "title": "Hit Count",
                                        "description": "Number of times the policy has been matched."
                                    },
                                    "uuid": {
                                        "type": "string",
                                        "title": "UUID",
                                        "description": "Object UUID."
                                    },
                                    "uuid_type": {
                                        "type": "string",
                                        "title": "UUID Object Type",
                                        "description": "UUID object type.",
                                        "enum": [
                                            "firewall.security-policy"
                                        ]
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/firewall\/security-policy.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "policyid",
                        "in": "query",
                        "description": "Filter: Policy ID.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/security-policy\/clear_counters": {
            "post": {
                "summary": "Reset traffic statistics for one or more security policies by policy ID.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "policy": {
                                    "description": "Single policy ID to reset.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/proxy-policy": {
            "get": {
                "summary": "List traffic statistics for all explicit proxy policies.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Firewall Explicit Proxy Policy Statistics",
                            "description": "List traffic statistics for all explicit proxy policies.",
                            "type": "array",
                            "items": {
                                "title": "Policy Statistics Entry",
                                "description": "Traffic statistics for an explicit proxy policy.",
                                "type": "object",
                                "required": [
                                    "policyid",
                                    "active_sessions",
                                    "bytes",
                                    "last_used",
                                    "first_used",
                                    "hit_count"
                                ],
                                "properties": {
                                    "policyid": {
                                        "type": "integer",
                                        "title": "Policy ID",
                                        "description": "Policy ID."
                                    },
                                    "active_sessions": {
                                        "type": "integer",
                                        "title": "Active Sessions",
                                        "description": "Active Sessions."
                                    },
                                    "bytes": {
                                        "type": "integer",
                                        "title": "Bytes",
                                        "description": "Bytes."
                                    },
                                    "last_used": {
                                        "type": "integer",
                                        "title": "Last Used",
                                        "description": "Timestamp of when policy was last used."
                                    },
                                    "first_used": {
                                        "type": "integer",
                                        "title": "First Used",
                                        "description": "Timestamp of when policy was first used."
                                    },
                                    "hit_count": {
                                        "type": "integer",
                                        "title": "Hit Count",
                                        "description": "Number of times policy has been used."
                                    },
                                    "uuid": {
                                        "type": "string",
                                        "title": "UUID",
                                        "description": "Object UUID."
                                    },
                                    "uuid_type": {
                                        "type": "string",
                                        "title": "UUID Object Type",
                                        "description": "UUID Object Type.",
                                        "enum": [
                                            "firewall.proxy-policy"
                                        ]
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/firewall\/proxy-policy.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "policyid",
                        "in": "query",
                        "description": "Filter: Policy ID.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/proxy-policy\/clear_counters": {
            "post": {
                "summary": "Reset traffic statistics for one or more explicit proxy policies by policy ID.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "policy": {
                                    "description": "Single policy ID to reset.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/multicast-policy": {
            "get": {
                "summary": "List traffic statistics for IPv4 firewall multicast policies.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "IPv4 Firewall Multicast Policy Statistics",
                            "description": "List traffic statistics for IPv4 firewall multicast policies.",
                            "type": "array",
                            "items": {
                                "title": "Policy Statistics Entry",
                                "description": "Traffic statistics for an IPv4 firewall multicast policy.",
                                "type": "object",
                                "required": [
                                    "policyid",
                                    "active_sessions",
                                    "bytes",
                                    "packets"
                                ],
                                "properties": {
                                    "policyid": {
                                        "type": "integer",
                                        "title": "Policy ID",
                                        "description": "Policy ID."
                                    },
                                    "active_sessions": {
                                        "type": "integer",
                                        "title": "Active Sessions",
                                        "description": "Number of active sessions."
                                    },
                                    "bytes": {
                                        "type": "integer",
                                        "title": "Bytes",
                                        "description": "Bytes of traffic affected by this policy."
                                    },
                                    "packets": {
                                        "type": "integer",
                                        "title": "Packets",
                                        "description": "Number of packets affected by this policy."
                                    },
                                    "last_used": {
                                        "type": "integer",
                                        "title": "Last Used",
                                        "description": "Timestamp of when the policy was last used."
                                    },
                                    "first_used": {
                                        "type": "integer",
                                        "title": "First Used",
                                        "description": "Timestamp of when the policy was first used."
                                    },
                                    "hit_count": {
                                        "type": "integer",
                                        "title": "Hit Count",
                                        "description": "Number of times the policy has been used."
                                    },
                                    "uuid": {
                                        "type": "string",
                                        "title": "UUID",
                                        "description": "Policy UUID."
                                    },
                                    "uuid_type": {
                                        "type": "string",
                                        "title": "UUID Object Type",
                                        "description": "UUID object type.",
                                        "enum": [
                                            "firewall.multicast-policy"
                                        ]
                                    },
                                    "session_count": {
                                        "type": "integer",
                                        "title": "Session Count",
                                        "description": "Number of active established sessions."
                                    },
                                    "session_first_used": {
                                        "type": "integer",
                                        "title": "Session First Used",
                                        "description": "Timestamp of when the first session was established."
                                    },
                                    "session_last_used": {
                                        "type": "integer",
                                        "title": "Session Last Used",
                                        "description": "Timestamp of when the most recent established session was destroyed."
                                    },
                                    "oversize": {
                                        "type": "boolean",
                                        "title": "Oversize",
                                        "description": "True when the number of addresses used by the policy exceeds the maximum number supported by the system."
                                    },
                                    "1_week_ipv4": {
                                        "type": "object",
                                        "title": "IPv4 Firewall Multicast Policy Weekly Statistics",
                                        "description": "List traffic statistics for an IPv4 firewall multicast policy in the last week.",
                                        "required": [
                                            "bytes",
                                            "packets",
                                            "hit_count"
                                        ],
                                        "properties": {
                                            "bytes": {
                                                "type": "array",
                                                "title": "Weekly Bytes",
                                                "description": "Bytes of IPv4 traffic affected by this policy in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            },
                                            "packets": {
                                                "type": "array",
                                                "title": "Weekly Packets",
                                                "description": "Packets of IPv4 traffic affected by this policy in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            },
                                            "hit_count": {
                                                "type": "array",
                                                "title": "Weekly Hit Count",
                                                "description": "Number of times the policy has been used by IPv4 traffic in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/firewall\/multicast-policy.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "policyid",
                        "in": "query",
                        "description": "Filter: Policy ID.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/multicast-policy6": {
            "get": {
                "summary": "List traffic statistics for IPv6 firewall multicast policies.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "IPv6 Firewall Multicast Policy Statistics",
                            "description": "List traffic statistics for IPv6 firewall multicast policies.",
                            "type": "array",
                            "items": {
                                "title": "Policy Statistics Entry",
                                "description": "Traffic statistics for an IPv6 firewall multicast policy.",
                                "type": "object",
                                "required": [
                                    "policyid",
                                    "active_sessions",
                                    "bytes",
                                    "packets"
                                ],
                                "properties": {
                                    "policyid": {
                                        "type": "integer",
                                        "title": "Policy ID",
                                        "description": "Policy ID."
                                    },
                                    "active_sessions": {
                                        "type": "integer",
                                        "title": "Active Sessions",
                                        "description": "Number of active sessions."
                                    },
                                    "bytes": {
                                        "type": "integer",
                                        "title": "Bytes",
                                        "description": "Bytes of traffic affected by this policy."
                                    },
                                    "packets": {
                                        "type": "integer",
                                        "title": "Packets",
                                        "description": "Number of packets affected by this policy."
                                    },
                                    "last_used": {
                                        "type": "integer",
                                        "title": "Last Used",
                                        "description": "Timestamp of when the policy was last used."
                                    },
                                    "first_used": {
                                        "type": "integer",
                                        "title": "First Used",
                                        "description": "Timestamp of when the policy was first used."
                                    },
                                    "hit_count": {
                                        "type": "integer",
                                        "title": "Hit Count",
                                        "description": "Number of times the policy has been used."
                                    },
                                    "uuid": {
                                        "type": "string",
                                        "title": "UUID",
                                        "description": "Policy UUID."
                                    },
                                    "uuid_type": {
                                        "type": "string",
                                        "title": "UUID Object Type",
                                        "description": "UUID object type.",
                                        "enum": [
                                            "firewall.multicast-policy6"
                                        ]
                                    },
                                    "session_count": {
                                        "type": "integer",
                                        "title": "Session Count",
                                        "description": "Number of active established sessions."
                                    },
                                    "session_first_used": {
                                        "type": "integer",
                                        "title": "Session First Used",
                                        "description": "Timestamp of when the first session was established."
                                    },
                                    "session_last_used": {
                                        "type": "integer",
                                        "title": "Session Last Used",
                                        "description": "Timestamp of when the most recent established session was destroyed."
                                    },
                                    "oversize": {
                                        "type": "boolean",
                                        "title": "Oversize",
                                        "description": "True when the number of addresses used by the policy exceeds the maximum number supported by the system."
                                    },
                                    "1_week_ipv6": {
                                        "type": "object",
                                        "title": "IPv6 Firewall Multicast Policy Weekly Statistics",
                                        "description": "List traffic statistics for an IPv6 firewall multicast policy in the last week.",
                                        "required": [
                                            "bytes",
                                            "packets",
                                            "hit_count"
                                        ],
                                        "properties": {
                                            "bytes": {
                                                "type": "array",
                                                "title": "Weekly Bytes",
                                                "description": "Bytes of IPv6 traffic affected by this policy in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            },
                                            "packets": {
                                                "type": "array",
                                                "title": "Weekly Packets",
                                                "description": "Packets of IPv6 traffic affected by this policy in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            },
                                            "hit_count": {
                                                "type": "array",
                                                "title": "Weekly Hit Count",
                                                "description": "Number of times the policy has been used by IPv6 traffic in the last week.",
                                                "items": {
                                                    "type": "integer",
                                                    "title": "One Statistic",
                                                    "description": "One Statistic."
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/firewall\/multicast-policy6.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "policyid",
                        "in": "query",
                        "description": "Filter: Policy ID.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/multicast-policy\/reset": {
            "post": {
                "summary": "Reset traffic statistics for all IPv4 firewall multicast policies.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/multicast-policy6\/reset": {
            "post": {
                "summary": "Reset traffic statistics for all IPv6 firewall multicast policies.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/multicast-policy\/clear_counters": {
            "post": {
                "summary": "Reset traffic statistics for one or more firewall IPv4 multicast policies by policy ID.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "policy": {
                                    "description": "Single policy ID to reset.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/multicast-policy6\/clear_counters": {
            "post": {
                "summary": "Reset traffic statistics for one or more firewall IPv6 multicast policies by policy ID.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "policy": {
                                    "description": "Single policy ID to reset.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/policy-lookup": {
            "get": {
                "summary": "Performs a policy lookup by creating a dummy packet and asking the kernel which policy would be hit.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "ipv6",
                        "in": "query",
                        "description": "Perform an IPv6 lookup?",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "srcintf",
                        "in": "query",
                        "description": "Source interface.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "sourceport",
                        "in": "query",
                        "description": "Source port.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "sourceip",
                        "in": "query",
                        "description": "Source IP.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "protocol",
                        "in": "query",
                        "description": "Protocol.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "in": "query",
                        "description": "Destination IP\/FQDN.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "destport",
                        "in": "query",
                        "description": "Destination port.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "icmptype",
                        "in": "query",
                        "description": "ICMP type.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "icmpcode",
                        "in": "query",
                        "description": "ICMP code.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/session": {
            "get": {
                "summary": "List all active firewall sessions (optionally filtered).\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Firewall Sessions",
                            "description": "List all active firewall sessions (optionally filtered).",
                            "type": "object",
                            "required": [
                                "details"
                            ],
                            "properties": {
                                "summary": {
                                    "title": "Firewall Sessions Summary",
                                    "description": "Summary of sessions.",
                                    "type": "object",
                                    "required": [
                                        "matched_count",
                                        "session_count",
                                        "setup_rate"
                                    ],
                                    "properties": {
                                        "matched_count": {
                                            "type": "integer",
                                            "title": "Sessions Matched",
                                            "description": "Number of matching sessions."
                                        },
                                        "session_count": {
                                            "type": "integer",
                                            "title": "Sessions Count",
                                            "description": "Total number of sessions."
                                        },
                                        "matched_npu_count": {
                                            "type": "integer",
                                            "title": "NPU Sessions Matched",
                                            "description": "Number of matching NPU sessions."
                                        },
                                        "npu_session_count": {
                                            "type": "integer",
                                            "title": "NPU Sessions Count",
                                            "description": "Total number of NPU sessions."
                                        },
                                        "matched_nturbo_count": {
                                            "type": "integer",
                                            "title": "NTurbo Sessions Matched",
                                            "description": "Number of matching NTurbo sessions."
                                        },
                                        "nturbo_session_count": {
                                            "type": "integer",
                                            "title": "NTurbo Sessions Count",
                                            "description": "Total number of NTurbo sessions."
                                        },
                                        "setup_rate": {
                                            "type": "integer",
                                            "title": "Sessions Setup Rate",
                                            "description": "Number of new sessions setup."
                                        }
                                    }
                                },
                                "details": {
                                    "title": "Firewall Session Details",
                                    "description": "Firewall session detailed statistics and information.",
                                    "type": "array",
                                    "items": {
                                        "title": "Firewall Session Details Entry",
                                        "description": "Details for a firewall session.",
                                        "type": "object",
                                        "required": [
                                            "proto",
                                            "srcintf",
                                            "saddr",
                                            "sport",
                                            "dstintf",
                                            "daddr",
                                            "dport",
                                            "policytype",
                                            "vf",
                                            "expiry",
                                            "apps",
                                            "app_list_id",
                                            "sentbyte",
                                            "rcvdbyte",
                                            "tx_packets",
                                            "rx_packets",
                                            "tx_shaper_drops",
                                            "rx_shaper_drops"
                                        ],
                                        "properties": {
                                            "proto": {
                                                "type": "string",
                                                "title": "Session IP Protocol",
                                                "description": "Protocol name (for TCP or UDP), or protocol number."
                                            },
                                            "srcintf": {
                                                "type": "string",
                                                "title": "Source Interface",
                                                "description": "Source interface."
                                            },
                                            "saddr": {
                                                "type": "string",
                                                "title": "Source IP Address",
                                                "description": "Source IP address."
                                            },
                                            "sport": {
                                                "type": "integer",
                                                "title": "Source Port",
                                                "description": "Source port."
                                            },
                                            "srcmac": {
                                                "type": "string",
                                                "title": "Source MAC Address",
                                                "description": "Source MAC address."
                                            },
                                            "dstmac": {
                                                "type": "string",
                                                "title": "Destination MAC Address",
                                                "description": "Destination MAC address."
                                            },
                                            "dstintf": {
                                                "type": "string",
                                                "title": "Destination Interface",
                                                "description": "Destination interface."
                                            },
                                            "daddr": {
                                                "type": "string",
                                                "title": "Destination IP Address",
                                                "description": "Destination IP address."
                                            },
                                            "dport": {
                                                "type": "integer",
                                                "title": "Destination Port",
                                                "description": "Destination port."
                                            },
                                            "src_uuid": {
                                                "type": "string",
                                                "title": "Source Address Object UUID",
                                                "description": "UUID of the source address object."
                                            },
                                            "src_uuid_type": {
                                                "type": "string",
                                                "title": "Source Address Object UUID Type",
                                                "description": "UUID type of the source address object."
                                            },
                                            "dst_uuid": {
                                                "type": "string",
                                                "title": "Destination Address Object UUID",
                                                "description": "UUID of the destination address object."
                                            },
                                            "dst_uuid_type": {
                                                "type": "string",
                                                "title": "Destination Address Object UUID Type",
                                                "description": "UUID type of the destination address object."
                                            },
                                            "username": {
                                                "type": "string",
                                                "title": "Username",
                                                "description": "Username that is populated by various sources."
                                            },
                                            "country": {
                                                "type": "string",
                                                "title": "Country\/Region Name",
                                                "description": "Name of the country\/region identified by the destination IP address."
                                            },
                                            "country_id": {
                                                "type": "integer",
                                                "title": "Country\/Region ID",
                                                "description": "ID of the country\/region identified by the destination IP address."
                                            },
                                            "dnaddr": {
                                                "type": "string",
                                                "title": "Destination NAT IP Address",
                                                "description": "The destination IP address after NAT when applying DNAT."
                                            },
                                            "dnport": {
                                                "type": "integer",
                                                "title": "Destination NAT Port",
                                                "description": "The destination port after NAT when applying DNAT."
                                            },
                                            "snaddr": {
                                                "type": "string",
                                                "title": "Source NAT IP Address",
                                                "description": "The source IP address after NAT when applying SNAT."
                                            },
                                            "snport": {
                                                "type": "integer",
                                                "title": "Source NAT Port",
                                                "description": "The source port after NAT when applying SNAT."
                                            },
                                            "policyid": {
                                                "type": "integer",
                                                "title": "Policy ID",
                                                "description": "Policy ID for the session."
                                            },
                                            "policytype": {
                                                "type": "string",
                                                "title": "Policy Type",
                                                "description": "Policy type.",
                                                "enum": [
                                                    "policy",
                                                    "policy6",
                                                    "security-policy"
                                                ]
                                            },
                                            "vf": {
                                                "type": "string",
                                                "title": "VDOM Name",
                                                "description": "Name of the VDOM."
                                            },
                                            "expiry": {
                                                "type": "string",
                                                "title": "Session Expiry",
                                                "description": "Seconds to session expiry."
                                            },
                                            "duration": {
                                                "type": "integer",
                                                "title": "Session Duration",
                                                "description": "Duration of the session, in seconds."
                                            },
                                            "shaper": {
                                                "type": "string",
                                                "title": "Traffic Shaper",
                                                "description": "Name of the traffic shaper used for the session."
                                            },
                                            "reverse_shaper": {
                                                "type": "string",
                                                "title": "Reverse Traffic Shaper",
                                                "description": "Name of the reverse traffic shaper used for the session."
                                            },
                                            "apps": {
                                                "type": "array",
                                                "title": "Detected Applications",
                                                "description": "List of applications detected in session traffic.",
                                                "items": {
                                                    "title": "Detected Application Entry",
                                                    "description": "An application detected in session traffic.",
                                                    "type": "object",
                                                    "required": [
                                                        "id"
                                                    ],
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "title": "Application ID",
                                                            "description": "Application ID number."
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "title": "Application Name",
                                                            "description": "Application name."
                                                        },
                                                        "protocol": {
                                                            "type": "integer",
                                                            "title": "Application Protocol",
                                                            "description": "Application protocol number."
                                                        },
                                                        "protocol_str": {
                                                            "type": "string",
                                                            "title": "Application Protocol Name",
                                                            "description": "Application protocol name."
                                                        },
                                                        "port": {
                                                            "type": "integer",
                                                            "title": "Application Port Number",
                                                            "description": "Application port number."
                                                        }
                                                    }
                                                }
                                            },
                                            "app_list_id": {
                                                "type": "integer",
                                                "title": "Detected Application ID",
                                                "description": "ID of the detected application."
                                            },
                                            "sentbyte": {
                                                "type": "integer",
                                                "title": "Sent Bytes",
                                                "description": "Number of bytes sent by the session."
                                            },
                                            "rcvdbyte": {
                                                "type": "integer",
                                                "title": "Received Bytes",
                                                "description": "Number of bytes received by the session."
                                            },
                                            "tx_packets": {
                                                "type": "integer",
                                                "title": "Sent Packets",
                                                "description": "Number of packets sent by the session."
                                            },
                                            "rx_packets": {
                                                "type": "integer",
                                                "title": "Received Packets",
                                                "description": "Number of packets received by the session."
                                            },
                                            "tx_shaper_drops": {
                                                "type": "integer",
                                                "title": "Shaper Dropped Sent",
                                                "description": "Number of sent bytes from the session which were dropped by traffic shaper."
                                            },
                                            "rx_shaper_drops": {
                                                "type": "integer",
                                                "title": "Shaper Dropped Received",
                                                "description": "Number of received bytes from the session which were dropped by traffic shaper."
                                            },
                                            "fortiasic": {
                                                "type": "string",
                                                "title": "FortiASIC Type",
                                                "description": "FortiASIC acceleration type.",
                                                "enum": [
                                                    "NP1",
                                                    "NP1A",
                                                    "NP2",
                                                    "NP4",
                                                    "SP",
                                                    "NPLite",
                                                    "NP6Lite",
                                                    "NP6XLite",
                                                    "NP7",
                                                    "SP3",
                                                    "NP6"
                                                ]
                                            },
                                            "nat46": {
                                                "type": "string",
                                                "title": "NAT Type",
                                                "description": "NAT Type.",
                                                "enum": [
                                                    "46",
                                                    "64"
                                                ]
                                            },
                                            "daddr_peer4": {
                                                "type": "string",
                                                "title": "Peer IPv4 Destination Address",
                                                "description": "The peer destination IPv4 address when applying NAT64\/NAT46."
                                            },
                                            "dport_peer4": {
                                                "type": "integer",
                                                "title": "Peer IPv4 Destination Port",
                                                "description": "The peer IPv4 destination port when applying NAT64\/NAT46."
                                            },
                                            "saddr_peer4": {
                                                "type": "string",
                                                "title": "Peer IPv4 Source Address",
                                                "description": "The peer IPv4 source address when applying NAT64\/NAT46."
                                            },
                                            "sport_peer4": {
                                                "type": "integer",
                                                "title": "Peer IPv4 Source Port",
                                                "description": "The peer IPv4 source port when applying NAT64\/NAT46."
                                            },
                                            "daddr_peer6": {
                                                "type": "string",
                                                "title": "Peer IPv6 Destination Address",
                                                "description": "The peer destination IPv6 address when applying NAT64\/NAT46."
                                            },
                                            "dport_peer6": {
                                                "type": "integer",
                                                "title": "Peer IPv6 Destination Port",
                                                "description": "The peer IPv6 destination port when applying NAT64\/NAT46."
                                            },
                                            "saddr_peer6": {
                                                "type": "string",
                                                "title": "Peer IPv6 Source Address",
                                                "description": "The peer IPv6 source address when applying NAT64\/NAT46."
                                            },
                                            "sport_peer6": {
                                                "type": "integer",
                                                "title": "Peer IPv6 Source Port",
                                                "description": "The peer IPv6 source port when applying NAT64\/NAT46."
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/firewall\/session.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "ip_version",
                        "in": "query",
                        "description": "IP version [*ipv4 | ipv6 | ipboth].",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Starting entry index.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of entries to return. Valid range is [20, 1000]; if a value is specified out of that range, it will be rounded up or down.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "summary",
                        "in": "query",
                        "description": "Enable\/disable inclusion of session summary (setup rate, total sessions, etc).",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sourceport",
                        "in": "query",
                        "description": "Filter: Source port.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "policyid",
                        "in": "query",
                        "description": "Filter: Policy ID.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "security-policyid",
                        "in": "query",
                        "description": "Filter: Security Policy ID.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "application",
                        "in": "query",
                        "description": "Filter: Application ID.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "application",
                        "in": "query",
                        "description": "Filter: Application PROTO\/PORT. (e.g. \"TCP\/443\")",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "protocol",
                        "in": "query",
                        "description": "Filter: Protocol name [all|igmp|tcp|udp|icmp|etc].",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "destport",
                        "in": "query",
                        "description": "Filter: Destination port.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "srcintf",
                        "in": "query",
                        "description": "Filter: Source interface name.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dstintf",
                        "in": "query",
                        "description": "Filter: Destination interface name.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "srcintfrole",
                        "in": "query",
                        "description": "Filter: Source interface roles.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dstintfrole",
                        "in": "query",
                        "description": "Filter: Destination interface roles.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "Filter: Source IP address.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "srcuuid",
                        "in": "query",
                        "description": "Filter: Source UUID.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "destination",
                        "in": "query",
                        "description": "Filter: Destination IP address.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dstuuid",
                        "in": "query",
                        "description": "Filter: Destination UUID.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "description": "Filter: Authenticated username.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "shaper",
                        "in": "query",
                        "description": "Filter: Forward traffic shaper name.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Filter: Destination country name.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "owner",
                        "in": "query",
                        "description": "Filter: Destination owner.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "natsourceaddress",
                        "in": "query",
                        "description": "Filter: NAT source address.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "natsourceport",
                        "in": "query",
                        "description": "Filter: NAT source port.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter-csf",
                        "in": "query",
                        "description": "Filter: Include sessions from downstream fortigates.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "description": "Filter: Only return sessions generated since this Unix timestamp.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "seconds",
                        "in": "query",
                        "description": "Filter: Only return sessions generated in the last N seconds.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "web-domain",
                        "in": "query",
                        "description": "Filter: Web domain.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "web-category",
                        "in": "query",
                        "description": "Filter: Web category.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fortiasic",
                        "in": "query",
                        "description": "Filter: 1 to include NPU accelerated sessions, 0 to exclude.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "nturbo",
                        "in": "query",
                        "description": "Filter: 1 to include nTurbo sessions, 0 to exclude.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/session\/close-multiple": {
            "post": {
                "summary": "Close multiple IPv4 firewall sessions which match the provided criteria.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "proto": {
                                    "description": "Protocol name [tcp|udp|icmp|...] or number.",
                                    "type": "string"
                                },
                                "saddr": {
                                    "description": "Source address.",
                                    "type": "string"
                                },
                                "daddr": {
                                    "description": "Destination address.",
                                    "type": "string"
                                },
                                "sport": {
                                    "description": "Source port.",
                                    "type": "integer"
                                },
                                "dport": {
                                    "description": "Destination port.",
                                    "type": "integer"
                                },
                                "naddr": {
                                    "description": "NAT'd source IP address.",
                                    "type": "string"
                                },
                                "nport": {
                                    "description": "NAT'd source port.",
                                    "type": "integer"
                                },
                                "policy": {
                                    "description": "Policy ID.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/session6\/close-multiple": {
            "post": {
                "summary": "Close multiple IPv6 firewall sessions which match the provided criteria.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "proto": {
                                    "description": "Protocol name [tcp|udp|icmp|...] or number.",
                                    "type": "string"
                                },
                                "saddr": {
                                    "description": "Source address.",
                                    "type": "string"
                                },
                                "daddr": {
                                    "description": "Destination address.",
                                    "type": "string"
                                },
                                "sport": {
                                    "description": "Source port.",
                                    "type": "integer"
                                },
                                "dport": {
                                    "description": "Destination port.",
                                    "type": "integer"
                                },
                                "policy": {
                                    "description": "Policy ID.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/session\/clear_all": {
            "post": {
                "summary": "Immediately clear all active IPv4 and IPv6 sessions and IPS sessions of current VDOM.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Clear Active Sessions",
                            "description": "Immediately clears all active IPv4 and IPv6 sessions and IPS sessions of current VDOM.",
                            "type": "null",
                            "deprecated": true,
                            "x-scheduledRemoval": {
                                "major": 7,
                                "minor": 2
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/firewall\/session.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/session\/close-all": {
            "post": {
                "summary": "Immediately close all active IPv4 and IPv6 sessions, as well as IPS sessions of the current VDOM.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/session\/close": {
            "post": {
                "summary": "Close a single firewall session that matches all provided criteria.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "pro": {
                                    "description": "Protocol name [tcp|udp|icmp|...].",
                                    "type": "string"
                                },
                                "saddr": {
                                    "description": "Source address.",
                                    "type": "string"
                                },
                                "daddr": {
                                    "description": "Destination address.",
                                    "type": "string"
                                },
                                "sport": {
                                    "description": "Source port.",
                                    "type": "integer"
                                },
                                "dport": {
                                    "description": "Destination port.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/shaper": {
            "get": {
                "summary": "List of statistics for configured firewall shared traffic shapers.\nAccess Group: fwgrp.others",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/shaper\/reset": {
            "post": {
                "summary": "Reset statistics for all configured traffic shapers.\nAccess Group: fwgrp.others",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/shaper\/multi-class-shaper": {
            "get": {
                "summary": "List of statistics for multi-class shapers.\nAccess Group: fwgrp.others",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Multi-Class Shapers",
                            "description": "List of multi-class shapers.",
                            "type": "array",
                            "items": {
                                "title": "Multi-Class Shaper",
                                "description": "A multi-class shaper.",
                                "type": "object",
                                "required": [
                                    "interface",
                                    "bandwidth",
                                    "default_class",
                                    "active_classes"
                                ],
                                "properties": {
                                    "interface": {
                                        "title": "Interface",
                                        "description": "Name of the interface that this multi-class shaper applies to.",
                                        "type": "string"
                                    },
                                    "bandwidth": {
                                        "title": "Bandwidth",
                                        "description": "Traffic bandwidth going through this interface, in kbps.",
                                        "type": "integer"
                                    },
                                    "default_class": {
                                        "title": "Default Class",
                                        "description": "Default traffic shaping class ID.",
                                        "type": "integer"
                                    },
                                    "active_classes": {
                                        "title": "Active Classes",
                                        "description": "Active traffic shaping classes.",
                                        "type": "array",
                                        "items": {
                                            "title": "Traffic Shaping Class",
                                            "description": "A traffic shaping class.",
                                            "type": "object",
                                            "required": [
                                                "class_id",
                                                "allocated_bandwidth",
                                                "guaranteed_bandwidth",
                                                "max_bandwidth",
                                                "current_bandwidth",
                                                "priority",
                                                "forwarded_bytes",
                                                "dropped_packets",
                                                "dropped_bytes"
                                            ],
                                            "properties": {
                                                "class_id": {
                                                    "title": "Class ID",
                                                    "description": "Traffic shaping class ID.",
                                                    "type": "integer"
                                                },
                                                "class_name": {
                                                    "title": "Class Name",
                                                    "description": "Traffic shaping class name.",
                                                    "type": "string"
                                                },
                                                "allocated_bandwidth": {
                                                    "title": "Allocated Bandwidth",
                                                    "description": "Bandwidth allocated for this traffic shaping class, in kbps.",
                                                    "type": "integer"
                                                },
                                                "guaranteed_bandwidth": {
                                                    "title": "Guaranteed Bandwidth",
                                                    "description": "Bandwidth guaranteed for this traffic shaping class, in kbps.",
                                                    "type": "integer"
                                                },
                                                "max_bandwidth": {
                                                    "title": "Maximum Bandwidth",
                                                    "description": "Maximum bandwidth that can be allocated for this traffic shaping class, in kbps.",
                                                    "type": "integer"
                                                },
                                                "current_bandwidth": {
                                                    "title": "Current Bandwidth",
                                                    "description": "Current bandwidth used by this traffic shaping class, in kbps.",
                                                    "type": "integer"
                                                },
                                                "priority": {
                                                    "title": "Priority",
                                                    "description": "Priority of this traffic shaping class.",
                                                    "type": "string",
                                                    "enum": [
                                                        "top",
                                                        "critical",
                                                        "high",
                                                        "medium",
                                                        "low",
                                                        "unknown"
                                                    ]
                                                },
                                                "forwarded_bytes": {
                                                    "title": "Forwarded Bytes",
                                                    "description": "Number of bytes forwarded that match this traffic shaping class.",
                                                    "type": "integer"
                                                },
                                                "dropped_packets": {
                                                    "title": "Dropped Packets",
                                                    "description": "Number of packets dropped that match this traffic shaping class.",
                                                    "type": "integer"
                                                },
                                                "dropped_bytes": {
                                                    "title": "Dropped Bytes",
                                                    "description": "Number of bytes dropped that match this traffic shaping class.",
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    },
                                    "parent": {
                                        "title": "Parent Interface",
                                        "description": "Name of the parent interface.",
                                        "type": "string"
                                    },
                                    "remote_gateway": {
                                        "title": "Remote Gateway",
                                        "description": "Remote gateway IP address of the interface. Applicable when interface is an IPsec tunnel.",
                                        "type": "string"
                                    },
                                    "network_id": {
                                        "title": "Network ID",
                                        "description": "Network ID of the interface. Applicable when interface is an IPsec tunnel.",
                                        "type": "integer"
                                    },
                                    "peer_id": {
                                        "title": "Peer ID",
                                        "description": "Peer ID of the VPN connection. Applicable when interface is an IPsec tunnel with certificate authentication.",
                                        "type": "string"
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/firewall\/shaper.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/per-ip-shaper": {
            "get": {
                "summary": "List of statistics for configured firewall per-IP traffic shapers.\nAccess Group: fwgrp.others",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/per-ip-shaper\/reset": {
            "post": {
                "summary": "Reset statistics for all configured firewall per-IP traffic shapers.\nAccess Group: fwgrp.others",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/load-balance": {
            "get": {
                "summary": "List all firewall load balance servers.\nAccess Group: fwgrp.others",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Starting entry index.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of entries to return.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/address-fqdns": {
            "get": {
                "summary": "List of FQDN address objects and the IPs they resolved to.\nAccess Group: fwgrp.address",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/address-fqdns6": {
            "get": {
                "summary": "List of IPv6 FQDN address objects and the IPs they resolved to.\nAccess Group: fwgrp.address",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/clearpass-address\/add": {
            "post": {
                "summary": "Add ClearPass address with SPT (System Posture Token) value.\nAccess Group: fwgrp.address",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "endpoint_ip": {
                                    "description": "Endpoint IPv4 address.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "spt": {
                                    "description": "SPT value [healthy|checkup|transient|quarantine|infected|unknown*].",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/clearpass-address\/delete": {
            "post": {
                "summary": "Delete ClearPass address with SPT (System Posture Token) value.\nAccess Group: fwgrp.address",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "endpoint_ip": {
                                    "description": "Endpoint IPv4 address.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "spt": {
                                    "description": "SPT value [healthy|checkup|transient|quarantine|infected|unknown*].",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/ippool": {
            "get": {
                "summary": "List IPv4 pool statistics.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/ippool\/mapping": {
            "get": {
                "summary": "Get the list of IPv4 mappings for the specified IP pool.\nAccess Group: fwgrp.policy",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "NAT Address Mappings",
                            "description": "List of current NAT address mappings.",
                            "type": "array",
                            "items": {
                                "title": "NAT Address Mapping",
                                "description": "Details of a NAT address mapping.",
                                "type": "object",
                                "required": [
                                    "internal_ip",
                                    "external_ip",
                                    "start_port",
                                    "end_port"
                                ],
                                "properties": {
                                    "internal_ip": {
                                        "title": "Internal IP",
                                        "description": "Internal IP address of the NAT address mapping.",
                                        "type": "string"
                                    },
                                    "external_ip": {
                                        "title": "External IP",
                                        "description": "External IP address used for the NAT address mapping.",
                                        "type": "string"
                                    },
                                    "start_port": {
                                        "title": "Starting Port",
                                        "description": "Starting port of the NAT address mapping.",
                                        "type": "integer"
                                    },
                                    "end_port": {
                                        "title": "Ending Port",
                                        "description": "Ending port of the NAT address mapping.",
                                        "type": "integer"
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/firewall\/ippool.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "The IP pool name.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/uuid-list": {
            "get": {
                "summary": "Retrieve a list of all UUIDs with their object type and VDOM.\nAccess Group: fwgrp.address",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/uuid-type-lookup": {
            "get": {
                "summary": "Retrieve a mapping of UUIDs to their firewall object type for given UUIDs.\nAccess Group: fwgrp.address",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Firewall Object Type Lookup by UUID",
                            "description": "Retrieve the firewall object types for provided UUIDs.",
                            "type": "object",
                            "additionalProperties": {
                                "title": "UUIDs and Types",
                                "description": "Each key is a UUID. Each value is the discovered object type for that UUID.",
                                "type": "string"
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/firewall\/uuid-type-lookup.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "uuids",
                        "in": "query",
                        "description": "UUID to be resolved.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "uuids",
                        "in": "query",
                        "description": "List of UUIDs to be resolved.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/address-dynamic": {
            "get": {
                "summary": "List of Fabric Connector address objects and the IPs they resolve to.\nAccess Group: fwgrp.address",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#",
                            "title": "Dynamic IPv4 Addresses",
                            "description": "A mapping of dynamic IPv4 addresses and the list of addresses or MAC addresses they resolve to.",
                            "type": "object",
                            "patternProperties": {
                                "^[^<>()#'\"]*$": {
                                    "title": "Dynamic IPv4 Address Entry",
                                    "description": "Details of an IPv4 Dynamic Address.",
                                    "type": "object",
                                    "properties": {
                                        "addrs": {
                                            "title": "Address\/MAC List",
                                            "description": "List of resolved IPv4 addresses or MACs.",
                                            "type": "array",
                                            "items": {
                                                "title": "IPv4 Address\/MAC",
                                                "description": "An IPv4 Address or MAC address.",
                                                "type": "string"
                                            }
                                        },
                                        "subtype": {
                                            "title": "Subtype",
                                            "description": "The dynamic address subtype.",
                                            "type": "string",
                                            "enum": [
                                                "clearpass-spt",
                                                "ems-tag",
                                                "fsso",
                                                "sdn",
                                                "swc-tag"
                                            ]
                                        }
                                    }
                                }
                            },
                            "additionalProperties": true,
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/firewall\/address-dynamic.json"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Name of the dynamic address to retrieve. If this is not provided, all dynamic addresses will be retrieved.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/address6-dynamic": {
            "get": {
                "summary": "List of IPv6 Fabric Connector address objects and the IPs they resolve to.\nAccess Group: fwgrp.address",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#",
                            "title": "Dynamic IPv6 Addresses",
                            "description": "A mapping of dynamic IPv6 addresses and the list of addresses or MAC addresses they resolve to.",
                            "type": "object",
                            "patternProperties": {
                                "^[^<>()#'\"]*$": {
                                    "title": "Dynamic IPv6 Address Entry",
                                    "description": "Details of an IPv6 Dynamic Address.",
                                    "type": "object",
                                    "properties": {
                                        "addrs": {
                                            "title": "Address\/MAC List",
                                            "description": "List of resolved IPv6 addresses or MACs.",
                                            "type": "array",
                                            "items": {
                                                "title": "IPv6 Address\/MAC",
                                                "description": "An IPv6 Address or MAC address.",
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "additionalProperties": true,
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/firewall\/address6-dynamic.json"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Name of the dynamic address to retrieve. If this is not provided, all dynamic addresses will be retrieved.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/firewall\/sdn-connector-filters": {
            "get": {
                "summary": "List all available filters for a specified SDN Fabric Connector. Used for Fabric Connector address objects.\nAccess Group: fwgrp.address",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "connector",
                        "in": "query",
                        "description": "Name of the SDN Fabric Connector to get the filters from.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "firewall"
                ]
            }
        },
        "\/fortiguard\/redirect-portal": {
            "get": {
                "summary": "Retrieve the FortiGuard redirect portal IP.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "fortiguard"
                ]
            }
        },
        "\/fortiguard\/service-communication-stats": {
            "get": {
                "summary": "Retrieve historical statistics for communication with FortiGuard services.\nAccess Group: sysgrp.mnt",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiGuard Service Communication Statistics",
                            "description": "Retrieve historical statistics for communication with FortiGuard services.",
                            "type": "object",
                            "properties": {
                                "forticare": {
                                    "title": "FortiCare Statistics",
                                    "description": "FortiCare statistics.",
                                    "type": "object",
                                    "properties": {
                                        "1_week": {
                                            "type": "array",
                                            "title": "Statistics in the Last Week",
                                            "description": "Statistics in the last week.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        },
                                        "1_hour": {
                                            "type": "array",
                                            "title": "Statistics in the Last Hour",
                                            "description": "Statistics in the last hour.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        },
                                        "24_hour": {
                                            "type": "array",
                                            "title": "Statistics in the Last 24 Hours",
                                            "description": "Statistics in the last 24 hours.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "fortiguard_download": {
                                    "title": "FortiGuard Download Statistics",
                                    "description": "FortiGuard download statistics.",
                                    "type": "object",
                                    "properties": {
                                        "1_week": {
                                            "type": "array",
                                            "title": "Statistics in the Last Week",
                                            "description": "Statistics in the last week.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        },
                                        "1_hour": {
                                            "type": "array",
                                            "title": "Statistics in the Last Hour",
                                            "description": "Statistics in the last hour.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        },
                                        "24_hour": {
                                            "type": "array",
                                            "title": "Statistics in the Last 24 Hours",
                                            "description": "Statistics in the last 24 hours.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "fortiguard_query": {
                                    "title": "FortiGuard Query Statistics",
                                    "description": "FortiGuard query statistics.",
                                    "type": "object",
                                    "properties": {
                                        "1_week": {
                                            "type": "array",
                                            "title": "Statistics in the Last Week",
                                            "description": "Statistics in the last week.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        },
                                        "1_hour": {
                                            "type": "array",
                                            "title": "Statistics in the Last Hour",
                                            "description": "Statistics in the last hour.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        },
                                        "24_hour": {
                                            "type": "array",
                                            "title": "Statistics in the Last 24 Hours",
                                            "description": "Statistics in the last 24 hours.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "forticloud_log": {
                                    "title": "FortiCloud Log Statistics",
                                    "description": "FortiCloud log statistics.",
                                    "type": "object",
                                    "properties": {
                                        "1_week": {
                                            "type": "array",
                                            "title": "Statistics in the Last Week",
                                            "description": "Statistics in the last week.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        },
                                        "1_hour": {
                                            "type": "array",
                                            "title": "Statistics in the Last Hour",
                                            "description": "Statistics in the last hour.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        },
                                        "24_hour": {
                                            "type": "array",
                                            "title": "Statistics in the Last 24 Hours",
                                            "description": "Statistics in the last 24 hours.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "fortisandbox_cloud": {
                                    "title": "FortiSandbox Cloud Statistics",
                                    "description": "FortiSandbox cloud statistics.",
                                    "type": "object",
                                    "properties": {
                                        "1_week": {
                                            "type": "array",
                                            "title": "Statistics in the Last Week",
                                            "description": "Statistics in the last week.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        },
                                        "1_hour": {
                                            "type": "array",
                                            "title": "Statistics in the Last Hour",
                                            "description": "Statistics in the last hour.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        },
                                        "24_hour": {
                                            "type": "array",
                                            "title": "Statistics in the Last 24 Hours",
                                            "description": "Statistics in the last 24 hours.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "fortiguard.com": {
                                    "title": "Fortiguard.com Statistics",
                                    "description": "Statistics from fortiguard.com.",
                                    "type": "object",
                                    "properties": {
                                        "1_week": {
                                            "type": "array",
                                            "title": "Statistics in the Last Week",
                                            "description": "Statistics in the last week.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        },
                                        "1_hour": {
                                            "type": "array",
                                            "title": "Statistics in the Last Hour",
                                            "description": "Statistics in the last hour.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        },
                                        "24_hour": {
                                            "type": "array",
                                            "title": "Statistics in the Last 24 Hours",
                                            "description": "Statistics in the last 24 hours.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "ocvpn": {
                                    "title": "OCVPN Statistics",
                                    "description": "OCVPN statistics.",
                                    "type": "object",
                                    "properties": {
                                        "1_week": {
                                            "type": "array",
                                            "title": "Statistics in the Last Week",
                                            "description": "Statistics in the last week.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        },
                                        "1_hour": {
                                            "type": "array",
                                            "title": "Statistics in the Last Hour",
                                            "description": "Statistics in the last hour.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        },
                                        "24_hour": {
                                            "type": "array",
                                            "title": "Statistics in the Last 24 Hours",
                                            "description": "Statistics in the last 24 hours.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "sdns": {
                                    "title": "SDNS Statistics",
                                    "description": "SDNS statistics.",
                                    "type": "object",
                                    "properties": {
                                        "1_week": {
                                            "type": "array",
                                            "title": "Statistics in the Last Week",
                                            "description": "Statistics in the last week.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        },
                                        "1_hour": {
                                            "type": "array",
                                            "title": "Statistics in the Last Hour",
                                            "description": "Statistics in the last hour.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        },
                                        "24_hour": {
                                            "type": "array",
                                            "title": "Statistics in the Last 24 Hours",
                                            "description": "Statistics in the last 24 hours.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "fortitoken_registration": {
                                    "title": "FortiToken Registration Statistics",
                                    "description": "FortiToken registration statistics.",
                                    "type": "object",
                                    "properties": {
                                        "1_week": {
                                            "type": "array",
                                            "title": "Statistics in the Last Week",
                                            "description": "Statistics in the last week.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        },
                                        "1_hour": {
                                            "type": "array",
                                            "title": "Statistics in the Last Hour",
                                            "description": "Statistics in the last hour.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        },
                                        "24_hour": {
                                            "type": "array",
                                            "title": "Statistics in the Last 24 Hours",
                                            "description": "Statistics in the last 24 hours.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "sms_service": {
                                    "title": "SMS Service Statistics",
                                    "description": "SMS service statistics.",
                                    "type": "object",
                                    "properties": {
                                        "1_week": {
                                            "type": "array",
                                            "title": "Statistics in the Last Week",
                                            "description": "Statistics in the last week.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        },
                                        "1_hour": {
                                            "type": "array",
                                            "title": "Statistics in the Last Hour",
                                            "description": "Statistics in the last hour.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        },
                                        "24_hour": {
                                            "type": "array",
                                            "title": "Statistics in the Last 24 Hours",
                                            "description": "Statistics in the last 24 hours.",
                                            "items": {
                                                "title": "One Statistic",
                                                "description": "One statistic.",
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/fortiguard\/service-communication-stats.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "service_type",
                        "in": "query",
                        "description": "To get stats for [forticare|fortiguard_download|fortiguard_query|forticloud_log|fortisandbox_cloud|fortiguard.com|ocvpn|sdns|fortitoken_registration|sms_service]. Defaults to all stats if not provided.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeslot",
                        "in": "query",
                        "description": "History timeslot of stats [1_hour|24_hour|1_week]. Defaults to all timeslots if not provided.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "fortiguard"
                ]
            }
        },
        "\/fortiview\/statistics": {
            "get": {
                "summary": "Retrieve drill-down and summary data for FortiView (both realtime and historical).\nAccess Group: ftviewgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "realtime",
                        "in": "query",
                        "description": "Set to true to retrieve realtime results (from kernel).",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "A map of filter keys to arrays of values.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sessionid",
                        "in": "query",
                        "description": "FortiView request Session ID.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of details to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "device",
                        "in": "query",
                        "description": "FortiView source device [disk|fortianalyzer|forticloud].",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "report_by",
                        "in": "query",
                        "description": "Report by field.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort by field.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "chart_only",
                        "in": "query",
                        "description": "Only return graph values in results.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Start timestamp.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "End timestamp.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ip_version",
                        "in": "query",
                        "description": "IP version [*ipv4 | ipv6 | ipboth].",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "fortiview"
                ]
            }
        },
        "\/fortiview\/session\/cancel": {
            "post": {
                "summary": "Cancel a FortiView request session.\nAccess Group: ftviewgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "sessionid": {
                                    "description": "Session ID to cancel.",
                                    "type": "integer"
                                },
                                "device": {
                                    "description": "FortiView request session's device. [disk|faz]",
                                    "type": "string"
                                },
                                "report_by": {
                                    "description": "Report by field.",
                                    "type": "string"
                                },
                                "view_level": {
                                    "description": "FortiView View level.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "fortiview"
                ]
            }
        },
        "\/fortiview\/sandbox-file-details": {
            "get": {
                "summary": "Retrieve FortiSandbox analysis details for a specific file checksum.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "checksum",
                        "in": "query",
                        "description": "Checksum of a specific file that has been analyzed by the connected FortiSandbox.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "fortiview"
                ]
            }
        },
        "\/fortiview\/sandbox-file-list": {
            "get": {
                "summary": "Retrieve list of available FortiSandbox analysis files.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "fortiview"
                ]
            }
        },
        "\/geoip\/geoip-query\/select": {
            "post": {
                "summary": "Retrieve location details for IPs queried against FortiGuard's geoip service.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "GeoIP Query",
                            "description": "Retrieve location details for IP addresses queried against FortiGuard's GeoIP service.",
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "title": "GeoIP Query Result",
                                "description": "Object mapping requested IP addresses to GeoIP query results.",
                                "required": [
                                    "location",
                                    "fallback"
                                ],
                                "properties": {
                                    "location": {
                                        "type": "object",
                                        "title": "Location Results",
                                        "description": "Location results.",
                                        "required": [
                                            "country"
                                        ],
                                        "properties": {
                                            "country": {
                                                "type": "object",
                                                "title": "Country Details",
                                                "description": "An object describing a country by name and ISO code.",
                                                "required": [
                                                    "names",
                                                    "iso_code"
                                                ],
                                                "properties": {
                                                    "iso_code": {
                                                        "title": "ISO Country Code",
                                                        "description": "ISO 3166-1 alpha-2 code.",
                                                        "type": "string"
                                                    },
                                                    "names": {
                                                        "title": "Country Names",
                                                        "description": "Country names in different languages.",
                                                        "type": "object",
                                                        "required": [
                                                            "en"
                                                        ],
                                                        "properties": {
                                                            "en": {
                                                                "title": "English Country Name",
                                                                "description": "Country name, in English.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "additionalProperties": {
                                                            "title": "Other Language Country Name",
                                                            "description": "Each key is a two letter language code. Each value is the translated country name for that language.",
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "fallback": {
                                        "title": "Fallback Result Indicator",
                                        "description": "True when the result only contains fallback country data, indicating an issue communicating with the GeoIP service.",
                                        "type": "boolean"
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/geoip\/geoip-query.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ip_addresses": {
                                    "description": "One or more IP address strings to query for location details.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "geoip"
                ]
            }
        },
        "\/ips\/rate-based": {
            "get": {
                "summary": "Returns a list of rate-based signatures in IPS package.\nAccess Group: utmgrp.ips",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Rate-Based Signatures",
                            "description": "List all rate-based IPS signatures.",
                            "type": "array",
                            "items": {
                                "title": "Signature",
                                "description": "Signature details.",
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "title": "ID",
                                        "description": "ID of the signature."
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "Name of the signature."
                                    },
                                    "rate-count": {
                                        "type": "integer",
                                        "title": "Threshold",
                                        "description": "The number of matches that must be seen before the signature is triggered."
                                    },
                                    "rate-duration": {
                                        "type": "integer",
                                        "title": "Duration",
                                        "description": "The time period over which matches are counted, in seconds."
                                    },
                                    "rate-track": {
                                        "type": "string",
                                        "enum": [
                                            "none",
                                            "src-ip",
                                            "dest-ip",
                                            "dhcp-client-mac",
                                            "dns-domain",
                                            "dns-domain-and-ip"
                                        ],
                                        "title": "Track By",
                                        "description": "The packet property to track. A value of \"none\" means all matched packets will add to the counter. Otherwise matched packets only add to counter with the same tracked property."
                                    }
                                },
                                "required": [
                                    "id",
                                    "name",
                                    "rate-count",
                                    "rate-duration",
                                    "rate-track"
                                ]
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/ips\/rate-based.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "ips"
                ]
            }
        },
        "\/ips\/metadata": {
            "get": {
                "summary": "Returns IPS meta data.\nAccess Group: utmgrp.ips",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "IPS Meta Data",
                            "description": "Retrieves IPS meta data.",
                            "type": "object",
                            "required": [
                                "cloud_app_ctrl_meta_id"
                            ],
                            "properties": {
                                "cloud_app_ctrl_meta_id": {
                                    "type": "integer",
                                    "title": "Cloud App-Ctrl Meta ID",
                                    "description": "The application ID which is used to identify cloud signatures."
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/ips\/metadata.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "ips"
                ]
            }
        },
        "\/ips\/anomaly": {
            "get": {
                "summary": "Returns IPS anomaly list.\nAccess Group: utmgrp.ips",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "IPS Anomalies",
                            "description": "Retrieves the IPS anomaly list.",
                            "type": "array",
                            "required": [
                                "anomaly_list"
                            ],
                            "properties": {
                                "anomaly_list": {
                                    "type": "array",
                                    "title": "Anomaly List",
                                    "description": "List of IPS Anomalies."
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/ips\/anomaly.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "ips"
                ]
            }
        },
        "\/ips\/hold-signatures": {
            "get": {
                "summary": "Return a list of IPS signatures that are on hold due to active hold time.\nAccess Group: utmgrp.ips",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "On-Hold Signatures",
                            "description": "List all IPS Signatures being held.",
                            "type": "array",
                            "items": {
                                "title": "Signature",
                                "description": "Signature details.",
                                "type": "object",
                                "required": [
                                    "id",
                                    "hold_hours"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "title": "ID",
                                        "description": "ID of the signature."
                                    },
                                    "hold_hours": {
                                        "type": "integer",
                                        "title": "Hold Hours",
                                        "description": "The time period until the rule is released, in hours."
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/ips\/hold-signatures.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "ips_sensor",
                        "in": "query",
                        "description": "Optional filter: Provide the name of the IPS sensor to retrieve only the hold signatures being used by that sensor.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "ips"
                ]
            }
        },
        "\/license\/status": {
            "get": {
                "summary": "Get current license & registration status.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#",
                            "type": "object",
                            "title": "License Status",
                            "definitions": {
                                "type": {
                                    "type": "string",
                                    "title": "License Type",
                                    "description": "License type."
                                },
                                "status": {
                                    "type": "string",
                                    "title": "License Status",
                                    "description": "License status."
                                },
                                "version": {
                                    "type": "string",
                                    "title": "Version",
                                    "description": "Feature version."
                                },
                                "expires": {
                                    "type": "number",
                                    "title": "License Expiry",
                                    "description": "Timestamp of when license will expire."
                                },
                                "entitlement": {
                                    "type": "string",
                                    "title": "Entitlement",
                                    "description": "License entitlement."
                                },
                                "last_update": {
                                    "type": "number",
                                    "title": "Last Update",
                                    "description": "Timestamp of when license was last updated."
                                },
                                "last_update_attempt": {
                                    "type": "number",
                                    "title": "Last Update Attempt",
                                    "description": "Timestamp of when last attempt was made to update license."
                                },
                                "last_update_result_status": {
                                    "type": "string",
                                    "title": "Last Update Result Status",
                                    "description": "Status of last attempt to update license."
                                },
                                "last_update_method_status": {
                                    "type": "string",
                                    "title": "Last Update Method",
                                    "description": "Method which caused last update of license."
                                },
                                "db_status": {
                                    "type": "string",
                                    "title": "Database Status",
                                    "description": "Database status."
                                },
                                "engine": {
                                    "type": "object",
                                    "title": "Engine",
                                    "description": "Engine used by feature.",
                                    "properties": {
                                        "version": {
                                            "$ref": "#\/definitions\/version"
                                        },
                                        "last_update": {
                                            "$ref": "#\/definitions\/last_update"
                                        },
                                        "last_update_attempt": {
                                            "$ref": "#\/definitions\/last_update_attempt"
                                        },
                                        "last_update_result_status": {
                                            "$ref": "#\/definitions\/last_update_result_status"
                                        },
                                        "last_update_method_status": {
                                            "$ref": "#\/definitions\/last_update_method_status"
                                        }
                                    }
                                }
                            },
                            "description": "License status of FortiOS features and services.",
                            "required": [
                                "antivirus",
                                "appctrl",
                                "ips"
                            ],
                            "additionalProperties": true,
                            "properties": {
                                "antivirus": {
                                    "type": "object",
                                    "title": "AntiVirus",
                                    "description": "AntiVirus license status.",
                                    "properties": {
                                        "type": {
                                            "$ref": "#\/definitions\/type"
                                        },
                                        "status": {
                                            "$ref": "#\/definitions\/status"
                                        },
                                        "version": {
                                            "$ref": "#\/definitions\/version"
                                        },
                                        "expires": {
                                            "$ref": "#\/definitions\/expires"
                                        },
                                        "entitlement": {
                                            "$ref": "#\/definitions\/entitlement"
                                        },
                                        "last_update": {
                                            "$ref": "#\/definitions\/last_update"
                                        },
                                        "last_update_attempt": {
                                            "$ref": "#\/definitions\/last_update_attempt"
                                        },
                                        "last_update_result_status": {
                                            "$ref": "#\/definitions\/last_update_result_status"
                                        },
                                        "last_update_method_status": {
                                            "$ref": "#\/definitions\/last_update_method_status"
                                        },
                                        "db_status": {
                                            "$ref": "#\/definitions\/db_status"
                                        },
                                        "engine": {
                                            "$ref": "#\/definitions\/engine"
                                        }
                                    }
                                },
                                "appctrl": {
                                    "type": "object",
                                    "title": "Application Control",
                                    "description": "Application Control license status.",
                                    "properties": {
                                        "type": {
                                            "$ref": "#\/definitions\/type"
                                        },
                                        "status": {
                                            "$ref": "#\/definitions\/status"
                                        },
                                        "version": {
                                            "$ref": "#\/definitions\/version"
                                        },
                                        "expires": {
                                            "$ref": "#\/definitions\/expires"
                                        },
                                        "entitlement": {
                                            "$ref": "#\/definitions\/entitlement"
                                        },
                                        "last_update": {
                                            "$ref": "#\/definitions\/last_update"
                                        },
                                        "last_update_attempt": {
                                            "$ref": "#\/definitions\/last_update_attempt"
                                        },
                                        "last_update_result_status": {
                                            "$ref": "#\/definitions\/last_update_result_status"
                                        },
                                        "last_update_method_status": {
                                            "$ref": "#\/definitions\/last_update_method_status"
                                        }
                                    }
                                },
                                "ips": {
                                    "type": "object",
                                    "title": "IPS",
                                    "description": "Intrusion Prevention System license status.",
                                    "properties": {
                                        "type": {
                                            "$ref": "#\/definitions\/type"
                                        },
                                        "status": {
                                            "$ref": "#\/definitions\/status"
                                        },
                                        "version": {
                                            "$ref": "#\/definitions\/version"
                                        },
                                        "expires": {
                                            "$ref": "#\/definitions\/expires"
                                        },
                                        "entitlement": {
                                            "$ref": "#\/definitions\/entitlement"
                                        },
                                        "last_update": {
                                            "$ref": "#\/definitions\/last_update"
                                        },
                                        "last_update_attempt": {
                                            "$ref": "#\/definitions\/last_update_attempt"
                                        },
                                        "last_update_result_status": {
                                            "$ref": "#\/definitions\/last_update_result_status"
                                        },
                                        "last_update_method_status": {
                                            "$ref": "#\/definitions\/last_update_method_status"
                                        },
                                        "db_status": {
                                            "$ref": "#\/definitions\/db_status"
                                        },
                                        "engine": {
                                            "$ref": "#\/definitions\/engine"
                                        },
                                        "configuration_script": {
                                            "type": "object",
                                            "title": "Configuration Script",
                                            "description": "IPS configuration script.",
                                            "properties": {
                                                "version": {
                                                    "$ref": "#\/definitions\/version"
                                                },
                                                "last_update": {
                                                    "$ref": "#\/definitions\/last_update"
                                                },
                                                "last_update_attempt": {
                                                    "$ref": "#\/definitions\/last_update_attempt"
                                                },
                                                "last_update_result_status": {
                                                    "$ref": "#\/definitions\/last_update_result_status"
                                                },
                                                "last_update_method_status": {
                                                    "$ref": "#\/definitions\/last_update_method_status"
                                                }
                                            }
                                        }
                                    }
                                },
                                "vm": {
                                    "type": "object",
                                    "title": "VM",
                                    "description": "Virtual machine license status.",
                                    "properties": {
                                        "type": {
                                            "$ref": "#\/definitions\/type"
                                        },
                                        "valid": {
                                            "type": "boolean",
                                            "title": "License Valid",
                                            "description": "True when license is valid."
                                        },
                                        "status": {
                                            "$ref": "#\/definitions\/status"
                                        },
                                        "license_model": {
                                            "type": "number",
                                            "title": "License Model",
                                            "description": "License model."
                                        },
                                        "license_platform_name": {
                                            "type": "string",
                                            "title": "License Platform Name",
                                            "description": "Name of license platform."
                                        },
                                        "expires": {
                                            "$ref": "#\/definitions\/expires"
                                        },
                                        "closed_network": {
                                            "type": "boolean",
                                            "title": "Closed Network",
                                            "description": "True when network is closed."
                                        },
                                        "cpu_used": {
                                            "type": "number",
                                            "title": "CPU Used",
                                            "description": "Number of CPU cores used on this FortiGate."
                                        },
                                        "cpu_max": {
                                            "type": "number",
                                            "title": "CPU Max",
                                            "description": "Maximum number of CPU cores specified by license model."
                                        },
                                        "mem_used": {
                                            "type": "number",
                                            "title": "Memory Used",
                                            "description": "Memory used in bytes on this FortiGate."
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/license\/status.json"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "license"
                ]
            }
        },
        "\/license\/fortianalyzer-status": {
            "get": {
                "summary": "Get current license & registration status for the connected FortiAnalyzer.\nAccess Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "license"
                ]
            }
        },
        "\/license\/database\/upgrade": {
            "post": {
                "summary": "Upgrade or downgrade UTM engine or signature package (IPS\/AntiVirus\/Application Control\/Industrial database\/Security Rating) using uploaded file.\nAccess Group: sysgrp.upd",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "db_name": {
                                    "description": "Security service database name [ips|appctrl|industrial_db|antivirus|security_rating]",
                                    "type": "string"
                                },
                                "file_content": {
                                    "description": "Provided when uploading a file: base64 encoded file data. Must not contain whitespace or other invalid base64 characters. Must be included in HTTP body.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "license"
                ]
            }
        },
        "\/license\/forticare-resellers": {
            "get": {
                "summary": "Get current FortiCare resellers for the requested country.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "country_code",
                        "in": "query",
                        "description": "FortiGuard country code",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "license"
                ]
            }
        },
        "\/license\/forticare-org-list": {
            "get": {
                "summary": "Get FortiCare organization size and industry lists.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "license"
                ]
            }
        },
        "\/log\/current-disk-usage": {
            "get": {
                "summary": "Return current used, free and total disk bytes.\nAccess Group: loggrp.data-access",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "log"
                ]
            }
        },
        "\/log\/device\/state": {
            "get": {
                "summary": "Retrieve information on state of log devices.\nAccess Group: loggrp.data-access",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Log Device State",
                            "description": "Status of log devices for the system.",
                            "type": "object",
                            "definitions": {
                                "is_available": {
                                    "type": "boolean",
                                    "title": "Is Available",
                                    "description": "True when log device can be enabled."
                                },
                                "is_enabled": {
                                    "type": "boolean",
                                    "title": "Is Enabled",
                                    "description": "True when logging is enabled for log device."
                                },
                                "is_ha_supported": {
                                    "type": "boolean",
                                    "title": "Is HA Supported",
                                    "description": "True when HA is supported."
                                }
                            },
                            "additionalProperties": true,
                            "properties": {
                                "memory": {
                                    "type": "object",
                                    "title": "Memory Log",
                                    "description": "Memory log device.",
                                    "required": [
                                        "is_available",
                                        "is_enabled",
                                        "is_default",
                                        "is_ha_supported"
                                    ],
                                    "properties": {
                                        "is_available": {
                                            "$ref": "#\/definitions\/is_available"
                                        },
                                        "is_enabled": {
                                            "$ref": "#\/definitions\/is_enabled"
                                        },
                                        "is_default": {
                                            "type": "boolean",
                                            "title": "Is Default",
                                            "description": "True when memory log is available by default."
                                        },
                                        "is_ha_supported": {
                                            "$ref": "#\/definitions\/is_ha_supported"
                                        }
                                    }
                                },
                                "disk": {
                                    "type": "object",
                                    "title": "Disk Log",
                                    "description": "Disk log device.",
                                    "required": [
                                        "is_available",
                                        "is_enabled",
                                        "is_loggable",
                                        "num_ssds_available",
                                        "disabled_by_default",
                                        "is_ha_supported"
                                    ],
                                    "properties": {
                                        "is_available": {
                                            "$ref": "#\/definitions\/is_available"
                                        },
                                        "is_enabled": {
                                            "$ref": "#\/definitions\/is_enabled"
                                        },
                                        "is_loggable": {
                                            "type": "boolean",
                                            "title": "Is Loggable",
                                            "description": "True when disk can be logged."
                                        },
                                        "num_ssds_available": {
                                            "type": "integer",
                                            "title": "Available SSD Count",
                                            "description": "Number of available solid state drives."
                                        },
                                        "disabled_by_default": {
                                            "type": "boolean",
                                            "title": "Disabled by Default",
                                            "description": "True when disk log is disabled by default."
                                        },
                                        "is_ha_supported": {
                                            "$ref": "#\/definitions\/is_ha_supported"
                                        },
                                        "is_fortiview_supported": {
                                            "type": "boolean",
                                            "title": "Is FortiView Supported",
                                            "description": "True when FortiView is supported."
                                        },
                                        "fortiview_weekly_data": {
                                            "type": "boolean",
                                            "title": "FortiView Weekly Data",
                                            "description": "True when weekly FortiView data should be shown."
                                        }
                                    }
                                },
                                "fortianalyzer": {
                                    "type": "object",
                                    "title": "FortiAnalyzer Log",
                                    "description": "FortiAnalyzer log device.",
                                    "required": [
                                        "is_available",
                                        "is_enabled",
                                        "overrides_global_faz"
                                    ],
                                    "properties": {
                                        "is_available": {
                                            "$ref": "#\/definitions\/is_available"
                                        },
                                        "is_enabled": {
                                            "$ref": "#\/definitions\/is_enabled"
                                        },
                                        "overrides_global_faz": {
                                            "type": "boolean",
                                            "title": "Overrides Global FAZ",
                                            "description": "True when global FortiAnalyzer is overridden."
                                        },
                                        "ip": {
                                            "type": "string",
                                            "title": "FortiAnalyzer IP",
                                            "description": "IPv4 or IPv6 address of FortiAnalyzer."
                                        }
                                    }
                                },
                                "fortianalyzer_cloud": {
                                    "type": "object",
                                    "title": "FortiAnalyzer Cloud Log",
                                    "description": "FortiAnalyzer Cloud log device.",
                                    "required": [
                                        "is_available",
                                        "is_enabled",
                                        "overrides_global_faz_cloud"
                                    ],
                                    "properties": {
                                        "is_available": {
                                            "$ref": "#\/definitions\/is_available"
                                        },
                                        "is_enabled": {
                                            "$ref": "#\/definitions\/is_enabled"
                                        },
                                        "overrides_global_faz_cloud": {
                                            "type": "boolean",
                                            "title": "Overrides Global FortiAnalyzer Cloud",
                                            "description": "True when global FortiAnalyzer Cloud is overridden."
                                        }
                                    }
                                },
                                "forticloud": {
                                    "type": "object",
                                    "title": "FortiCloud Log",
                                    "description": "FortiCloud log device.",
                                    "required": [
                                        "is_available",
                                        "is_enabled"
                                    ],
                                    "properties": {
                                        "is_available": {
                                            "$ref": "#\/definitions\/is_available"
                                        },
                                        "is_enabled": {
                                            "$ref": "#\/definitions\/is_enabled"
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/log\/device.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "log"
                ]
            }
        },
        "\/log\/forticloud": {
            "get": {
                "summary": "Return FortiGate Cloud log status.\nAccess Group: loggrp.config",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiGate Cloud Log Status",
                            "description": "Retrieve the FortiGate Cloud log status.",
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "integer",
                                    "title": "Error Code",
                                    "description": "Error code."
                                },
                                "expires": {
                                    "type": "integer",
                                    "title": "Account Expiration",
                                    "description": "Unix timestamp of paid account expiration."
                                },
                                "disk": {
                                    "type": "object",
                                    "title": "Disk Details",
                                    "description": "Disk details.",
                                    "required": [
                                        "quota",
                                        "used"
                                    ],
                                    "properties": {
                                        "quota": {
                                            "type": "integer",
                                            "title": "Disk Quota",
                                            "description": "Disk space quota, in megabytes."
                                        },
                                        "used": {
                                            "type": "integer",
                                            "title": "Used Disk Storage",
                                            "description": "Used disk space, in megabytes."
                                        }
                                    }
                                },
                                "dlp": {
                                    "type": "boolean",
                                    "title": "Download Leak Prevention",
                                    "description": "True when download leak prevention is used."
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/log\/forticloud.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "log"
                ]
            }
        },
        "\/log\/forticloud\/connection": {
            "get": {
                "summary": "Return FortiGate Cloud log connection status.\nAccess Group: loggrp.config",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiGate Cloud Log Connection Status",
                            "description": "Retrieve the FortiGate Cloud log connection status.",
                            "type": "object",
                            "required": [
                                "connection"
                            ],
                            "properties": {
                                "connection": {
                                    "type": "string",
                                    "title": "Connection Status",
                                    "enum": [
                                        "disabled",
                                        "reachable",
                                        "unreachable"
                                    ],
                                    "description": "Current connection status."
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/log\/forticloud.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "log"
                ]
            }
        },
        "\/log\/forticloud-report-list": {
            "get": {
                "summary": "Get FortiCloud report list.\nAccess Group: loggrp.data-access",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiCloud Reports",
                            "description": "List all FortiCloud reports for this FortiGate.",
                            "type": "array",
                            "items": {
                                "title": "FortiCloud Report",
                                "description": "A FortiCloud report for this FortiGate.",
                                "type": "object",
                                "required": [
                                    "name",
                                    "file_name",
                                    "schedule_type",
                                    "start",
                                    "end",
                                    "oid"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "Name of the report."
                                    },
                                    "file_name": {
                                        "type": "string",
                                        "title": "File Name",
                                        "description": "Filename of the report."
                                    },
                                    "schedule_type": {
                                        "type": "string",
                                        "title": "Schedule Type",
                                        "description": "Type of schedule.",
                                        "enum": [
                                            "daily",
                                            "weekly",
                                            "once"
                                        ]
                                    },
                                    "start": {
                                        "type": "integer",
                                        "title": "Start",
                                        "description": "Start timestamp."
                                    },
                                    "end": {
                                        "type": "integer",
                                        "title": "End",
                                        "description": "End timestamp."
                                    },
                                    "oid": {
                                        "type": "integer",
                                        "title": "OID",
                                        "description": "Object UUID."
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/log\/forticloud-report-list.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "log"
                ]
            }
        },
        "\/log\/local-report-list": {
            "get": {
                "summary": "Get local reports list.\nAccess Group: loggrp.report-access",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Local Reports",
                            "description": "List all local reports for this FortiGate.",
                            "type": "array",
                            "items": {
                                "title": "Local Report",
                                "description": "A local report for this FortiGate.",
                                "type": "object",
                                "required": [
                                    "name",
                                    "layout",
                                    "start",
                                    "end",
                                    "format_size",
                                    "data_start",
                                    "data_end"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "Name of the report."
                                    },
                                    "layout": {
                                        "type": "string",
                                        "title": "File Name",
                                        "description": "Filename of the report."
                                    },
                                    "start": {
                                        "type": "string",
                                        "title": "Start",
                                        "description": "Start timestamp."
                                    },
                                    "end": {
                                        "type": "string",
                                        "title": "End",
                                        "description": "End timestamp."
                                    },
                                    "format_size": {
                                        "type": "string",
                                        "title": "Format and Size",
                                        "description": "Format and size of file."
                                    },
                                    "data_start": {
                                        "type": "string",
                                        "title": "Data Start",
                                        "description": "Start time for the data."
                                    },
                                    "data_end": {
                                        "type": "string",
                                        "title": "Data End",
                                        "description": "End time for the data."
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/log\/local-report-list.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "log"
                ]
            }
        },
        "\/log\/local-report\/download": {
            "get": {
                "summary": "Download local report\nAccess Group: loggrp.data-access",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Local Report Name.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log"
                ]
            }
        },
        "\/log\/local-report\/delete": {
            "post": {
                "summary": "Delete a local report.\nAccess Group: loggrp.data-access",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkeys": {
                                    "description": "Local Report Name.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "log"
                ]
            }
        },
        "\/log\/fortianalyzer": {
            "get": {
                "summary": "Return FortiAnalyzer\/FortiManager log status.\nAccess Group: loggrp.config",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiAnalyzer Log Status",
                            "description": "FortiAnalyzer log status.",
                            "type": "object",
                            "definitions": {
                                "tx": {
                                    "type": "boolean",
                                    "title": "Can Transmit",
                                    "description": "True when system can transmit data to FortiAnalyzer."
                                },
                                "rx": {
                                    "type": "boolean",
                                    "title": "Can Receive",
                                    "description": "True when system can receive data from FortiAnalyzer."
                                }
                            },
                            "additionalProperties": true,
                            "properties": {
                                "serial": {
                                    "type": "string",
                                    "title": "Serial Number",
                                    "description": "Serial number."
                                },
                                "error_message_details": {
                                    "type": "string",
                                    "title": "Error Message Details",
                                    "description": "Error message details."
                                },
                                "error": {
                                    "type": "integer",
                                    "title": "Error Code",
                                    "description": "Error code."
                                },
                                "status": {
                                    "type": "string",
                                    "title": "Error Status",
                                    "description": "Error status."
                                },
                                "device": {
                                    "type": "string",
                                    "title": "FortiAnalyzer Host Name",
                                    "description": "FortiAnalyzer host name."
                                },
                                "registration": {
                                    "type": "string",
                                    "title": "Registration Status",
                                    "description": "Registration status."
                                },
                                "connection": {
                                    "type": "string",
                                    "title": "Connection Status",
                                    "description": "Connection status."
                                },
                                "received": {
                                    "type": "integer",
                                    "title": "Received Logs",
                                    "description": "Number of received logs."
                                },
                                "disk": {
                                    "type": "object",
                                    "title": "Disk Details",
                                    "description": "Disk details.",
                                    "properties": {
                                        "quota": {
                                            "type": "integer",
                                            "title": "Disk Quota",
                                            "description": "Disk space quota."
                                        },
                                        "used": {
                                            "type": "integer",
                                            "title": "Disk Used",
                                            "description": "Used disk space."
                                        },
                                        "free": {
                                            "type": "integer",
                                            "title": "Disk Free",
                                            "description": "Free disk space."
                                        },
                                        "adom_used": {
                                            "type": "integer",
                                            "title": "ADOM Used",
                                            "description": "Used ADOM disk space."
                                        },
                                        "adom_quota": {
                                            "type": "integer",
                                            "title": "ADOM Quota",
                                            "description": "ADOM disk space quota."
                                        },
                                        "analytics_used": {
                                            "type": "integer",
                                            "title": "Analytics Used",
                                            "description": "Analytics used disk space."
                                        },
                                        "analytics_quota": {
                                            "type": "integer",
                                            "title": "Analytics Quota",
                                            "description": "Analytics disk quota."
                                        },
                                        "analytics_configured": {
                                            "type": "integer",
                                            "title": "Analytics Configured",
                                            "description": "Number of days analytics data is retained."
                                        },
                                        "analytics_actual": {
                                            "type": "integer",
                                            "title": "Analytics Actual",
                                            "description": "Number of days analytics data has been stored."
                                        },
                                        "archive_used": {
                                            "type": "integer",
                                            "title": "Archive Used",
                                            "description": "Archive used disk space."
                                        },
                                        "archive_quota": {
                                            "type": "integer",
                                            "title": "Archive Quota",
                                            "description": "Archive disk quota."
                                        },
                                        "archive_configured": {
                                            "type": "integer",
                                            "title": "Archive Configured",
                                            "description": "Number of days files are retained."
                                        },
                                        "archive_actual": {
                                            "type": "integer",
                                            "title": "Archive Actual",
                                            "description": "Number of days files have been stored."
                                        }
                                    }
                                },
                                "adom_name": {
                                    "type": "string",
                                    "title": "ADOM Name",
                                    "description": "ADOM name."
                                },
                                "log": {
                                    "type": "object",
                                    "title": "Log Details",
                                    "description": "Log details.",
                                    "properties": {
                                        "tx": {
                                            "$ref": "#\/definitions\/tx"
                                        },
                                        "rx": {
                                            "$ref": "#\/definitions\/rx"
                                        }
                                    }
                                },
                                "ips": {
                                    "type": "object",
                                    "title": "IPS Details",
                                    "description": "IPS details.",
                                    "properties": {
                                        "tx": {
                                            "$ref": "#\/definitions\/tx"
                                        },
                                        "rx": {
                                            "$ref": "#\/definitions\/rx"
                                        }
                                    }
                                },
                                "dlp": {
                                    "type": "object",
                                    "title": "DLP Details",
                                    "description": "DLP details.",
                                    "properties": {
                                        "tx": {
                                            "$ref": "#\/definitions\/tx"
                                        },
                                        "rx": {
                                            "$ref": "#\/definitions\/rx"
                                        }
                                    }
                                },
                                "quar": {
                                    "type": "object",
                                    "title": "Quarantine Details",
                                    "description": "Quarantine details.",
                                    "properties": {
                                        "tx": {
                                            "$ref": "#\/definitions\/tx"
                                        },
                                        "rx": {
                                            "$ref": "#\/definitions\/rx"
                                        }
                                    }
                                },
                                "license": {
                                    "type": "object",
                                    "title": "License Details",
                                    "description": "License details.",
                                    "properties": {
                                        "mismatch": {
                                            "type": "boolean",
                                            "title": "License Mismatch",
                                            "description": "True when license model does not match FortiAnalyzer license."
                                        },
                                        "exceeded": {
                                            "type": "boolean",
                                            "title": "Device Exceeded",
                                            "description": "True when number of devices exceeds FortiAnalyzer license."
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/log\/fortianalyzer.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Scope from which to test the connectivity of the FortiAnalyzer address [vdom|global].",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "server",
                        "in": "query",
                        "description": "FortiAnalyzer\/FortiManager address.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "srcip",
                        "in": "query",
                        "description": "The IP to use to make the request to the FortiAnalyzer [<ip>|auto]. When set to \"auto\" it will use the FortiGate's routing table to determine the IP to make the request from.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log"
                ]
            }
        },
        "\/log\/fortianalyzer-queue": {
            "get": {
                "summary": "Retrieve information on FortiAnalyzer's queue state. Note:- FortiAnalyzer logs are queued only if upload-option is realtime.\nAccess Group: loggrp.config",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Scope from which to retrieve FortiAnalyzer's queue state [vdom*|global].",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log"
                ]
            }
        },
        "\/log\/hourly-disk-usage": {
            "get": {
                "summary": "Return historic hourly disk usage in bytes.\nAccess Group: loggrp.data-access",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "log"
                ]
            }
        },
        "\/log\/historic-daily-remote-logs": {
            "get": {
                "summary": "Returns the amount of logs in bytes sent daily to a remote logging service (FortiCloud or FortiAnalyzer).\nAccess Group: loggrp.data-access",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "server",
                        "in": "query",
                        "description": "Service name [forticloud | fortianalyzer].",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log"
                ]
            }
        },
        "\/log\/stats": {
            "get": {
                "summary": "Return number of logs sent by category per day for a specific log device.\nAccess Group: loggrp.data-access",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "dev",
                        "in": "query",
                        "description": "Log device [*memory | disk | fortianalyzer | forticloud].",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log"
                ]
            }
        },
        "\/log\/stats\/reset": {
            "post": {
                "summary": "Reset logging statistics for all log devices.\nAccess Group: loggrp.data-access",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "log"
                ]
            }
        },
        "\/log\/forticloud-report\/download": {
            "get": {
                "summary": "Download PDF report from FortiCloud.\nAccess Group: loggrp.data-access",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "FortiCloud Report ID.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "inline",
                        "in": "query",
                        "description": "Set to 1 to download the report inline.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "log"
                ]
            }
        },
        "\/log\/policy-archive\/download": {
            "get": {
                "summary": "Download policy-based packet capture archive.\nAccess Group: loggrp.data-access",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Session ID (from traffic log).",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "srcip",
                        "in": "query",
                        "description": "Source IP.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dstip",
                        "in": "query",
                        "description": "Destination IP.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log"
                ]
            }
        },
        "\/log\/av-archive\/download": {
            "get": {
                "summary": "Download file quarantined by AntiVirus.\nAccess Group: loggrp.data-access",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Checksum for quarantined file.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log"
                ]
            }
        },
        "\/network\/arp": {
            "get": {
                "summary": "Get IPv4 ARP table.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "IPv4 ARP Table",
                            "description": "List of IPv4 ARP associations for IP addresses to MAC addresses.",
                            "type": "array",
                            "items": {
                                "title": "IPv4 ARP Entry",
                                "description": "An IPv4 ARP entry.",
                                "type": "object",
                                "properties": {
                                    "ip": {
                                        "type": "string",
                                        "title": "IP Address",
                                        "description": "IP address of the ARP device."
                                    },
                                    "age": {
                                        "type": "integer",
                                        "title": "ARP Age",
                                        "description": "Age of this ARP entry, in seconds."
                                    },
                                    "interface": {
                                        "type": "string",
                                        "title": "Interface Name",
                                        "description": "Name of the listening interface."
                                    },
                                    "mac": {
                                        "type": "string",
                                        "title": "MAC Address",
                                        "description": "MAC address of the ARP device."
                                    }
                                },
                                "required": [
                                    "ip",
                                    "mac",
                                    "interface"
                                ]
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/network\/arp.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "network"
                ]
            }
        },
        "\/network\/lldp\/neighbors": {
            "get": {
                "summary": "List all active LLDP neighbors.\nAccess Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "LLDP Neighbors",
                            "description": "Network LLDP neighbors.",
                            "type": "array",
                            "items": {
                                "title": "LLDP Neighbor",
                                "description": "",
                                "type": "object",
                                "required": [
                                    "mac",
                                    "port",
                                    "ttl"
                                ],
                                "properties": {
                                    "mac": {
                                        "type": "string",
                                        "title": "MAC Address",
                                        "description": "MAC address."
                                    },
                                    "chassis_id": {
                                        "type": "string",
                                        "title": "Chassis ID",
                                        "description": "Chassis ID."
                                    },
                                    "port": {
                                        "type": "integer",
                                        "title": "Port",
                                        "description": "Port."
                                    },
                                    "port_id": {
                                        "type": "string",
                                        "title": "Port ID",
                                        "description": "Port ID."
                                    },
                                    "port_desc": {
                                        "type": "string",
                                        "title": "Port Description",
                                        "description": "Port description."
                                    },
                                    "system_name": {
                                        "type": "string",
                                        "title": "System Name",
                                        "description": "System name."
                                    },
                                    "system_desc": {
                                        "type": "string",
                                        "title": "System Description",
                                        "description": "System description."
                                    },
                                    "ttl": {
                                        "type": "integer",
                                        "title": "TTL",
                                        "description": "Time-To-Live value."
                                    },
                                    "addresses": {
                                        "type": "array",
                                        "title": "LLDP Addresses",
                                        "description": "LLDP addresses.",
                                        "items": {
                                            "title": "LLDP Address",
                                            "description": "LLDP address.",
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Type",
                                                    "description": "Type of address.",
                                                    "enum": [
                                                        "ipv4",
                                                        "ipv6"
                                                    ]
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "title": "Address",
                                                    "description": "IPv4 or IPv6 address."
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/network\/lldp.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "network"
                ]
            }
        },
        "\/network\/lldp\/ports": {
            "get": {
                "summary": "List all active LLDP ports.\nAccess Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Filter: specific port name.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "network"
                ]
            }
        },
        "\/network\/dns\/latency": {
            "get": {
                "summary": "Get DNS latency.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "network"
                ]
            }
        },
        "\/network\/fortiguard\/live-services-latency": {
            "get": {
                "summary": "Get latency information for live FortiGuard services.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "network"
                ]
            }
        },
        "\/network\/ddns\/servers": {
            "get": {
                "summary": "Get DDNS servers.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "network"
                ]
            }
        },
        "\/network\/ddns\/lookup": {
            "get": {
                "summary": "Check DDNS FQDN availability.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "domain",
                        "in": "query",
                        "description": "Filter: domain to check.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "network"
                ]
            }
        },
        "\/network\/reverse-ip-lookup": {
            "get": {
                "summary": "Retrieve the resolved DNS domain name for a given IP address.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Reverse IP Lookup",
                            "description": "Retrieve the resolved DNS domain name for a given IP address.",
                            "type": "object",
                            "required": [
                                "resolved"
                            ],
                            "properties": {
                                "domain": {
                                    "type": "string",
                                    "title": "Domain",
                                    "description": "Resolved domain of the given IP address."
                                },
                                "resolved": {
                                    "type": "boolean",
                                    "title": "Resolved",
                                    "description": "True when the domain is resolved."
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/network\/reverse-ip-lookup.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "ip",
                        "in": "query",
                        "description": "IP address (in dot-decimal notation).",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "network"
                ]
            }
        },
        "\/nsx\/service\/status": {
            "get": {
                "summary": "Retrieve NSX service status.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Filter: NSX SDN name.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "nsx"
                ]
            }
        },
        "\/nsx\/service\/add": {
            "post": {
                "summary": "Add NSX service to connector.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkey": {
                                    "description": "NSX connector name.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "nsx"
                ]
            }
        },
        "\/nsx\/instance": {
            "get": {
                "summary": "List NSX instances and their resource statistics.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Filter: NSX SDN name.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "nsx"
                ]
            }
        },
        "\/registration\/forticloud\/login": {
            "post": {
                "summary": "Login to FortiCloud.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "email": {
                                    "description": "Account email.",
                                    "type": "string"
                                },
                                "password": {
                                    "description": "Account password.",
                                    "type": "string"
                                },
                                "send_logs": {
                                    "description": "Send logs to FortiCloud.",
                                    "type": "boolean"
                                },
                                "domain": {
                                    "description": "FortiCloud domain.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "registration"
                ]
            }
        },
        "\/registration\/forticloud\/create": {
            "post": {
                "summary": "Create a FortiCloud account.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "email": {
                                    "description": "Account email.",
                                    "type": "string"
                                },
                                "password": {
                                    "description": "Account password.",
                                    "type": "string"
                                },
                                "send_logs": {
                                    "description": "Send logs to FortiCloud.",
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "registration"
                ]
            }
        },
        "\/registration\/forticloud\/logout": {
            "post": {
                "summary": "Logout from FortiCloud.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "registration"
                ]
            }
        },
        "\/registration\/forticloud\/disclaimer": {
            "get": {
                "summary": "Retrieve the FortiCloud disclaimer.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "registration"
                ]
            }
        },
        "\/registration\/forticloud\/domains": {
            "get": {
                "summary": "Retrieve a list of FortiCloud login domains.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "registration"
                ]
            }
        },
        "\/registration\/forticare\/login": {
            "post": {
                "summary": "Login to FortiCare.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "email": {
                                    "description": "Account email.",
                                    "type": "string"
                                },
                                "password": {
                                    "description": "Account password.",
                                    "type": "string"
                                },
                                "reseller_name": {
                                    "description": "Reseller name.",
                                    "type": "string"
                                },
                                "reseller_id": {
                                    "description": "Reseller ID.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "registration"
                ]
            }
        },
        "\/registration\/forticare\/transfer": {
            "post": {
                "summary": "Transfer to a new FortiCare account.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiCare Account Title Transfer",
                            "description": "Transfer ownership of the FortiGate from one FortiCare account to another.",
                            "type": "object",
                            "properties": {
                                "forticare_error": {
                                    "title": "FortiCare Error Message",
                                    "description": "If present in the response an error occurred while transferring.",
                                    "type": "string"
                                },
                                "forticare_success": {
                                    "title": "FortiCare Success Status",
                                    "description": "True when the transfer is successful.",
                                    "type": "boolean"
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/registration\/forticare.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "email": {
                                    "description": "Account email.",
                                    "type": "string"
                                },
                                "password": {
                                    "description": "Account password.",
                                    "type": "string"
                                },
                                "old_email": {
                                    "description": "Old account email.",
                                    "type": "string"
                                },
                                "old_password": {
                                    "description": "Old account password.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "registration"
                ]
            }
        },
        "\/registration\/forticare\/create": {
            "post": {
                "summary": "Create a new FortiCare account.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "email": {
                                    "description": "Account email.",
                                    "type": "string"
                                },
                                "password": {
                                    "description": "Account password.",
                                    "type": "string"
                                },
                                "first_name": {
                                    "description": "First name.",
                                    "type": "string"
                                },
                                "last_name": {
                                    "description": "Last name.",
                                    "type": "string"
                                },
                                "title": {
                                    "description": "Title.",
                                    "type": "string"
                                },
                                "company": {
                                    "description": "Company.",
                                    "type": "string"
                                },
                                "address": {
                                    "description": "Address.",
                                    "type": "string"
                                },
                                "city": {
                                    "description": "City.",
                                    "type": "string"
                                },
                                "country_code": {
                                    "description": "Country code.",
                                    "type": "integer"
                                },
                                "state": {
                                    "description": "State\/Province.",
                                    "type": "string"
                                },
                                "state_code": {
                                    "description": "State\/Province code.",
                                    "type": "string"
                                },
                                "postal_code": {
                                    "description": "Postal code.",
                                    "type": "string"
                                },
                                "phone": {
                                    "description": "Phone number.",
                                    "type": "string"
                                },
                                "industry": {
                                    "description": "Industry.",
                                    "type": "string"
                                },
                                "industry_id": {
                                    "description": "Industry ID.",
                                    "type": "integer"
                                },
                                "orgsize_id": {
                                    "description": "Organization size ID.",
                                    "type": "integer"
                                },
                                "reseller_name": {
                                    "description": "Reseller name.",
                                    "type": "string"
                                },
                                "reseller_id": {
                                    "description": "Reseller ID.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "registration"
                ]
            }
        },
        "\/registration\/forticare\/add-license": {
            "post": {
                "summary": "Add a FortiCare license.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "registration_code": {
                                    "description": "FortiCare contract number.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "registration"
                ]
            }
        },
        "\/registration\/forticloud\/register-device": {
            "post": {
                "summary": "Register a device to FortiCloud through FortiGate. Currently FortiSwitch and FortiAP are supported.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "serial": {
                                    "description": "Device serial number",
                                    "type": "string"
                                },
                                "email": {
                                    "description": "FortiCloud email.",
                                    "type": "string"
                                },
                                "password": {
                                    "description": "Password.",
                                    "type": "string"
                                },
                                "reseller": {
                                    "description": "Reseller.",
                                    "type": "string"
                                },
                                "country": {
                                    "description": "Country.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "registration"
                ]
            }
        },
        "\/registration\/forticloud\/device-status": {
            "get": {
                "summary": "Fetch device registration status from FortiCloud. Currently FortiSwitch and FortiAP are supported.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiCloud Device Registration Status",
                            "description": "FortiCloud registration status for a device.",
                            "type": "array",
                            "items": {
                                "title": "Device Registration Information",
                                "description": "Registration information for a device.",
                                "type": "object",
                                "required": [
                                    "serial",
                                    "status"
                                ],
                                "properties": {
                                    "serial": {
                                        "type": "string",
                                        "title": "Serial",
                                        "description": "Serial number."
                                    },
                                    "account": {
                                        "type": "string",
                                        "title": "FortiCloud Account Name",
                                        "description": "FortiCloud account name."
                                    },
                                    "status": {
                                        "type": "string",
                                        "title": "FortiCloud Registration Status",
                                        "description": "Status of the FortiCloud registration.",
                                        "enum": [
                                            "registered",
                                            "pending",
                                            "unregistered"
                                        ]
                                    },
                                    "time": {
                                        "type": "integer",
                                        "title": "Registration Time",
                                        "description": "Timestamp of when the device was registered."
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/registration\/forticloud.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "serials",
                        "in": "query",
                        "description": "Serials of FortiSwitch and FortiAP to fetch registration status.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "update_cache",
                        "in": "query",
                        "description": "Clear cache and retrieve updated data.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "tags": [
                    "registration"
                ]
            }
        },
        "\/registration\/vdom\/add-license": {
            "post": {
                "summary": "Add a VDOM license.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "license": {
                                    "description": "VDOM license key.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "registration"
                ]
            }
        },
        "\/registration\/forticloud\/migrate": {
            "post": {
                "summary": "Migrate standalone FortiGate Cloud account to FortiCloud.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "email": {
                                    "description": "Account email.",
                                    "type": "string"
                                },
                                "password": {
                                    "description": "Account password.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "registration"
                ]
            }
        },
        "\/router\/ipv4": {
            "get": {
                "summary": "List all active IPv4 routing table entries.\nAccess Group: netgrp.route-cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "IPv4 Routing Monitor",
                            "description": "List all active IPv4 routing table entries.",
                            "type": "array",
                            "items": {
                                "title": "IPv4 Routing Monitor Entry",
                                "description": "An IPv4 routing table entry.",
                                "type": "object",
                                "required": [
                                    "ip_version",
                                    "type",
                                    "ip_mask",
                                    "distance",
                                    "metric",
                                    "priority",
                                    "vrf",
                                    "gateway"
                                ],
                                "properties": {
                                    "ip_version": {
                                        "title": "IP Version",
                                        "description": "IP Version of this routing table entry (must be 4 for this API).",
                                        "type": "integer"
                                    },
                                    "type": {
                                        "title": "Type",
                                        "description": "Type of routing table entry.",
                                        "type": "string",
                                        "enum": [
                                            "def",
                                            "kernel",
                                            "connect",
                                            "static",
                                            "rip",
                                            "ripng",
                                            "ospf",
                                            "ospf6",
                                            "bgp",
                                            "isis",
                                            "ha"
                                        ]
                                    },
                                    "subtype": {
                                        "title": "Subtype",
                                        "description": "Subtype of the routing table entry - only used when type is OSPF or OSPF6.",
                                        "type": "string",
                                        "enum": [
                                            "ospf_ia",
                                            "ospf_nssa_1",
                                            "ospf_nssa_2",
                                            "external_1",
                                            "external_2",
                                            "isis_l1",
                                            "isis_l2",
                                            "isis_ia",
                                            "bgp_mpls"
                                        ]
                                    },
                                    "ip_mask": {
                                        "title": "IP Mask",
                                        "description": "IP address and mask representing the subnet this routing table entry routes to.",
                                        "type": "string"
                                    },
                                    "distance": {
                                        "title": "Administrative Distance",
                                        "description": "Rating of how expensive this routing table entry is, based on distance traveled and other factors.",
                                        "type": "integer"
                                    },
                                    "metric": {
                                        "title": "Metric",
                                        "description": "A calculated rating of how 'good' this routing table entry is.",
                                        "type": "integer"
                                    },
                                    "priority": {
                                        "title": "Priority",
                                        "description": "A calculated priority of this IPv4 route.",
                                        "type": "integer"
                                    },
                                    "vrf": {
                                        "title": "Virtual Routing and Forwarding",
                                        "description": "ID of the virtual routing and forwarding table that this routing table entry is in.",
                                        "type": "integer"
                                    },
                                    "gateway": {
                                        "title": "Gateway",
                                        "description": "IP address of the gateway that traffic will be forwarded to.",
                                        "type": "string"
                                    },
                                    "interface": {
                                        "title": "Interface",
                                        "description": "Interface that this routing table entry goes through.",
                                        "type": "string"
                                    },
                                    "is_tunnel_route": {
                                        "title": "Is Tunnel Route",
                                        "description": "True if this is a tunnel route.",
                                        "type": "boolean"
                                    },
                                    "tunnel_parent": {
                                        "title": "Tunnel Parent",
                                        "description": "Name of the interface that is the tunnel parent for this routing table entry.",
                                        "type": "string"
                                    },
                                    "install_date": {
                                        "title": "Install Date",
                                        "description": "Timestamp of when the routing table entry was installed, in seconds. Only used for dynamic routing.",
                                        "type": "integer"
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/router\/ipv4.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Starting entry index.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of entries to return (Default for all routes).",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ip_mask",
                        "in": "query",
                        "description": "Filter: IP\/netmask.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gateway",
                        "in": "query",
                        "description": "Filter: gateway.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter: route type.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interface",
                        "in": "query",
                        "description": "Filter: interface name.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router"
                ]
            }
        },
        "\/router\/ipv6": {
            "get": {
                "summary": "List all active IPv6 routing table entries.\nAccess Group: netgrp.route-cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Starting entry index.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of entries to return (Default for all routes).",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ip_mask",
                        "in": "query",
                        "description": "Filter: IP\/netmask.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gateway",
                        "in": "query",
                        "description": "Filter: gateway.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter: route type.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interface",
                        "in": "query",
                        "description": "Filter: interface name.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router"
                ]
            }
        },
        "\/router\/bgp\/neighbors": {
            "get": {
                "summary": "List all discovered BGP neighbors.\nAccess Group: netgrp.route-cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "BGP Neighbors Routing Monitor",
                            "description": "List all discovered BGP neighbors.",
                            "type": "array",
                            "items": {
                                "title": "BGP Neighbors Routing Monitor Entry",
                                "description": "BGP neighbors routing table entry.",
                                "type": "object",
                                "required": [
                                    "neighbor_ip",
                                    "local_ip",
                                    "remote_as",
                                    "admin_status",
                                    "state",
                                    "type"
                                ],
                                "properties": {
                                    "neighbor_ip": {
                                        "title": "Neighbor IP Address",
                                        "description": "IP address of the discovered neighbor router.",
                                        "type": "string"
                                    },
                                    "local_ip": {
                                        "title": "Current Device IP Address",
                                        "description": "IP address of the current device.",
                                        "type": "string"
                                    },
                                    "remote_as": {
                                        "title": "Remote AS",
                                        "description": "AS number of the discovered neighbor router.",
                                        "type": "integer"
                                    },
                                    "admin_status": {
                                        "title": "Administrative Status",
                                        "description": "True when administrative status for the neighbor is enabled.",
                                        "type": "boolean"
                                    },
                                    "state": {
                                        "title": "BGP Neighbor State",
                                        "description": "BGP neighbor operational state.",
                                        "type": "string",
                                        "enum": [
                                            "Idle",
                                            "Connect",
                                            "Active",
                                            "Open sent",
                                            "Open confirm",
                                            "Established"
                                        ]
                                    },
                                    "type": {
                                        "title": "BGP Neighbor Type",
                                        "description": "BGP neighbor type, IPv4 or IPv6.",
                                        "type": "string"
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/router\/bgp.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "router"
                ]
            }
        },
        "\/router\/bgp\/neighbors6": {
            "get": {
                "summary": "List all discovered IPv6 BGP neighbors.\nAccess Group: netgrp.route-cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "IPv6 BGP Neighbors Routing Monitor",
                            "description": "List all discovered IPv6 BGP neighbors.",
                            "type": "array",
                            "items": {
                                "title": "IPv6 BGP Neighbors Routing Monitor Entry",
                                "description": "IPv6 BGP neighbors routing table entry.",
                                "type": "object",
                                "required": [
                                    "neighbor_ip",
                                    "local_ip",
                                    "remote_as",
                                    "admin_status",
                                    "state"
                                ],
                                "properties": {
                                    "neighbor_ip": {
                                        "title": "Neighbor IPv6 Address",
                                        "description": "IP address of the discovered neighbor router.",
                                        "type": "string"
                                    },
                                    "local_ip": {
                                        "title": "Current Device IPv6 Address",
                                        "description": "IP address of the current device.",
                                        "type": "string"
                                    },
                                    "remote_as": {
                                        "title": "Remote AS",
                                        "description": "AS number of the discovered neighbor router.",
                                        "type": "integer"
                                    },
                                    "admin_status": {
                                        "title": "Administrative Status",
                                        "description": "True when administrative status for the neighbor is enabled.",
                                        "type": "boolean"
                                    },
                                    "state": {
                                        "title": "BGP Neighbor State",
                                        "description": "BGP neighbor operational state.",
                                        "type": "string",
                                        "enum": [
                                            "Idle",
                                            "Connect",
                                            "Active",
                                            "Open sent",
                                            "Open confirm",
                                            "Established"
                                        ]
                                    },
                                    "type": {
                                        "title": "BGP Neighbor Type",
                                        "description": "BGP neighbor type, IPv4 or IPv6.",
                                        "type": "string"
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/router\/bgp.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "router"
                ]
            }
        },
        "\/router\/bgp\/paths-statistics": {
            "get": {
                "summary": "Retrieve BGP paths statistics, including number of IPv4 or IPv6 BGP paths.\nAccess Group: netgrp.route-cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "BGP Path Statistics",
                            "description": "BGP path statistics.",
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "integer",
                                    "title": "Total BGP Paths Count",
                                    "description": "Total number of IPv4 and IPv6 BGP paths."
                                },
                                "ipv4": {
                                    "type": "integer",
                                    "title": "IPv4 BGP Paths Count",
                                    "description": "Total number of IPv4 BGP paths."
                                },
                                "ipv6": {
                                    "type": "integer",
                                    "title": "IPv6 BGP Paths Count",
                                    "description": "Total number of IPv6 BGP paths."
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/router\/bgp.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "ip_version",
                        "in": "query",
                        "description": "IP version [*ipv4 | ipv6 | ipboth].",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router"
                ]
            }
        },
        "\/router\/bgp\/paths": {
            "get": {
                "summary": "List all discovered BGP paths.\nAccess Group: netgrp.route-cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "BGP Paths Routing Monitor",
                            "description": "List all discovered BGP paths.",
                            "type": "array",
                            "items": {
                                "title": "BGP Paths Routing Monitor Entry",
                                "description": "BGP paths routing table entry.",
                                "type": "object",
                                "required": [
                                    "nlri_prefix",
                                    "nlri_prefix_len",
                                    "learned_from",
                                    "next_hop",
                                    "origin",
                                    "is_best"
                                ],
                                "properties": {
                                    "nlri_prefix": {
                                        "title": "Route Address Prefix",
                                        "description": "Route address prefix learned from NLRI.",
                                        "type": "string"
                                    },
                                    "nlri_prefix_len": {
                                        "title": "Route Address Prefix Length",
                                        "description": "Route address prefix length learned from NLRI.",
                                        "type": "integer"
                                    },
                                    "learned_from": {
                                        "title": "Learned From",
                                        "description": "Name of the peer this path was learned from.",
                                        "type": "string"
                                    },
                                    "next_hop": {
                                        "title": "Next Hop Address",
                                        "description": "Next hop address for this path.",
                                        "type": "string"
                                    },
                                    "origin": {
                                        "title": "Origin",
                                        "description": "Origin of the learned path, igp, egp or incomplete.",
                                        "type": "string",
                                        "enum": [
                                            "igp",
                                            "egp",
                                            "incomplete"
                                        ]
                                    },
                                    "is_best": {
                                        "title": "Best Path",
                                        "description": "True when this entry is the best path.",
                                        "type": "boolean"
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/router\/bgp.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Starting entry index.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of entries to return (Default behavior will return all BGP Paths).",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "router"
                ]
            }
        },
        "\/router\/bgp\/paths6": {
            "get": {
                "summary": "List all discovered IPv6 BGP paths.\nAccess Group: netgrp.route-cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "IPv6 BGP Paths Routing Monitor",
                            "description": "List all discovered IPv6 BGP paths.",
                            "type": "array",
                            "items": {
                                "title": "IPv6 BGP Paths Routing Monitor Entry",
                                "description": "IPv6 BGP paths routing table entry.",
                                "type": "object",
                                "required": [
                                    "nlri_prefix",
                                    "nlri_prefix_len",
                                    "learned_from",
                                    "next_hop_local",
                                    "next_hop_global",
                                    "origin",
                                    "is_best"
                                ],
                                "properties": {
                                    "nlri_prefix": {
                                        "title": "Route Address Prefix",
                                        "description": "Route address prefix learned from NLRI.",
                                        "type": "string"
                                    },
                                    "nlri_prefix_len": {
                                        "title": "Route Address Prefix Length",
                                        "description": "Route address prefix length learned from NLRI.",
                                        "type": "integer"
                                    },
                                    "learned_from": {
                                        "title": "Learned From",
                                        "description": "Name of the peer this path was learned from.",
                                        "type": "string"
                                    },
                                    "next_hop_local": {
                                        "title": "Next Hop Local IPv6 Address",
                                        "description": "Local next hop address for this path.",
                                        "type": "string"
                                    },
                                    "next_hop_global": {
                                        "title": "Next Hop Global IPv6  Address",
                                        "description": "Global next hop address for this path.",
                                        "type": "string"
                                    },
                                    "origin": {
                                        "title": "Origin",
                                        "description": "Origin of the learned path, igp, egp or incomplete.",
                                        "type": "string",
                                        "enum": [
                                            "igp",
                                            "egp",
                                            "incomplete"
                                        ]
                                    },
                                    "is_best": {
                                        "title": "Best Path",
                                        "description": "True when this entry is the best path.",
                                        "type": "boolean"
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/router\/bgp.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Starting entry index.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of entries to return (Default behavior will return all BGP Paths).",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "router"
                ]
            }
        },
        "\/router\/ospf\/neighbors": {
            "get": {
                "summary": "List all discovered OSPF neighbors.\nAccess Group: netgrp.route-cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "OSPF Neighbor Routing Monitor",
                            "description": "List all discovered OSPF neighbors.",
                            "type": "array",
                            "items": {
                                "title": "OSPF Neighbor Routing Monitor Entry",
                                "description": "OSPF neighbor routing table entry.",
                                "type": "object",
                                "required": [
                                    "neighbor_ip",
                                    "router_id",
                                    "state",
                                    "priority"
                                ],
                                "properties": {
                                    "neighbor_ip": {
                                        "title": "Neighbor IP Address",
                                        "description": "IP address of the discovered neighbor router.",
                                        "type": "string"
                                    },
                                    "router_id": {
                                        "title": "Router ID",
                                        "description": "Router ID of the discovered neighbor router.",
                                        "type": "string"
                                    },
                                    "state": {
                                        "title": "OSPF Neighbor State",
                                        "description": "OSPF neighbor router operational state.",
                                        "type": "string",
                                        "enum": [
                                            "Down",
                                            "Attempt",
                                            "Init",
                                            "Two way",
                                            "Exchange start",
                                            "Exchange",
                                            "Loading",
                                            "Full"
                                        ]
                                    },
                                    "priority": {
                                        "title": "Priority",
                                        "description": "Router priority.",
                                        "type": "integer"
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/router\/ospf.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "router"
                ]
            }
        },
        "\/router\/statistics": {
            "get": {
                "summary": "Retrieve routing table statistics, including number of matched routes.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "ip_version",
                        "in": "query",
                        "description": "IP version (4|6). If not present, IPv4 and IPv6 will be returned.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ip_mask",
                        "in": "query",
                        "description": "Filter: IP\/netmask.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gateway",
                        "in": "query",
                        "description": "Filter: gateway.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter: route type.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interface",
                        "in": "query",
                        "description": "Filter: interface name.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router"
                ]
            }
        },
        "\/router\/lookup": {
            "get": {
                "summary": "Performs a route lookup by querying the routing table.\nAccess Group: netgrp.route-cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "ipv6",
                        "in": "query",
                        "description": "Perform an IPv6 lookup.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "destination",
                        "in": "query",
                        "description": "Destination IP\/FQDN.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router"
                ]
            }
        },
        "\/router\/lookup-policy": {
            "get": {
                "summary": "Performs a route lookup by querying the policy routing table.\nAccess Group: netgrp.route-cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "ipv6",
                        "in": "query",
                        "description": "Perform an IPv6 lookup.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "destination",
                        "in": "query",
                        "description": "Destination IP\/FQDN.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "Source IP\/FQDN.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "destination_port",
                        "in": "query",
                        "description": "Destination Port.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "interface_name",
                        "in": "query",
                        "description": "Incoming Interface.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "protocol_number",
                        "in": "query",
                        "description": "IP Protocol Number.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "router"
                ]
            }
        },
        "\/router\/policy": {
            "get": {
                "summary": "Retrieve a list of active IPv4 policy routes.\nAccess Group: netgrp.route-cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "anyOf": [
                                {
                                    "title": "IPv4 Policy Routes",
                                    "description": "List all IPv4 policy routes.",
                                    "type": "array",
                                    "items": {
                                        "title": "Policy Route",
                                        "description": "Details for a policy route.",
                                        "type": "object",
                                        "required": [
                                            "id",
                                            "enabled",
                                            "action",
                                            "protocol"
                                        ],
                                        "properties": {
                                            "id": {
                                                "title": "Policy Route ID",
                                                "description": "ID of the policy route.",
                                                "type": "integer"
                                            },
                                            "enabled": {
                                                "title": "Enabled",
                                                "description": "True when the policy route is enabled.",
                                                "type": "boolean"
                                            },
                                            "action": {
                                                "title": "Action",
                                                "type": "string",
                                                "description": "Action to take when traffic matches the policy route.",
                                                "enum": [
                                                    "route",
                                                    "deny"
                                                ]
                                            },
                                            "negate_source": {
                                                "title": "Negate Source",
                                                "description": "True when negate source address match is enabled.",
                                                "type": "boolean"
                                            },
                                            "negate_destination": {
                                                "title": "Negate Destination",
                                                "description": "True when negate destination address match is enabled.",
                                                "type": "boolean"
                                            },
                                            "protocol": {
                                                "title": "Protocol Number",
                                                "description": "IP protocol number. 0 means all protocols.",
                                                "type": "integer"
                                            },
                                            "protocol_name": {
                                                "title": "Protocol Name",
                                                "description": "IP protocol name.",
                                                "type": "string"
                                            },
                                            "type_of_service": {
                                                "title": "Type of Service",
                                                "description": "Matching rules for the ToS field of the IPv4 header.",
                                                "type": "object",
                                                "properties": {
                                                    "pattern": {
                                                        "title": "Pattern",
                                                        "description": "ToS bit pattern. The format is 0xff.",
                                                        "type": "string"
                                                    },
                                                    "mask": {
                                                        "title": "Mask",
                                                        "description": "ToS bits to evaluate. The format is 0xff.",
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "src_interfaces": {
                                                "title": "Source Interfaces",
                                                "description": "A list of source interface names.",
                                                "type": "array",
                                                "items": {
                                                    "title": "Source Interface",
                                                    "description": "A source interface for this route.",
                                                    "type": "string"
                                                }
                                            },
                                            "dst_interfaces": {
                                                "title": "Destination Interfaces",
                                                "description": "A list of destination interface names.",
                                                "type": "array",
                                                "items": {
                                                    "title": "Destination Interface",
                                                    "description": "A destination interface for this route.",
                                                    "type": "string"
                                                }
                                            },
                                            "gateway": {
                                                "title": "Gateway",
                                                "description": "A map associating outgoing interface names to their gateway address.",
                                                "type": "object",
                                                "additionalProperties": {
                                                    "title": "Interface Gateway Association",
                                                    "description": "Each key is an outgoing interface name. Each value is the IPv4 gateway address associated with that interface.",
                                                    "type": "string"
                                                }
                                            },
                                            "src_port": {
                                                "title": "Source Port Range",
                                                "description": "The range of source ports.",
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "properties": {
                                                    "from": {
                                                        "title": "Starting Port",
                                                        "description": "Starting port of the port range.",
                                                        "type": "integer"
                                                    },
                                                    "to": {
                                                        "title": "Ending Port",
                                                        "description": "Ending port of the port range.",
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "dst_ports": {
                                                "title": "Destination Port Ranges",
                                                "description": "A list of destination port ranges.",
                                                "type": "array",
                                                "items": {
                                                    "title": "Destination Port Range",
                                                    "description": "A range of destination ports for this route.",
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "properties": {
                                                        "from": {
                                                            "title": "Starting Port",
                                                            "description": "Starting port of the port range.",
                                                            "type": "integer"
                                                        },
                                                        "to": {
                                                            "title": "Ending Port",
                                                            "description": "Ending port of the port range.",
                                                            "type": "integer"
                                                        }
                                                    }
                                                }
                                            },
                                            "source_addresses": {
                                                "title": "Source Address Ranges",
                                                "description": "A list of IPv4 source address ranges.",
                                                "type": "array",
                                                "items": {
                                                    "title": "Source Address Range",
                                                    "description": "A source address range for this route.",
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "properties": {
                                                        "from": {
                                                            "title": "Starting Address",
                                                            "description": "Starting IPv4 address of the address range.",
                                                            "type": "string"
                                                        },
                                                        "to": {
                                                            "title": "Ending Address",
                                                            "description": "Ending IPv4 address of the address range.",
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "dst_addresses": {
                                                "title": "Destination Address Ranges",
                                                "description": "A list of IPv4 destination address ranges.",
                                                "type": "array",
                                                "items": {
                                                    "title": "Destination Address Range",
                                                    "description": "A destination address range for this route.",
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "properties": {
                                                        "from": {
                                                            "title": "Starting Address",
                                                            "description": "Starting IPv4 address of the address range.",
                                                            "type": "string"
                                                        },
                                                        "to": {
                                                            "title": "Ending Address",
                                                            "description": "Ending IPv4 address of the address range.",
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "src_address_objects": {
                                                "title": "Source Address FQDN Objects",
                                                "description": "A list of FQDN source addresses.",
                                                "type": "array",
                                                "items": {
                                                    "title": "Source Address FQDN Object",
                                                    "description": "A source firewall FQDN address for this route.",
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "title": "FQDN Object ID",
                                                            "description": "ID of the FQDN address object.",
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "title": "FQDN Object Name",
                                                            "description": "Name of the FQDN address object.",
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "dst_address_objects": {
                                                "title": "Destination Address FQDN Objects",
                                                "description": "A list of FQDN destination addresses.",
                                                "type": "array",
                                                "items": {
                                                    "title": "Destination Address FQDN Object",
                                                    "description": "A destination firewall FQDN address for this route.",
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "title": "FQDN Object ID",
                                                            "description": "ID of the FQDN address object.",
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "title": "FQDN Object Name",
                                                            "description": "Name of the FQDN address object.",
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "src_countries": {
                                                "title": "Source Address Countries",
                                                "description": "A list of source country addresses.",
                                                "type": "array",
                                                "items": {
                                                    "title": "Source Address Country",
                                                    "description": "A country address identifier for the source.",
                                                    "type": "string"
                                                }
                                            },
                                            "dst_countries": {
                                                "title": "Destination Address Countries",
                                                "description": "A list of destination country addresses.",
                                                "type": "array",
                                                "items": {
                                                    "title": "Destination Address Country",
                                                    "description": "A destination county address.",
                                                    "type": "string"
                                                }
                                            },
                                            "src_wildcard": {
                                                "title": "Source Wildcard Addresses",
                                                "description": "A list of source IPv4 subnet addresses.",
                                                "type": "array",
                                                "items": {
                                                    "title": "Source Wildcard Address",
                                                    "description": "A source wildcard firewall address for this route.",
                                                    "type": "string"
                                                }
                                            },
                                            "dst_wildcard": {
                                                "title": "Destination Wildcard Addresses",
                                                "description": "A list of destination IPv4 subnet addresses.",
                                                "type": "array",
                                                "items": {
                                                    "title": "Destination Wildcard Address",
                                                    "description": "A destination wildcard firewall address for this route.",
                                                    "type": "string"
                                                }
                                            },
                                            "internet_services": {
                                                "title": "Destination Internet Services",
                                                "description": "A list of destination internet services.",
                                                "type": "array",
                                                "items": {
                                                    "title": "Destination Internet Service",
                                                    "description": "A destination internet service for this route.",
                                                    "type": "string"
                                                }
                                            },
                                            "user_groups": {
                                                "title": "User Groups",
                                                "description": "User groups for source address matching. Only used for SD-WAN rules.",
                                                "type": "array",
                                                "items": {
                                                    "title": "User Group",
                                                    "description": "A user group for source address matching.",
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "title": "User Group Type",
                                                            "type": "string",
                                                            "description": "Type of the user group.",
                                                            "enum": [
                                                                "user",
                                                                "group"
                                                            ]
                                                        },
                                                        "name": {
                                                            "title": "User Group Name",
                                                            "description": "Name of the user group.",
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "is_static_route": {
                                                "title": "Static Route",
                                                "description": "True when this policy route is created by a static route. Static routes based on internet service will provision a policy route.",
                                                "type": "boolean"
                                            },
                                            "static_route_id": {
                                                "title": "Static Route ID",
                                                "description": "The ID of the static route that created this policy route.",
                                                "type": "integer"
                                            },
                                            "is_vwl_route": {
                                                "title": "SD-WAN Route",
                                                "description": "True when this policy route is created by a SD-WAN rule.",
                                                "type": "boolean"
                                            },
                                            "vwl_rule": {
                                                "title": "SD-WAN Rule",
                                                "description": "The SD-WAN rule that created this policy route.",
                                                "type": "object",
                                                "required": [
                                                    "id"
                                                ],
                                                "properties": {
                                                    "id": {
                                                        "title": "SD-WAN Rule ID",
                                                        "description": "ID of the SD-WAN rule.",
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "title": "SD-WAN Rule Name",
                                                        "description": "Name of the SD-WAN rule.",
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "last_used": {
                                                "type": "integer",
                                                "title": "Last Used",
                                                "description": "Timestamp of when the policy route was last used."
                                            },
                                            "hit_count": {
                                                "type": "integer",
                                                "title": "Hit Count",
                                                "description": "Number of times the policy route has been used."
                                            }
                                        }
                                    }
                                },
                                {
                                    "title": "IPv4 Policy Routes Count",
                                    "description": "If the parameter count_only is set to true, the total number of policy routes will be returned instead.",
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "title": "Count",
                                            "description": "The number of IPv4 policy routes.",
                                            "type": "integer"
                                        }
                                    }
                                }
                            ],
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/router\/policy.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Starting entry index.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of entries to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "count_only",
                        "in": "query",
                        "description": "Returns the number of IPv4 policy routes only.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "tags": [
                    "router"
                ]
            }
        },
        "\/router\/policy6": {
            "get": {
                "summary": "Retrieve a list of active IPv6 policy routes.\nAccess Group: netgrp.route-cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "anyOf": [
                                {
                                    "title": "IPv6 Policy Routes",
                                    "description": "List all IPv6 policy routes.",
                                    "type": "array",
                                    "items": {
                                        "title": "IPv6 Policy Route",
                                        "description": "Details for an IPv6 policy route.",
                                        "type": "object",
                                        "required": [
                                            "id",
                                            "enabled",
                                            "protocol"
                                        ],
                                        "properties": {
                                            "id": {
                                                "title": "Policy Route ID",
                                                "description": "ID of the policy route.",
                                                "type": "integer"
                                            },
                                            "enabled": {
                                                "title": "Enabled",
                                                "description": "True when the policy route is enabled.",
                                                "type": "boolean"
                                            },
                                            "protocol": {
                                                "title": "Protocol Number",
                                                "description": "IP protocol number. 0 means all protocols.",
                                                "type": "integer"
                                            },
                                            "protocol_name": {
                                                "title": "Protocol Name",
                                                "description": "IP protocol name.",
                                                "type": "string"
                                            },
                                            "type_of_service": {
                                                "title": "Type of Service",
                                                "description": "Matching rules for the ToS field of the IPv6 header.",
                                                "type": "object",
                                                "properties": {
                                                    "pattern": {
                                                        "title": "Pattern",
                                                        "description": "ToS bit pattern. The format is 0xff.",
                                                        "type": "string"
                                                    },
                                                    "mask": {
                                                        "title": "Mask",
                                                        "description": "ToS bits to evaluate. The format is 0xff.",
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "srcintf": {
                                                "title": "Source Interfaces",
                                                "description": "A list of source interface names.",
                                                "type": "array",
                                                "items": {
                                                    "title": "Source Interface",
                                                    "description": "A source interface for this route.",
                                                    "type": "string"
                                                }
                                            },
                                            "dstintf": {
                                                "title": "Destination Interfaces",
                                                "description": "A list of destination interface names.",
                                                "type": "array",
                                                "items": {
                                                    "title": "Destination Interface",
                                                    "description": "A destination interface for this route.",
                                                    "type": "string"
                                                }
                                            },
                                            "gateway": {
                                                "title": "Gateway",
                                                "description": "A map associating outgoing interface names to their gateway address.",
                                                "type": "object",
                                                "additionalProperties": {
                                                    "title": "Interface Gateway Association",
                                                    "description": "Each key is an outgoing interface name. Each value is the IPv6 gateway address associated with that interface.",
                                                    "type": "string"
                                                }
                                            },
                                            "port": {
                                                "title": "Destination Port Range",
                                                "description": "The range of destination ports.",
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "properties": {
                                                    "from": {
                                                        "title": "Starting Port",
                                                        "description": "Starting port of the port range.",
                                                        "type": "integer"
                                                    },
                                                    "to": {
                                                        "title": "Ending Port",
                                                        "description": "Ending port of the port range.",
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "srcaddr": {
                                                "title": "Source Addresses",
                                                "description": "Source IPv6 subnet addresses.",
                                                "type": "array",
                                                "items": {
                                                    "title": "Source Address",
                                                    "description": "A source firewall address for this route.",
                                                    "type": "string"
                                                }
                                            },
                                            "dstaddr": {
                                                "title": "Destination Addresses",
                                                "description": "Destination IPv6 subnet addresses.",
                                                "type": "array",
                                                "items": {
                                                    "title": "Destination Address",
                                                    "description": "A destination firewall address for this route.",
                                                    "type": "string"
                                                }
                                            },
                                            "is_vwl_route": {
                                                "title": "SD-WAN Route",
                                                "description": "True when this policy route is created by an SD-WAN rule.",
                                                "type": "boolean"
                                            },
                                            "vwl_rule": {
                                                "title": "SD-WAN Rule",
                                                "description": "The SD-WAN rule that created this policy route.",
                                                "type": "object",
                                                "required": [
                                                    "id"
                                                ],
                                                "properties": {
                                                    "id": {
                                                        "title": "SD-WAN Rule ID",
                                                        "description": "ID of the SD-WAN rule.",
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "title": "SD-WAN Rule Name",
                                                        "description": "Name of the SD-WAN rule.",
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "last_used": {
                                                "type": "integer",
                                                "title": "Last Used",
                                                "description": "Timestamp of when the policy route was last used."
                                            },
                                            "hit_count": {
                                                "type": "integer",
                                                "title": "Hit Count",
                                                "description": "Number of times the policy route has been used."
                                            }
                                        }
                                    }
                                },
                                {
                                    "title": "IPv6 Policy Routes Count",
                                    "description": "If the parameter count_only is set to true, the total number of policy routes will be returned instead.",
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "title": "Count",
                                            "description": "The number of IPv6 policy routes.",
                                            "type": "integer"
                                        }
                                    }
                                }
                            ],
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/router\/policy6.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Starting entry index.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of entries to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "count_only",
                        "in": "query",
                        "description": "Returns the number of IPv6 policy routes only.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "tags": [
                    "router"
                ]
            }
        },
        "\/router\/bgp\/clear-soft-in": {
            "post": {
                "summary": "Inbound soft-reconfiguration for BGP peers.\nAccess Group: netgrp.route-cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "router"
                ]
            }
        },
        "\/router\/bgp\/clear-soft-out": {
            "post": {
                "summary": "Outbound soft-reconfiguration for BGP peers.\nAccess Group: netgrp.route-cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "router"
                ]
            }
        },
        "\/switch-controller\/managed-switch": {
            "get": {
                "summary": "Retrieve statistics for configured FortiSwitches. Deprecated. It will be removed in 7.2.       It's replaced by \/api\/v2\/monitor\/switch-controller\/managed-switch\/status for faster performance.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiSwitch Statistics",
                            "description": "Retrieve statistics for configured FortiSwitches.",
                            "type": "array",
                            "deprecated": true,
                            "x-scheduledRemoval": {
                                "major": 7,
                                "minor": 2
                            },
                            "items": {
                                "title": "FortiSwitch Details",
                                "description": "Details for a configured FortiSwitch.",
                                "type": "object",
                                "required": [
                                    "name",
                                    "serial",
                                    "fgt_peer_intf_name",
                                    "state",
                                    "status",
                                    "ports",
                                    "max_poe_budget",
                                    "igmp_snooping_supported",
                                    "dhcp_snooping_supported",
                                    "mc_lag_supported",
                                    "led_blink_supported",
                                    "faceplate_xml",
                                    "vdom",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "title": "FortiSwitch Name",
                                        "description": "Alias (name) given to the FortiSwitch."
                                    },
                                    "serial": {
                                        "type": "string",
                                        "title": "FortiSwitch Serial",
                                        "description": "FortiSwitch serial number."
                                    },
                                    "fgt_peer_intf_name": {
                                        "type": "string",
                                        "title": "FortiLink Interface",
                                        "description": "FortiLink interface that the FortiSwitch is connected to."
                                    },
                                    "state": {
                                        "type": "string",
                                        "title": "State",
                                        "description": "Authorization state of the FortiSwitch."
                                    },
                                    "status": {
                                        "type": "string",
                                        "title": "Status",
                                        "description": "Connection status of the FortiSwitch with this device."
                                    },
                                    "os_version": {
                                        "type": "string",
                                        "title": "Firmware Version",
                                        "description": "Firmware version that is running on the FortiSwitch."
                                    },
                                    "connecting_from": {
                                        "type": "string",
                                        "title": "Connecting From",
                                        "description": "FortiSwitch port that is connected to the FortiLink interface."
                                    },
                                    "join_time": {
                                        "type": "string",
                                        "title": "Join Time",
                                        "description": "Time that the FortiSwitch joined this device."
                                    },
                                    "ports": {
                                        "type": "array",
                                        "title": "FortiSwitch Port Details",
                                        "description": "Details for every port on the FortiSwitch.",
                                        "items": {
                                            "title": "FortiSwitch Specific Port Details",
                                            "description": "Details of a port on the FortiSwitch.",
                                            "type": "object",
                                            "required": [
                                                "interface",
                                                "status",
                                                "fortilink_port",
                                                "vlan",
                                                "fgt_peer_device_name",
                                                "isl_peer_device_name",
                                                "isl_peer_port_name",
                                                "isl_peer_trunk_name"
                                            ],
                                            "properties": {
                                                "interface": {
                                                    "type": "string",
                                                    "title": "Interface Name",
                                                    "description": "Alias (name) given to the FortiSwitch port."
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "title": "Link Status",
                                                    "description": "Link status of the FortiSwitch port."
                                                },
                                                "port_power": {
                                                    "type": "number",
                                                    "title": "Port Power",
                                                    "description": "Port power measured in watts."
                                                },
                                                "power_status": {
                                                    "type": "integer",
                                                    "title": "Power Status",
                                                    "description": "Power status of the PoE port (0 = Disabled, 1 = Searching, 2 = Delivering power, 3 = Test mode, 4 = Fault, 5 = Other fault, 6 = Requires power)."
                                                },
                                                "transceiver": {
                                                    "type": "object",
                                                    "title": "Transceiver",
                                                    "description": "Information about the transceiver module connected to this port.",
                                                    "required": [
                                                        "fortiswitch_id",
                                                        "port",
                                                        "status"
                                                    ],
                                                    "properties": {
                                                        "fortiswitch_id": {
                                                            "type": "string",
                                                            "title": "FortiSwitch Serial Number",
                                                            "description": "Serial number of the FortiSwitch that the module is connected to."
                                                        },
                                                        "port": {
                                                            "type": "string",
                                                            "title": "FortiSwitch Port",
                                                            "description": "FortiSwitch port that the transceiver module is connected to."
                                                        },
                                                        "status": {
                                                            "type": "string",
                                                            "title": "Status",
                                                            "description": "Link status of the transceiver module."
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "title": "Module Type",
                                                            "description": "Type of the transceiver module.",
                                                            "enum": [
                                                                "QSFP-28",
                                                                "QSFP+",
                                                                "SFP\/SFP+",
                                                                "QSFP\/QSFP+",
                                                                "CFP\/CFP2\/CFP4",
                                                                "QSFP+\/QSFP28",
                                                                "Unk (0x00)"
                                                            ]
                                                        },
                                                        "vendor": {
                                                            "type": "string",
                                                            "title": "Vendor Name",
                                                            "description": "Name of the vendor for the transceiver module."
                                                        },
                                                        "vendor_part_number": {
                                                            "type": "string",
                                                            "title": "Module Vendor Part Number",
                                                            "description": "Vendor part number for the transceiver module."
                                                        },
                                                        "vendor_serial_number": {
                                                            "type": "string",
                                                            "title": "Module Vendor Serial Number",
                                                            "description": "Vendor serial number for the transceiver module."
                                                        }
                                                    }
                                                },
                                                "duplex": {
                                                    "type": "string",
                                                    "title": "Duplex Status",
                                                    "description": "Duplex status of the FortiSwitch port."
                                                },
                                                "speed": {
                                                    "type": "integer",
                                                    "title": "Speed",
                                                    "description": "Speed of the FortiSwitch port."
                                                },
                                                "fortilink_port": {
                                                    "type": "boolean",
                                                    "title": "FortiLink Port",
                                                    "description": "True when the FortiSwitch port is connected to a FortiLink port on this FortiGate device."
                                                },
                                                "vlan": {
                                                    "type": "string",
                                                    "title": "VLAN",
                                                    "description": "Native VLAN of the FortiSwitch port."
                                                },
                                                "fgt_peer_port_name": {
                                                    "type": "string",
                                                    "title": "Peer Port Name",
                                                    "description": "FortiGate peer port name."
                                                },
                                                "fgt_peer_device_name": {
                                                    "type": "string",
                                                    "title": "Device Name",
                                                    "description": "FortiGate peer device name."
                                                },
                                                "isl_peer_device_name": {
                                                    "type": "string",
                                                    "title": "Device Name",
                                                    "description": "ISL peer device name."
                                                },
                                                "isl_peer_port_name": {
                                                    "type": "string",
                                                    "title": "Port Name",
                                                    "description": "ISL peer port name."
                                                },
                                                "isl_peer_trunk_name": {
                                                    "type": "string",
                                                    "title": "Trunk Name",
                                                    "description": "ISL peer trunk name."
                                                },
                                                "mclag_icl": {
                                                    "type": "boolean",
                                                    "title": "MC-LAG ICL",
                                                    "description": "True when MC-LAG ICL is enabled."
                                                },
                                                "mclag": {
                                                    "type": "boolean",
                                                    "title": "MC-LAG",
                                                    "description": "True when MC-LAG is enabled."
                                                },
                                                "poe_capable": {
                                                    "type": "boolean",
                                                    "title": "PoE Capable",
                                                    "description": "True when the port is capable of power over ethernet."
                                                },
                                                "poe_status": {
                                                    "type": "string",
                                                    "title": "PoE Status",
                                                    "description": "Status of the PoE port."
                                                },
                                                "tenant_vdom": {
                                                    "type": "string",
                                                    "title": "Tenant VDOM",
                                                    "description": "Name of the tenant VDOM this port is exported to."
                                                }
                                            }
                                        }
                                    },
                                    "max_poe_budget": {
                                        "type": "integer",
                                        "title": "Total PoE Budget",
                                        "description": "Maximum power that can be delivered by the FortiSwitch over all PoE ports."
                                    },
                                    "igmp_snooping_supported": {
                                        "type": "boolean",
                                        "title": "IGMP Snooping Supported",
                                        "description": "True when IGMP snooping is supported."
                                    },
                                    "dhcp_snooping_supported": {
                                        "type": "boolean",
                                        "title": "DHCP Snooping Supported",
                                        "description": "True when DHCP snooping is supported."
                                    },
                                    "mc_lag_supported": {
                                        "type": "boolean",
                                        "title": "MC-LAG Supported",
                                        "description": "True when MC-LAG is supported."
                                    },
                                    "led_blink_supported": {
                                        "type": "boolean",
                                        "title": "LED Blinking Supported",
                                        "description": "True when port LED blink is supported for this FortiSwitch."
                                    },
                                    "is_l3": {
                                        "type": "boolean",
                                        "title": "L3 FortiLink",
                                        "description": "True when the FortiLink connection for this FortiSwitch is established over L3."
                                    },
                                    "port_stats": {
                                        "title": "Port Statistics",
                                        "type": "object",
                                        "description": "A map of FortiSwitch ports to their statistics.",
                                        "additionalProperties": {
                                            "type": "object",
                                            "title": "Port Bandwidth Statistics",
                                            "description": "Port Bandwidth Statistics.",
                                            "properties": {
                                                "tx-bytes": {
                                                    "type": "integer",
                                                    "title": "Bytes Transmitted",
                                                    "description": "The number of bytes transmitted."
                                                },
                                                "tx-packets": {
                                                    "type": "integer",
                                                    "title": "Packets Transmitted",
                                                    "description": "The number of packets transmitted."
                                                },
                                                "tx-ucast": {
                                                    "type": "integer",
                                                    "title": "Unicast Packets Transmitted",
                                                    "description": "The number of unicast packets transmitted."
                                                },
                                                "tx-mcast": {
                                                    "type": "integer",
                                                    "title": "Multicast Packets Transmitted",
                                                    "description": "The number of multicast packets transmitted."
                                                },
                                                "tx-bcast": {
                                                    "type": "integer",
                                                    "title": "Transmissions Broadcast",
                                                    "description": "The number of broadcasts transmitted."
                                                },
                                                "tx-errors": {
                                                    "type": "integer",
                                                    "title": "Transmission Errors",
                                                    "description": "The number of transmission errors."
                                                },
                                                "tx-drops": {
                                                    "type": "integer",
                                                    "title": "Dropped Transmission Packets",
                                                    "description": "The number of packets dropped during transmission."
                                                },
                                                "tx-oversize": {
                                                    "type": "integer",
                                                    "title": "Oversized Transmission Packets",
                                                    "description": "The number of oversized packets transmitted."
                                                },
                                                "rx-bytes": {
                                                    "type": "integer",
                                                    "title": "Received Bytes",
                                                    "description": "The number of received bytes."
                                                },
                                                "rx-packets": {
                                                    "type": "integer",
                                                    "title": "Received Packets",
                                                    "description": "The number of received packets."
                                                },
                                                "rx-ucast": {
                                                    "type": "integer",
                                                    "title": "Received Unicast Packets",
                                                    "description": "The number of received unicast packets."
                                                },
                                                "rx-mcast": {
                                                    "type": "integer",
                                                    "title": "Received Multicast Packets",
                                                    "description": "The number of received multicast packets."
                                                },
                                                "rx-bcast": {
                                                    "type": "integer",
                                                    "title": "Received Broadcast Packets",
                                                    "description": "The number of received broadcast packets."
                                                },
                                                "rx-errors": {
                                                    "type": "integer",
                                                    "title": "Receive Errors",
                                                    "description": "The number of packets with errors that were received."
                                                },
                                                "rx-drops": {
                                                    "type": "integer",
                                                    "title": "Receive Drops",
                                                    "description": "The number of packets that were dropped after being received."
                                                },
                                                "rx-oversize": {
                                                    "type": "integer",
                                                    "title": "Received Oversize",
                                                    "description": "The number of oversized packets that were received."
                                                },
                                                "undersize": {
                                                    "type": "integer",
                                                    "title": "Undersized Packets",
                                                    "description": "The number of undersized packets."
                                                },
                                                "fragments": {
                                                    "type": "integer",
                                                    "title": "Fragments",
                                                    "description": "The number of fragmented packets."
                                                },
                                                "jabbers": {
                                                    "type": "integer",
                                                    "title": "Jabbers",
                                                    "description": "The number of jabber packets."
                                                },
                                                "collisions": {
                                                    "type": "integer",
                                                    "title": "Collisions",
                                                    "description": "The number of collisions."
                                                },
                                                "crc-alignments": {
                                                    "type": "integer",
                                                    "title": "CRC\/Alignments",
                                                    "description": "The number of CRC\/alignment errors."
                                                },
                                                "l3packets": {
                                                    "type": "integer",
                                                    "title": "Layer 3 Packets",
                                                    "description": "The number of Layer 3 packets."
                                                }
                                            },
                                            "additionalProperties": true
                                        }
                                    },
                                    "stp_status": {
                                        "title": "STP Status",
                                        "description": "STP status for ports.",
                                        "type": "array",
                                        "items": {
                                            "title": "STP Status Instance",
                                            "description": "An STP instance for a set of VLANs.",
                                            "type": "object",
                                            "properties": {
                                                "bridge_mac": {
                                                    "type": "string",
                                                    "title": "Bridge MAC Address",
                                                    "description": "MAC address for connecting to another device."
                                                },
                                                "instance_id": {
                                                    "type": "integer",
                                                    "title": "Instance ID",
                                                    "description": "The ID of the instance."
                                                },
                                                "mapped_vlans": {
                                                    "type": "string",
                                                    "title": "Mapped VLANs",
                                                    "description": "Mapped VLANs for the instance."
                                                },
                                                "port_stp_status": {
                                                    "type": "array",
                                                    "title": "Port STP Status List",
                                                    "description": "List of STP status information for each port.",
                                                    "items": {
                                                        "type": "object",
                                                        "title": "Port STP Status",
                                                        "description": "Port STP status entry.",
                                                        "properties": {
                                                            "edge_status": {
                                                                "type": "string",
                                                                "title": "Edge Status",
                                                                "description": "Edge status."
                                                            },
                                                            "port_cost": {
                                                                "type": "integer",
                                                                "title": "Port Cost",
                                                                "description": "Cost of the port."
                                                            },
                                                            "port_name": {
                                                                "type": "string",
                                                                "title": "Port Name",
                                                                "description": "Name of the port."
                                                            },
                                                            "port_priority": {
                                                                "type": "integer",
                                                                "title": "Port Priority",
                                                                "description": "Priority of the port."
                                                            },
                                                            "port_role": {
                                                                "type": "string",
                                                                "title": "Port Role",
                                                                "description": "Role of the port."
                                                            },
                                                            "port_speed": {
                                                                "type": "number",
                                                                "title": "Port Speed",
                                                                "description": "Speed of the port."
                                                            },
                                                            "port_state": {
                                                                "type": "string",
                                                                "title": "Port State",
                                                                "description": "STP state of the port."
                                                            },
                                                            "stp_lg_status": {
                                                                "type": "string",
                                                                "title": "STP LG Status",
                                                                "description": "STP LG status."
                                                            },
                                                            "stp_status": {
                                                                "type": "string",
                                                                "title": "Configured STP Status",
                                                                "description": "STP status configured on the port."
                                                            }
                                                        }
                                                    }
                                                },
                                                "priority": {
                                                    "type": "integer",
                                                    "title": "Priority",
                                                    "description": "Priority value of the instance."
                                                },
                                                "regional_macaddr": {
                                                    "type": "string",
                                                    "title": "Regional MAC Address",
                                                    "description": "Regional MAC address."
                                                },
                                                "regional_pathcost": {
                                                    "type": "integer",
                                                    "title": "Regional Path Cost",
                                                    "description": "Regional path cost."
                                                },
                                                "regional_priority": {
                                                    "type": "integer",
                                                    "title": "Regional Priority",
                                                    "description": "Regional priority."
                                                },
                                                "regional_root_port": {
                                                    "type": "string",
                                                    "title": "Regional Root Port",
                                                    "description": "Regional root port."
                                                },
                                                "remaining_hops": {
                                                    "type": "integer",
                                                    "title": "Remaining Hops",
                                                    "description": "Number of hops remaining."
                                                },
                                                "root": {
                                                    "type": "integer",
                                                    "title": "Root",
                                                    "description": "Root instance ID."
                                                },
                                                "root_macaddr": {
                                                    "type": "string",
                                                    "title": "Root MAC Address",
                                                    "description": "Root MAC address."
                                                },
                                                "root_pathcost": {
                                                    "type": "integer",
                                                    "title": "Root Path Cost",
                                                    "description": "Root path cost."
                                                },
                                                "root_priority": {
                                                    "type": "integer",
                                                    "title": "Root Priority",
                                                    "description": "Root priority."
                                                }
                                            }
                                        }
                                    },
                                    "igmp_snooping_group": {
                                        "title": "IGMP Snooping Groups",
                                        "description": "Details of IGMP snooping groups.",
                                        "type": "object",
                                        "properties": {
                                            "list": {
                                                "type": "array",
                                                "title": "IGMP Snooping Group List",
                                                "description": "List of IGMP snooping groups.",
                                                "items": {
                                                    "type": "object",
                                                    "title": "IGMP Snooping Group",
                                                    "description": "A specific IGMP snooping group.",
                                                    "properties": {
                                                        "age-timeout": {
                                                            "type": "integer",
                                                            "title": "Age Timeout",
                                                            "description": "Time before the group expires."
                                                        },
                                                        "group": {
                                                            "type": "string",
                                                            "title": "Group Name",
                                                            "description": "Name of the group."
                                                        },
                                                        "igmp-version": {
                                                            "type": "string",
                                                            "title": "IGMP Version",
                                                            "description": "Version of the IGMP protocol."
                                                        },
                                                        "of-port": {
                                                            "type": "integer",
                                                            "title": "Logical Port",
                                                            "description": "Logical port number."
                                                        },
                                                        "port": {
                                                            "type": "string",
                                                            "title": "Port Name",
                                                            "description": "Name of the port (Could be a trunk port)."
                                                        },
                                                        "vlan": {
                                                            "type": "integer",
                                                            "title": "VLAN ID",
                                                            "description": "VLAN ID."
                                                        }
                                                    }
                                                }
                                            },
                                            "max-entries": {
                                                "type": "integer",
                                                "title": "Max Entries",
                                                "description": "The maximum number of entries allowed in the list property."
                                            },
                                            "number-of-groups": {
                                                "type": "integer",
                                                "title": "Number of Groups",
                                                "description": "Number of learned multicast groups."
                                            }
                                        }
                                    },
                                    "qos_stats": {
                                        "title": "Quality of Service Statistics",
                                        "description": "Quality of service statistics.",
                                        "type": "array",
                                        "items": {
                                            "title": "Quality of Service Specific Item Details",
                                            "description": "Details for a quality of service entry.",
                                            "type": "object",
                                            "required": [
                                                "port"
                                            ],
                                            "properties": {
                                                "port": {
                                                    "type": "string",
                                                    "title": "Port",
                                                    "description": "The FortiSwitch port that the QoS statistics are for."
                                                },
                                                "queue": {
                                                    "type": "array",
                                                    "title": "Class of Service",
                                                    "description": "Class of service statistics.",
                                                    "items": {
                                                        "title": "Class of Service Entry",
                                                        "description": "Details of a class of service.",
                                                        "type": "object",
                                                        "properties": {
                                                            "index": {
                                                                "type": "integer",
                                                                "title": "Class of Service Index",
                                                                "description": "The class of service index."
                                                            },
                                                            "packets": {
                                                                "type": "integer",
                                                                "title": "Packets",
                                                                "description": "The number of packets."
                                                            },
                                                            "bytes": {
                                                                "type": "integer",
                                                                "title": "Bytes",
                                                                "description": "The number of bytes."
                                                            },
                                                            "drop-packets": {
                                                                "type": "integer",
                                                                "title": "Dropped Packets",
                                                                "description": "The number of dropped packets."
                                                            }
                                                        },
                                                        "additionalProperties": true
                                                    }
                                                }
                                            },
                                            "additionalProperties": true
                                        }
                                    },
                                    "faceplate_xml": {
                                        "type": "string",
                                        "title": "Faceplate XML",
                                        "description": "An XML string containing information on how the FortiSwitch ports are configured."
                                    },
                                    "vdom": {
                                        "type": "string",
                                        "title": "VDOM",
                                        "description": "The VDOM that the FortiSwitch is a part of."
                                    },
                                    "image_download_progress": {
                                        "type": "integer",
                                        "title": "Image Download Progress",
                                        "description": "Image download progress in percentage."
                                    },
                                    "type": {
                                        "type": "string",
                                        "title": "Managed Switch Type",
                                        "description": "Type of the managed switch. A physical switch can be exported to another VDOM as a virtual switch.",
                                        "enum": [
                                            "physical",
                                            "virtual"
                                        ]
                                    },
                                    "owner_vdom": {
                                        "type": "string",
                                        "title": "Owner VDOM",
                                        "description": "The VDOM that owns the physical FortiSwitch."
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/switch-controller\/managed-switch.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Filter: FortiSwitch ID.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "poe",
                        "in": "query",
                        "description": "Filter: Retrieve PoE statistics for ports of configured FortiSwitches. Port power usage is in Watt units.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "port_stats",
                        "in": "query",
                        "description": "Filter: Retrieve tx\/rx statistics for ports of configured FortiSwitches.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "qos_stats",
                        "in": "query",
                        "description": "Filter: Retrieve QoS statistics for ports of configured FortiSwitches.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "stp_status",
                        "in": "query",
                        "description": "Filter: Retrieve STP status for ports of configured FortiSwitches.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "igmp_snooping_group",
                        "in": "query",
                        "description": "Filter: Retrieve IGMP Snooping group for configured FortiSwitches.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "transceiver",
                        "in": "query",
                        "description": "Filter: Retrieve transceiver information for ports of configured FortiSwitches.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "tags": [
                    "switch-controller"
                ]
            }
        },
        "\/switch-controller\/managed-switch\/status": {
            "get": {
                "summary": "Retrieve statistics for configured FortiSwitches.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiSwitch Status",
                            "description": "Retrieve status for configured FortiSwitches.",
                            "type": "array",
                            "items": {
                                "title": "FortiSwitch Details",
                                "description": "Details for a configured FortiSwitch.",
                                "type": "object",
                                "required": [
                                    "name",
                                    "serial",
                                    "fgt_peer_intf_name",
                                    "state",
                                    "status",
                                    "ports",
                                    "max_poe_budget",
                                    "igmp_snooping_supported",
                                    "dhcp_snooping_supported",
                                    "mc_lag_supported",
                                    "led_blink_supported",
                                    "faceplate_xml",
                                    "vdom",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "title": "FortiSwitch Name",
                                        "description": "Alias (name) given to the FortiSwitch."
                                    },
                                    "serial": {
                                        "type": "string",
                                        "title": "FortiSwitch Serial",
                                        "description": "FortiSwitch serial number."
                                    },
                                    "fgt_peer_intf_name": {
                                        "type": "string",
                                        "title": "FortiLink Interface",
                                        "description": "FortiLink interface that the FortiSwitch is connected to."
                                    },
                                    "state": {
                                        "type": "string",
                                        "title": "State",
                                        "description": "Authorization state of the FortiSwitch."
                                    },
                                    "status": {
                                        "type": "string",
                                        "title": "Status",
                                        "description": "Connection status of the FortiSwitch with this device."
                                    },
                                    "os_version": {
                                        "type": "string",
                                        "title": "Firmware Version",
                                        "description": "Firmware version that is running on the FortiSwitch."
                                    },
                                    "connecting_from": {
                                        "type": "string",
                                        "title": "Connecting From",
                                        "description": "FortiSwitch port that is connected to the FortiLink interface."
                                    },
                                    "join_time": {
                                        "type": "string",
                                        "title": "Join Time",
                                        "description": "Time that the FortiSwitch joined this device."
                                    },
                                    "ports": {
                                        "type": "array",
                                        "title": "FortiSwitch Port Details",
                                        "description": "Details for every port on the FortiSwitch.",
                                        "items": {
                                            "title": "FortiSwitch Specific Port Details",
                                            "description": "Details of a port on the FortiSwitch.",
                                            "type": "object",
                                            "required": [
                                                "interface",
                                                "status",
                                                "fortilink_port",
                                                "vlan",
                                                "fgt_peer_device_name",
                                                "isl_peer_device_name",
                                                "isl_peer_port_name",
                                                "isl_peer_trunk_name"
                                            ],
                                            "properties": {
                                                "interface": {
                                                    "type": "string",
                                                    "title": "Interface Name",
                                                    "description": "Alias (name) given to the FortiSwitch port."
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "title": "Link Status",
                                                    "description": "Link status of the FortiSwitch port."
                                                },
                                                "port_power": {
                                                    "type": "number",
                                                    "title": "Port Power",
                                                    "description": "Port power measured in watts."
                                                },
                                                "power_status": {
                                                    "type": "integer",
                                                    "title": "Power Status",
                                                    "description": "Power status of the PoE port (0 = Disabled, 1 = Searching, 2 = Delivering power, 3 = Test mode, 4 = Fault, 5 = Other fault, 6 = Requires power)."
                                                },
                                                "stp_status": {
                                                    "title": "STP Status",
                                                    "description": "Port STP status.",
                                                    "enum": [
                                                        "",
                                                        "disabled",
                                                        "forwarding",
                                                        "discarding",
                                                        "unavailable"
                                                    ],
                                                    "type": "string"
                                                },
                                                "igmp_snooping_group": {
                                                    "title": "IGMP Snooping Groups",
                                                    "description": "Details of IGMP snooping groups.",
                                                    "type": "object",
                                                    "properties": {
                                                        "group_count": {
                                                            "type": "integer",
                                                            "title": "Number of Groups",
                                                            "description": "Number of learned multicast groups."
                                                        }
                                                    }
                                                },
                                                "dhcp_snooping": {
                                                    "title": "DHCP Snooping",
                                                    "description": "Details of DHCP Snooping.",
                                                    "type": "object",
                                                    "properties": {
                                                        "untrusted": {
                                                            "type": "integer",
                                                            "title": "Number of Untrusted DHCP Servers",
                                                            "description": "Number of untrusted DHCP servers detected."
                                                        }
                                                    }
                                                },
                                                "transceiver": {
                                                    "type": "object",
                                                    "title": "Transceiver",
                                                    "description": "Information about the transceiver module connected to this port.",
                                                    "required": [
                                                        "vendor_part_number",
                                                        "vendor"
                                                    ],
                                                    "properties": {
                                                        "vendor": {
                                                            "type": "string",
                                                            "title": "Vendor Name",
                                                            "description": "Name of the vendor for the transceiver module."
                                                        },
                                                        "vendor_part_number": {
                                                            "type": "string",
                                                            "title": "Module Vendor Part Number",
                                                            "description": "Vendor part number for the transceiver module."
                                                        }
                                                    }
                                                },
                                                "duplex": {
                                                    "type": "string",
                                                    "title": "Duplex Status",
                                                    "description": "Duplex status of the FortiSwitch port."
                                                },
                                                "speed": {
                                                    "type": "integer",
                                                    "title": "Speed",
                                                    "description": "Speed of the FortiSwitch port."
                                                },
                                                "fortilink_port": {
                                                    "type": "boolean",
                                                    "title": "FortiLink Port",
                                                    "description": "True when the FortiSwitch port is connected to a FortiLink port on this FortiGate device."
                                                },
                                                "vlan": {
                                                    "type": "string",
                                                    "title": "VLAN",
                                                    "description": "Native VLAN of the FortiSwitch port."
                                                },
                                                "fgt_peer_port_name": {
                                                    "type": "string",
                                                    "title": "Peer Port Name",
                                                    "description": "FortiGate peer port name."
                                                },
                                                "fgt_peer_device_name": {
                                                    "type": "string",
                                                    "title": "Device Name",
                                                    "description": "FortiGate peer device name."
                                                },
                                                "isl_peer_device_name": {
                                                    "type": "string",
                                                    "title": "Device Name",
                                                    "description": "ISL peer device name."
                                                },
                                                "isl_peer_port_name": {
                                                    "type": "string",
                                                    "title": "Port Name",
                                                    "description": "ISL peer port name."
                                                },
                                                "isl_peer_trunk_name": {
                                                    "type": "string",
                                                    "title": "Trunk Name",
                                                    "description": "ISL peer trunk name."
                                                },
                                                "mclag_icl": {
                                                    "type": "boolean",
                                                    "title": "MC-LAG ICL",
                                                    "description": "True when MC-LAG ICL is enabled."
                                                },
                                                "mclag": {
                                                    "type": "boolean",
                                                    "title": "MC-LAG",
                                                    "description": "True when MC-LAG is enabled."
                                                },
                                                "poe_capable": {
                                                    "type": "boolean",
                                                    "title": "PoE Capable",
                                                    "description": "True when the port is capable of power over ethernet."
                                                },
                                                "poe_status": {
                                                    "type": "string",
                                                    "title": "PoE Status",
                                                    "description": "Status of the PoE port."
                                                },
                                                "tenant_vdom": {
                                                    "type": "string",
                                                    "title": "Tenant VDOM",
                                                    "description": "Name of the tenant VDOM this port is exported to."
                                                }
                                            }
                                        }
                                    },
                                    "max_poe_budget": {
                                        "type": "integer",
                                        "title": "Total PoE Budget",
                                        "description": "Maximum power that can be delivered by the FortiSwitch over all PoE ports."
                                    },
                                    "igmp_snooping_supported": {
                                        "type": "boolean",
                                        "title": "IGMP Snooping Supported",
                                        "description": "True when IGMP snooping is supported."
                                    },
                                    "dhcp_snooping_supported": {
                                        "type": "boolean",
                                        "title": "DHCP Snooping Supported",
                                        "description": "True when DHCP snooping is supported."
                                    },
                                    "mc_lag_supported": {
                                        "type": "boolean",
                                        "title": "MC-LAG Supported",
                                        "description": "True when MC-LAG is supported."
                                    },
                                    "led_blink_supported": {
                                        "type": "boolean",
                                        "title": "LED Blinking Supported",
                                        "description": "True when port LED blink is supported for this FortiSwitch."
                                    },
                                    "is_l3": {
                                        "type": "boolean",
                                        "title": "L3 FortiLink",
                                        "description": "True when the FortiLink connection for this FortiSwitch is established over L3."
                                    },
                                    "faceplate_xml": {
                                        "type": "string",
                                        "title": "Faceplate XML",
                                        "description": "An XML string containing information on how the FortiSwitch ports are configured."
                                    },
                                    "vdom": {
                                        "type": "string",
                                        "title": "VDOM",
                                        "description": "The VDOM that the FortiSwitch is a part of."
                                    },
                                    "image_download_progress": {
                                        "type": "integer",
                                        "title": "Image Download Progress",
                                        "description": "Image download progress in percentage."
                                    },
                                    "type": {
                                        "type": "string",
                                        "title": "Managed Switch Type",
                                        "description": "Type of the managed switch. A physical switch can be exported to another VDOM as a virtual switch.",
                                        "enum": [
                                            "physical",
                                            "virtual"
                                        ]
                                    },
                                    "owner_vdom": {
                                        "type": "string",
                                        "title": "Owner VDOM",
                                        "description": "The VDOM that owns the physical FortiSwitch."
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/switch-controller\/managed-switch.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Filter: FortiSwitch ID.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "switch-controller"
                ]
            }
        },
        "\/switch-controller\/managed-switch\/port-stats": {
            "get": {
                "summary": "Retrieve port statistics for configured FortiSwitches.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Port Statistics",
                            "type": "array",
                            "description": "Array of managed switch port statistics.",
                            "items": {
                                "title": "Switch Entry",
                                "description": "A switch with port statistics.",
                                "type": "object",
                                "properties": {
                                    "serial": {
                                        "type": "string",
                                        "title": "FortiSwitch Serial",
                                        "description": "FortiSwitch serial number."
                                    },
                                    "ports": {
                                        "type": "object",
                                        "title": "Statistics Port Map",
                                        "description": "A map of FortiSwitch ports to their statistics.",
                                        "additionalProperties": {
                                            "type": "object",
                                            "title": "Port Bandwidth Statistics",
                                            "description": "Port Bandwidth Statistics.",
                                            "properties": {
                                                "tx-bytes": {
                                                    "type": "integer",
                                                    "title": "Bytes Transmitted",
                                                    "description": "The number of bytes transmitted."
                                                },
                                                "tx-packets": {
                                                    "type": "integer",
                                                    "title": "Packets Transmitted",
                                                    "description": "The number of packets transmitted."
                                                },
                                                "tx-ucast": {
                                                    "type": "integer",
                                                    "title": "Unicast Packets Transmitted",
                                                    "description": "The number of unicast packets transmitted."
                                                },
                                                "tx-mcast": {
                                                    "type": "integer",
                                                    "title": "Multicast Packets Transmitted",
                                                    "description": "The number of multicast packets transmitted."
                                                },
                                                "tx-bcast": {
                                                    "type": "integer",
                                                    "title": "Transmissions Broadcast",
                                                    "description": "The number of broadcasts transmitted."
                                                },
                                                "tx-errors": {
                                                    "type": "integer",
                                                    "title": "Transmission Errors",
                                                    "description": "The number of transmission errors."
                                                },
                                                "tx-drops": {
                                                    "type": "integer",
                                                    "title": "Dropped Transmission Packets",
                                                    "description": "The number of packets dropped during transmission."
                                                },
                                                "tx-oversize": {
                                                    "type": "integer",
                                                    "title": "Oversized Transmission Packets",
                                                    "description": "The number of oversized packets transmitted."
                                                },
                                                "rx-bytes": {
                                                    "type": "integer",
                                                    "title": "Received Bytes",
                                                    "description": "The number of received bytes."
                                                },
                                                "rx-packets": {
                                                    "type": "integer",
                                                    "title": "Received Packets",
                                                    "description": "The number of received packets."
                                                },
                                                "rx-ucast": {
                                                    "type": "integer",
                                                    "title": "Received Unicast Packets",
                                                    "description": "The number of received unicast packets."
                                                },
                                                "rx-mcast": {
                                                    "type": "integer",
                                                    "title": "Received Multicast Packets",
                                                    "description": "The number of received multicast packets."
                                                },
                                                "rx-bcast": {
                                                    "type": "integer",
                                                    "title": "Received Broadcast Packets",
                                                    "description": "The number of received broadcast packets."
                                                },
                                                "rx-errors": {
                                                    "type": "integer",
                                                    "title": "Receive Errors",
                                                    "description": "The number of packets with errors that were received."
                                                },
                                                "rx-drops": {
                                                    "type": "integer",
                                                    "title": "Receive Drops",
                                                    "description": "The number of packets that were dropped after being received."
                                                },
                                                "rx-oversize": {
                                                    "type": "integer",
                                                    "title": "Received Oversize",
                                                    "description": "The number of oversized packets that were received."
                                                },
                                                "undersize": {
                                                    "type": "integer",
                                                    "title": "Undersized Packets",
                                                    "description": "The number of undersized packets."
                                                },
                                                "fragments": {
                                                    "type": "integer",
                                                    "title": "Fragments",
                                                    "description": "The number of fragmented packets."
                                                },
                                                "jabbers": {
                                                    "type": "integer",
                                                    "title": "Jabbers",
                                                    "description": "The number of jabber packets."
                                                },
                                                "collisions": {
                                                    "type": "integer",
                                                    "title": "Collisions",
                                                    "description": "The number of collisions."
                                                },
                                                "crc-alignments": {
                                                    "type": "integer",
                                                    "title": "CRC\/Alignments",
                                                    "description": "The number of CRC\/alignment errors."
                                                },
                                                "l3packets": {
                                                    "type": "integer",
                                                    "title": "Layer 3 Packets",
                                                    "description": "The number of Layer 3 packets."
                                                }
                                            },
                                            "additionalProperties": true
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/switch-controller\/managed-switch.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Filter: FortiSwitch ID.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "switch-controller"
                ]
            }
        },
        "\/switch-controller\/managed-switch\/update": {
            "post": {
                "summary": "Update administrative state for a given FortiSwitch (enable or disable authorization).\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkey": {
                                    "description": "FortiSwitch name.",
                                    "type": "string"
                                },
                                "admin": {
                                    "description": "New FortiSwitch administrative state [enable|disable|discovered].",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "switch-controller"
                ]
            }
        },
        "\/switch-controller\/managed-switch\/restart": {
            "post": {
                "summary": "Restart a given FortiSwitch.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkey": {
                                    "description": "Name of managed FortiSwitch.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "switch-controller"
                ]
            }
        },
        "\/switch-controller\/managed-switch\/poe-reset": {
            "post": {
                "summary": "Reset PoE on a given FortiSwitch's port.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkey": {
                                    "description": "Name of managed FortiSwitch.",
                                    "type": "string"
                                },
                                "port": {
                                    "description": "Name of port to reset PoE on.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "switch-controller"
                ]
            }
        },
        "\/switch-controller\/managed-switch\/faceplate-xml": {
            "get": {
                "summary": "Retrieve XML for rendering FortiSwitch faceplate widget.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Name of managed FortiSwitch.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "switch-controller"
                ]
            }
        },
        "\/switch-controller\/managed-switch\/factory-reset": {
            "post": {
                "summary": "Send 'Factory Reset' command to a given FortiSwitch.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkey": {
                                    "description": "Name of managed FortiSwitch.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "switch-controller"
                ]
            }
        },
        "\/switch-controller\/managed-switch\/dhcp-snooping": {
            "get": {
                "summary": "Retrieve DHCP servers monitored by FortiSwitches.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "DHCP Snooping",
                            "description": "Retrieve DHCP servers monitored by FortiSwitches.",
                            "type": "array",
                            "items": {
                                "title": "DHCP Server",
                                "description": "A DHCP server that is monitored by configured FortiSwitches.",
                                "type": "object",
                                "required": [
                                    "switch_id",
                                    "snooping_entries"
                                ],
                                "properties": {
                                    "switch_id": {
                                        "type": "string",
                                        "title": "FortiSwitch ID",
                                        "description": "FortiSwitch identifier (serial number)."
                                    },
                                    "snooping_entries": {
                                        "title": "DHCP Servers",
                                        "description": "FortiSwitch detected DHCP servers.",
                                        "type": "array"
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/switch-controller\/managed-switch.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "switch-controller"
                ]
            }
        },
        "\/switch-controller\/managed-switch\/transceivers": {
            "get": {
                "summary": "Get a list of transceivers being used by managed FortiSwitches.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiSwitch Transceiver Information",
                            "description": "List information about transceiver modules that are connected to managed FortiSwitches.",
                            "type": "array",
                            "items": {
                                "title": "FortiSwitch Transceiver Entry",
                                "description": "Details of a transceiver module that is connected to a FortiSwitch.",
                                "type": "object",
                                "required": [
                                    "fortiswitch_id",
                                    "port",
                                    "status"
                                ],
                                "properties": {
                                    "fortiswitch_id": {
                                        "type": "string",
                                        "title": "FortiSwitch Serial",
                                        "description": "Serial number of the FortiSwitch that the module is connected to."
                                    },
                                    "port": {
                                        "type": "string",
                                        "title": "FortiSwitch Port",
                                        "description": "FortiSwitch port that the transceiver module is connected to."
                                    },
                                    "status": {
                                        "type": "string",
                                        "title": "Status",
                                        "description": "Link status of the transceiver module."
                                    },
                                    "type": {
                                        "type": "string",
                                        "title": "Module Type",
                                        "description": "Type of transceiver module."
                                    },
                                    "vendor": {
                                        "type": "string",
                                        "title": "Vendor Name",
                                        "description": "Name of the vendor for the transceiver module."
                                    },
                                    "vendor_part_number": {
                                        "type": "string",
                                        "title": "Module Vendor Part Number",
                                        "description": "Vendor part number for the transceiver module."
                                    },
                                    "vendor_serial_number": {
                                        "type": "string",
                                        "title": "Module Vendor Serial Number",
                                        "description": "Vendor serial number for the transceiver module."
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/switch-controller\/managed-switch.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "switch-controller"
                ]
            }
        },
        "\/switch-controller\/managed-switch\/health": {
            "get": {
                "summary": "Retrieve health-check statistics for managed FortiSwitches.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Filter: FortiSwitch ID.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "switch-controller"
                ]
            }
        },
        "\/switch-controller\/managed-switch\/cable-status": {
            "get": {
                "summary": "Diagnose cable information for a port. Virtual FortiSwitches and FortiLink ports are not supported.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Cable Test Statistics",
                            "description": "Retrieve cable test statistics for managed FortiSwitches.",
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "title": "Connection Type",
                                    "description": "Type of connection."
                                },
                                "port": {
                                    "type": "string",
                                    "title": "Port Name",
                                    "description": "Name of the FortiSwitch port."
                                },
                                "error_range": {
                                    "type": "integer",
                                    "title": "Margin of Error",
                                    "description": "Estimated margin of error in the given unit of measurement."
                                },
                                "unit": {
                                    "type": "string",
                                    "title": "Unit of Measurement",
                                    "description": "Standard of measurement for numerical values."
                                },
                                "pairs": {
                                    "type": "array",
                                    "title": "Pair List",
                                    "description": "List of twisted pairs.",
                                    "items": {
                                        "title": "Twisted Pair Details",
                                        "description": "Details of the twisted pair.",
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "title": "Pair Name",
                                                "description": "Name assigned to the pair."
                                            },
                                            "state": {
                                                "type": "string",
                                                "title": "State",
                                                "description": "State of the pair."
                                            },
                                            "length": {
                                                "type": "integer",
                                                "title": "Length",
                                                "description": "Length of the pair."
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/switch-controller\/managed-switch.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Name of managed FortiSwitch.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "port",
                        "in": "query",
                        "description": "Name of managed FortiSwitch port.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "switch-controller"
                ]
            }
        },
        "\/switch-controller\/managed-switch\/models": {
            "get": {
                "summary": "Retrieve a list of FortiSwitch models that may be pre-configured.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Pre-Provisioning Supported FortiSwitch Models",
                            "description": "Retrieve a list of FortiSwitch models that may be pre-configured.",
                            "type": "array",
                            "items": {
                                "title": "FortiSwitch Model",
                                "description": "Details of a FortiSwitch model.",
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "title": "FortiSwitch Model Name",
                                        "description": "A 6-character code assigned to a FortiSwitch.",
                                        "type": "string"
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/switch-controller\/managed-switch.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "switch-controller"
                ]
            }
        },
        "\/switch-controller\/fsw-firmware": {
            "get": {
                "summary": "Retrieve a list of recommended firmware for managed FortiSwitches.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#",
                            "title": "FortiSwitch Firmware",
                            "definitions": {
                                "image_id": {
                                    "type": "string",
                                    "description": "FortiSwitch image ID.",
                                    "title": "Image ID"
                                },
                                "major": {
                                    "type": "number",
                                    "title": "Major Version",
                                    "description": "Major number of firmware version."
                                },
                                "minor": {
                                    "type": "number",
                                    "title": "Minor Version",
                                    "description": "Minor number of firmware version."
                                },
                                "patch": {
                                    "type": "number",
                                    "title": "Patch Version",
                                    "description": "Patch number of firmware version."
                                },
                                "build": {
                                    "type": "number",
                                    "title": "Firmware Build Number",
                                    "description": "Build number of firmware version."
                                },
                                "model": {
                                    "type": "string",
                                    "description": "FortiSwitch model name.",
                                    "title": "Model"
                                },
                                "error": {
                                    "type": "number",
                                    "description": "Error code.",
                                    "title": "Error"
                                }
                            },
                            "description": "Retrieve a list of current and recommended firmware for FortiSwitches in use.",
                            "type": "object",
                            "additionalProperties": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "description": "List of FortiSwitches and corresponding firmware.",
                                        "title": "FortiSwitches Models",
                                        "properties": {
                                            "model": {
                                                "$ref": "#\/definitions\/model"
                                            },
                                            "major": {
                                                "$ref": "#\/definitions\/major"
                                            },
                                            "minor": {
                                                "$ref": "#\/definitions\/minor"
                                            },
                                            "patch": {
                                                "$ref": "#\/definitions\/patch"
                                            },
                                            "build": {
                                                "$ref": "#\/definitions\/build"
                                            },
                                            "image_id": {
                                                "$ref": "#\/definitions\/image_id"
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "description": "List of FortiSwitches and corresponding firmware errors.",
                                        "title": "FortiSwitches Errors",
                                        "properties": {
                                            "model": {
                                                "$ref": "#\/definitions\/model"
                                            },
                                            "error": {
                                                "$ref": "#\/definitions\/error"
                                            }
                                        }
                                    }
                                ]
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/switch-controller\/fsw-firmware.json"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Filter: FortiSwitch ID.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "description": "FortiGuard connection timeout (defaults to 3 seconds).",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Target firmware version of the parent FortiGate.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "switch-controller"
                ]
            }
        },
        "\/switch-controller\/fsw-firmware\/download": {
            "post": {
                "summary": "Download FortiSwitch firmware from FortiGuard to the FortiGate according to FortiSwitch image ID.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "image_id": {
                                    "description": "FortiSwitch image ID.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "switch-controller"
                ]
            }
        },
        "\/switch-controller\/fsw-firmware\/push": {
            "post": {
                "summary": "Push FortiSwitch firmware to the given device.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "serial": {
                                    "description": "The target device's serial.",
                                    "type": "string"
                                },
                                "image_id": {
                                    "description": "FortiSwitch image ID.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "switch-controller"
                ]
            }
        },
        "\/switch-controller\/fsw-firmware\/upload": {
            "post": {
                "summary": "Upload FortiSwitch firmware to the management FortiGate and then push to target FortiSwitches.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "serials": {
                                    "description": "The target device's serial.",
                                    "type": "string"
                                },
                                "file_content": {
                                    "description": "Provided when uploading a file: base64 encoded file data. Must not contain whitespace or other invalid base64 characters. Must be included in HTTP body.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "switch-controller"
                ]
            }
        },
        "\/switch-controller\/detected-device": {
            "get": {
                "summary": "Retrieve a list of devices detected on all switches.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "switch-controller"
                ]
            }
        },
        "\/switch-controller\/validate-switch-prefix": {
            "get": {
                "summary": "Validate a FortiSwitch serial number prefix. Deprecated in 7.2 replaced by \/api\/v2\/monitor\/switch-controller\/managed-switch\/models.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Validate FortiSwitch Prefix",
                            "description": "Validate a FortiSwitch serial number prefix.",
                            "type": "object",
                            "deprecated": true,
                            "x-scheduledRemoval": {
                                "major": 7,
                                "minor": 2
                            },
                            "properties": {
                                "valid": {
                                    "type": "boolean",
                                    "title": "Valid",
                                    "description": "True when the FortiSwitch prefix is valid."
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/switch-controller\/validate-switch-prefix.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "prefix",
                        "in": "query",
                        "description": "Prefix of FortiSwitch serial number.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "switch-controller"
                ]
            }
        },
        "\/switch-controller\/mclag-icl\/eligible-peer": {
            "get": {
                "summary": "Find a pair of FortiSwitches that are eligible to form a tier-1 MCLAG.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Tier-1 MC-LAG Candidate",
                            "description": "Retrieve candidates to form tier-1 MC-LAG.",
                            "type": "object",
                            "properties": {
                                "candidate1": {
                                    "type": "string",
                                    "title": "Candidate 1",
                                    "description": "FortiSwitch serial of candidate 1."
                                },
                                "candidate2": {
                                    "type": "string",
                                    "title": "Candidate 2",
                                    "description": "FortiSwitch serial of candidate 2."
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/switch-controller\/mclag-icl.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "fortilink",
                        "in": "query",
                        "description": "FortiLink interface name.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "switch-controller"
                ]
            }
        },
        "\/switch-controller\/matched-devices": {
            "get": {
                "summary": "Return a list of devices that match NAC and\/or dynamic port policies.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Matched Devices",
                            "description": "List devices that match NAC and dynamic port policy.",
                            "type": "array",
                            "items": {
                                "title": "Device Entry",
                                "description": "Details of the device.",
                                "type": "object",
                                "required": [
                                    "mac"
                                ],
                                "properties": {
                                    "mac": {
                                        "type": "string",
                                        "title": "MAC",
                                        "description": "The MAC address of the device."
                                    },
                                    "last_known_switch": {
                                        "type": "string",
                                        "title": "Last Known Switch",
                                        "description": "The last known switch the device was connected to."
                                    },
                                    "last_known_port": {
                                        "type": "string",
                                        "title": "Last Known Port",
                                        "description": "The last known port the device was connected to."
                                    },
                                    "matched_nac_policy": {
                                        "type": "string",
                                        "title": "Matched NAC Policy",
                                        "description": "The NAC policy that matches the device."
                                    },
                                    "matched_dynamic_port_policy": {
                                        "type": "string",
                                        "title": "Matched Dynamic Port Policy",
                                        "description": "Matched dynamic port policy that matches the devices."
                                    },
                                    "mac_policy": {
                                        "type": "string",
                                        "title": "MAC Policy",
                                        "description": "MAC policy that matches the device."
                                    },
                                    "matched_policy": {
                                        "type": "string",
                                        "title": "Matched Policy",
                                        "description": "Policy that matches the device for dynamic port policy."
                                    },
                                    "is_dynamic": {
                                        "type": "boolean",
                                        "title": "Dynamic Port Policy",
                                        "description": "True if this is a device that matches a dynamic port policy."
                                    },
                                    "is_nac": {
                                        "type": "boolean",
                                        "title": "NAC Policy",
                                        "description": "True if this is a device that matches a NAC policy."
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/switch-controller\/matched-devices.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "FortiSwitch ID. Will return all devices if no ID is provided.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_dynamic",
                        "in": "query",
                        "description": "If true, include devices that match dynamic port policies. Default value is false.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "tags": [
                    "switch-controller"
                ]
            }
        },
        "\/system\/admin\/change-vdom-mode": {
            "post": {
                "summary": "Switch between VDOM modes.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "vdom-mode": {
                                    "description": "VDOM mode [no-vdom|split-vdom|multi-vdom]",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/config-script": {
            "get": {
                "summary": "Retrieve the information about config scripts.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Configuration Scripts",
                            "description": "Retrieve information related to configuration scripts.",
                            "type": "object",
                            "required": [
                                "conf_scripts",
                                "backup_service_available"
                            ],
                            "properties": {
                                "conf_scripts": {
                                    "title": "Configure Scripts",
                                    "description": "List of remote configuration scripts and a history of their execution.",
                                    "type": "object",
                                    "required": [
                                        "remote",
                                        "history"
                                    ],
                                    "properties": {
                                        "remote": {
                                            "title": "Remote Configuration Scripts",
                                            "description": "List of configuration scripts uploaded on the central management unit.",
                                            "type": "array",
                                            "items": {
                                                "title": "Remote Configuration Script",
                                                "description": "Details of the remote configuration script.",
                                                "type": "object",
                                                "properties": {
                                                    "revision": {
                                                        "type": "string",
                                                        "title": "Revision",
                                                        "description": "Revision of the configuration script."
                                                    },
                                                    "timestamp": {
                                                        "type": "integer",
                                                        "title": "Last Modified Time",
                                                        "description": "The time the configuration script was last modified."
                                                    },
                                                    "comment": {
                                                        "type": "string",
                                                        "title": "Comment",
                                                        "description": "Any comments for the configuration script."
                                                    }
                                                }
                                            }
                                        },
                                        "history": {
                                            "title": "Execution History",
                                            "description": "Execution history of configuration scripts.",
                                            "type": "array",
                                            "items": {
                                                "title": "Execution History Entry",
                                                "description": "Details on the execution history of the configuration script.",
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "title": "ID",
                                                        "description": "ID of the configuration script."
                                                    },
                                                    "timestamp": {
                                                        "type": "integer",
                                                        "title": "Time",
                                                        "description": "Time when the configuration script was executed."
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "title": "Name",
                                                        "description": "Name of the executed configuration script."
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Type",
                                                        "description": "Type of the configuration script.",
                                                        "enum": [
                                                            "Remote",
                                                            "Local",
                                                            "Unknown"
                                                        ]
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "title": "Status",
                                                        "description": "Result of the execution of the configuration script.",
                                                        "enum": [
                                                            "Success",
                                                            "Failure",
                                                            "Unknown"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "backup_service_available": {
                                    "title": "Backup Service Availability",
                                    "description": "True when a backup service is available from the central management unit.",
                                    "type": "boolean"
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/config-script.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/config-script\/delete": {
            "post": {
                "summary": "Delete the history of config scripts.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Config Script History Deletion Status",
                            "description": "List of IDs for history records that failed to delete.",
                            "type": "array",
                            "items": {
                                "title": "Record ID",
                                "description": "The ID of a history record that failed to delete.",
                                "type": "integer"
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/config-script.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id_list": {
                                    "description": "List of config script history ids to delete.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/config-script\/run": {
            "post": {
                "summary": "Run remote config scripts.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "remote_script": {
                                    "description": "Name of remote config script to run.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/config-script\/upload": {
            "post": {
                "summary": "Upload and run a new configuration script file.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "filename": {
                                    "description": "Name of configuration script file.",
                                    "type": "string"
                                },
                                "file_content": {
                                    "description": "Provided when uploading a file: base64 encoded file data. Must not contain whitespace or other invalid base64 characters. Must be included in HTTP body.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/config-sync\/status": {
            "get": {
                "summary": "Get configuration sync status of SLBC cluster master and slave.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "SLBC Configuration Sync Status",
                            "description": "Configuration sync status information for SLBC devices.",
                            "type": "object",
                            "properties": {
                                "chassis_id": {
                                    "type": "integer",
                                    "title": "Chassis ID",
                                    "description": "Chassis ID that the current device belongs to."
                                },
                                "slot_id": {
                                    "type": "integer",
                                    "title": "Slot ID",
                                    "description": "Slot ID of the current device."
                                },
                                "heartbeat_devices": {
                                    "type": "array",
                                    "title": "Heartbeat Devices",
                                    "description": "Devices that should send heartbeats.",
                                    "items": {
                                        "type": "object",
                                        "title": "Heartbeat Device",
                                        "description": "Device that should send heartbeats.",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "title": "Name",
                                                "description": "Name of the heartbeat device."
                                            },
                                            "active": {
                                                "type": "boolean",
                                                "title": "Active",
                                                "description": "True when the device is active."
                                            },
                                            "heartbeat_count": {
                                                "type": "integer",
                                                "title": "Heartbeat Count",
                                                "description": "Number of heartbeats sent by the device."
                                            }
                                        }
                                    }
                                },
                                "management_devices": {
                                    "type": "array",
                                    "title": "Management Devices",
                                    "description": "List of management devices in the chassis.",
                                    "items": {
                                        "type": "object",
                                        "title": "Management Device",
                                        "description": "Management device information.",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "title": "Name",
                                                "description": "Name of the management device."
                                            },
                                            "is_management_ip_set": {
                                                "type": "boolean",
                                                "title": "Management IP Set",
                                                "description": "True when the management IP address has been set."
                                            }
                                        }
                                    }
                                },
                                "members": {
                                    "type": "array",
                                    "title": "Members",
                                    "description": "List of member devices in the chassis.",
                                    "items": {
                                        "type": "object",
                                        "title": "Member",
                                        "description": "Member device information.",
                                        "properties": {
                                            "serial": {
                                                "type": "string",
                                                "title": "Serial",
                                                "description": "Serial number of the device."
                                            },
                                            "member_index": {
                                                "type": "integer",
                                                "title": "Index",
                                                "description": "Member index of the device."
                                            },
                                            "is_slave": {
                                                "type": "boolean",
                                                "title": "Secondary",
                                                "description": "True when the member is a secondary device."
                                            },
                                            "is_master": {
                                                "type": "boolean",
                                                "title": "Primary",
                                                "description": "True when the member is a primary device."
                                            },
                                            "uptime": {
                                                "type": "number",
                                                "title": "Uptime",
                                                "description": "Length of time the device has been up, in seconds."
                                            },
                                            "priority": {
                                                "type": "integer",
                                                "title": "Priority",
                                                "description": "Priority of the device."
                                            },
                                            "chassis_id": {
                                                "type": "integer",
                                                "title": "Chassis ID",
                                                "description": "Chassis ID that the member device belongs to."
                                            },
                                            "slot_id": {
                                                "type": "integer",
                                                "title": "Slot ID",
                                                "description": "Slot ID that the member device is in."
                                            },
                                            "in_sync": {
                                                "type": "boolean",
                                                "title": "In Sync",
                                                "description": "True when the member device is in sync."
                                            },
                                            "is_current_device": {
                                                "type": "boolean",
                                                "title": "Current Device",
                                                "description": "True when this device is the current one in use."
                                            },
                                            "heartbeats": {
                                                "type": "array",
                                                "title": "Heartbeats",
                                                "description": "Member device heartbeats.",
                                                "items": {
                                                    "type": "object",
                                                    "title": "Heartbeat",
                                                    "description": "Heartbeat information of a member device.",
                                                    "properties": {
                                                        "management_device": {
                                                            "type": "string",
                                                            "title": "Management Device",
                                                            "description": "Management device that the heartbeat is for."
                                                        },
                                                        "state_id": {
                                                            "type": "integer",
                                                            "title": "State ID",
                                                            "description": "ID representing the state of the member device."
                                                        },
                                                        "state": {
                                                            "type": "string",
                                                            "title": "State",
                                                            "description": "State that the member device is in."
                                                        },
                                                        "ip": {
                                                            "type": "string",
                                                            "title": "IP",
                                                            "description": "IP address of the management device used for the heartbeat."
                                                        },
                                                        "last_heartbeat_time": {
                                                            "type": "number",
                                                            "title": "Last Heartbeat Time",
                                                            "description": "At the time when the most recent heartbeat was received, management device uptime, in seconds."
                                                        },
                                                        "total_heartbeat_packets": {
                                                            "type": "integer",
                                                            "title": "Total Heartbeat Packets",
                                                            "description": "Total number of heartbeat packets sent to the management device."
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/config-sync.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/api-user\/generate-key": {
            "post": {
                "summary": "Generate a new api-key for the specified api-key-auth admin. The old api-key will be replaced. The response contains the only chance to read the new api-key plaintext in the api_key field.\nAccess Group: sysgrp.admin",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "api-user": {
                                    "description": "Generate a new token for this api-user.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/config-revision": {
            "get": {
                "summary": "Returns a list of system configuration revisions.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/config-revision\/update-comments": {
            "post": {
                "summary": "Updates comments for a system configuration file.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "config_id": {
                                    "description": "Configuration id.",
                                    "type": "integer"
                                },
                                "comments": {
                                    "description": "Configuration comments.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/config-revision\/delete": {
            "post": {
                "summary": "Deletes one or more system configuration revisions.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "config_ids": {
                                    "description": "List of configuration ids.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/config-revision\/file": {
            "get": {
                "summary": "Download a specific configuration revision.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "config_id",
                        "in": "query",
                        "description": "Configuration id.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/config-revision\/info": {
            "get": {
                "summary": "Retrieve meta information for a specific configuration revision.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "config_id",
                        "in": "query",
                        "description": "Configuration id.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/config-revision\/save": {
            "post": {
                "summary": "Create a new config revision checkpoint.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "comments": {
                                    "description": "Optional revision comments",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/current-admins": {
            "get": {
                "summary": "Return a list of currently logged in administrators.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/interface-connected-admins-info": {
            "get": {
                "summary": "Return admins info that are connected to current interface.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Connected Admins Information",
                            "description": "Information for admins connected through the provided interface.",
                            "type": "object",
                            "properties": {
                                "current_admin_connected": {
                                    "type": "boolean",
                                    "title": "Current Admin Connected",
                                    "description": "True when the current admin is connected through the provided interface."
                                },
                                "num_admins_connected": {
                                    "type": "integer",
                                    "title": "Number of Administrators",
                                    "description": "Number of administrators that are connected through the provided interface."
                                },
                                "admin_methods": {
                                    "type": "object",
                                    "title": "Admin Methods",
                                    "description": "Connection methods which are used for admins to connect through the provided interface.",
                                    "additionalProperties": {
                                        "type": "integer",
                                        "title": "Connection Method",
                                        "description": "Number of sessions using this connection method."
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/interface-connected-admins-info.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "interface",
                        "in": "query",
                        "description": "Interface that admins is connected through.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/disconnect-admins\/select": {
            "post": {
                "summary": "Disconnects logged in administrators.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "description": "Admin ID",
                                    "type": "integer"
                                },
                                "method": {
                                    "description": "Login method used to connect admin to FortiGate.",
                                    "type": "string"
                                },
                                "admins": {
                                    "description": "List of objects with admin id and method.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/time\/set": {
            "post": {
                "summary": "Sets current system time stamp.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "year": {
                                    "description": "Specifies the year for setting\/updating time manually.",
                                    "type": "integer"
                                },
                                "month": {
                                    "description": "Specifies the month (0 - 11) for setting\/updating time manually.",
                                    "type": "integer"
                                },
                                "day": {
                                    "description": "Specifies the day for setting\/updating time manually.",
                                    "type": "integer"
                                },
                                "hour": {
                                    "description": "Specifies the hour (0 - 23) for setting\/updating time manually.",
                                    "type": "integer"
                                },
                                "minute": {
                                    "description": "Specifies the minute (0 - 59) for setting\/updating time manually.",
                                    "type": "integer"
                                },
                                "second": {
                                    "description": "Specifies the second (0 - 59) for setting\/updating time manually.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/time": {
            "get": {
                "summary": "Gets current system time stamp.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/vdom-link": {
            "get": {
                "summary": "Gets a list of all NPU VDOM Links and VDOM Links.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "VDOM and NPU VDOM Links",
                            "description": "List all VDOM and NPU VDOM link interfaces.",
                            "type": "array",
                            "items": {
                                "title": "VDOM or NPU VDOM Link",
                                "description": "VDOM or NPU VDOM link details.",
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "Name of the VDOM link."
                                    },
                                    "type": {
                                        "type": "string",
                                        "title": "Type",
                                        "description": "Type of the VDOM link.",
                                        "enum": [
                                            "npu-vlink",
                                            "vdom-link"
                                        ]
                                    },
                                    "pairs": {
                                        "type": "array",
                                        "title": "VDOM Link Pairs",
                                        "description": "The pair of interfaces that make up the VDOM link.",
                                        "items": {
                                            "type": "object",
                                            "title": "Interface",
                                            "description": "One of the interfaces that make up the VDOM link pair.",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "title": "Name",
                                                    "description": "Name of the interface."
                                                },
                                                "vdom": {
                                                    "type": "string",
                                                    "title": "VDOM",
                                                    "description": "The VDOM that the interface belongs to."
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/vdom-link.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Scope from which to retrieve the VDOM link informaton from [vdom|global].",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/os\/reboot": {
            "post": {
                "summary": "Immediately reboot this device.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "event_log_message": {
                                    "description": "Message to be logged in event log.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/os\/shutdown": {
            "post": {
                "summary": "Immediately shutdown this device.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "event_log_message": {
                                    "description": "Message to be logged in event log.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/global-resources": {
            "get": {
                "summary": "Retrieve current usage of global resources as well as both the default and user configured maximum values.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/vdom-resource": {
            "get": {
                "summary": "Retrieve VDOM resource information, including CPU and memory usage.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/dhcp": {
            "get": {
                "summary": "List all DHCP and DHCPv6 leases.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "DHCP and DHCPv6 Leases",
                            "description": "List all DHCP and DHCPv6 leases.",
                            "type": "array",
                            "items": {
                                "title": "DHCP or DHCPv6 Lease",
                                "description": "A DHCP or DHCPv6 lease.",
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "title": "Lease Type",
                                        "description": "The type of lease.",
                                        "enum": [
                                            "ipv4",
                                            "ipv6"
                                        ]
                                    },
                                    "status": {
                                        "type": "string",
                                        "title": "Lease Status",
                                        "description": "The status of the lease.",
                                        "enum": [
                                            "leased",
                                            "conflicted"
                                        ]
                                    },
                                    "ip": {
                                        "type": "string",
                                        "title": "IP Address",
                                        "description": "The IP address reserved by this lease."
                                    },
                                    "expire_time": {
                                        "type": "integer",
                                        "title": "Lease Expiration Time",
                                        "description": "The time when the lease ends, after which device must renew the lease and potentially receive a new IP address."
                                    },
                                    "interface": {
                                        "type": "string",
                                        "title": "Interface Name",
                                        "description": "The name of the interface on which DHCP server is enabled."
                                    },
                                    "server_mkey": {
                                        "type": "integer",
                                        "title": "DHCP Server ID",
                                        "description": "ID of the DHCP server."
                                    },
                                    "server_ipam_enabled": {
                                        "type": "boolean",
                                        "title": "DHCP Server IPAM Enabled",
                                        "description": "True when the DHCP server is automatically configured by IPAM."
                                    },
                                    "reserved": {
                                        "type": "boolean",
                                        "title": "Reserved IP Address",
                                        "description": "True when the IP address is reserved."
                                    },
                                    "mac": {
                                        "type": "string",
                                        "title": "MAC Address",
                                        "description": "MAC address of the device participating in the DHCP lease."
                                    },
                                    "vci": {
                                        "type": "string",
                                        "title": "Vendor Class Identifier",
                                        "description": "Vendor Class Identifier of the device."
                                    },
                                    "hostname": {
                                        "type": "string",
                                        "title": "Host Name",
                                        "description": "Device host name."
                                    },
                                    "duid": {
                                        "type": "string",
                                        "title": "DHCP Unique Identifier",
                                        "description": "The DHCP Unique Identifier is required in DHCPv6 to identify the client system."
                                    },
                                    "iaid": {
                                        "type": "integer",
                                        "title": "Identity Association Identifier",
                                        "description": "The Identity Association Identifier is required in DHCPv6 to identify the client interface."
                                    },
                                    "ssid": {
                                        "type": "string",
                                        "title": "SSID",
                                        "description": "The SSID that the device is connected to."
                                    },
                                    "access_point": {
                                        "type": "string",
                                        "title": "Access Point",
                                        "description": "The serial number of the access point that the device is connected to."
                                    }
                                },
                                "required": [
                                    "type",
                                    "status",
                                    "ip",
                                    "expire_time",
                                    "interface"
                                ]
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/dhcp.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Scope from which to retrieve DHCP leases [vdom*|global]. Global scope is only accessible for global administrators.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ipv6",
                        "in": "query",
                        "description": "Include IPv6 addresses in the response.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "interface",
                        "in": "query",
                        "description": "Filter: Retrieve DHCP leases for this interface only.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/dhcp\/revoke": {
            "post": {
                "summary": "Revoke IPv4 DHCP leases.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ip": {
                                    "description": "Optional list of addresses to revoke. Defaults to all addresses if not provided.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/dhcp6\/revoke": {
            "post": {
                "summary": "Revoke IPv6 DHCP leases.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ip": {
                                    "description": "Optional list of addresses to revoke. Defaults to all addresses if not provided.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/ntp\/status": {
            "get": {
                "summary": "List NTP servers status.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "System NTP Status",
                            "description": "List of NTP server statuses.",
                            "type": "array",
                            "items": {
                                "title": "NTP Server Status",
                                "description": "Details of this NTP server.",
                                "type": "object",
                                "required": [
                                    "ip",
                                    "server",
                                    "reachable",
                                    "expires"
                                ],
                                "properties": {
                                    "ip": {
                                        "type": "string",
                                        "title": "IP Address",
                                        "description": "IP address of the NTP server."
                                    },
                                    "server": {
                                        "type": "string",
                                        "title": "Domain Name",
                                        "description": "Domain name of the NTP server."
                                    },
                                    "reachable": {
                                        "type": "boolean",
                                        "title": "Server Reachable",
                                        "description": "True when the NTP server is reachable."
                                    },
                                    "expires": {
                                        "type": "integer",
                                        "title": "NTP Expires",
                                        "description": "Time left before the current NTP server status expires, in seconds."
                                    },
                                    "selected": {
                                        "type": "boolean",
                                        "title": "Server Selected",
                                        "description": "True when the NTP server is selected."
                                    },
                                    "version": {
                                        "type": "integer",
                                        "title": "NTP Version",
                                        "description": "NTP server software version."
                                    },
                                    "stratum": {
                                        "type": "integer",
                                        "title": "NTP Stratum",
                                        "description": "NTP stratum level, 0-15."
                                    },
                                    "reftime": {
                                        "type": "integer",
                                        "title": "Reference Timestamp",
                                        "description": "Local time, in epoch seconds since 1970."
                                    },
                                    "offset": {
                                        "type": "number",
                                        "title": "Clock Offset",
                                        "description": "Combined offset of the NTP server relative to this host, in milliseconds."
                                    },
                                    "delay": {
                                        "type": "number",
                                        "title": "Round Trip Delay",
                                        "description": "Total round trip delay to the primary reference clock, in milliseconds."
                                    },
                                    "dispersion": {
                                        "type": "number",
                                        "title": "Root Dispersion",
                                        "description": "Total dispersion to the primary reference clock, in milliseconds."
                                    },
                                    "peer_dispersion": {
                                        "type": "integer",
                                        "title": "Peer Dispersion",
                                        "description": "System peer dispersion, in milliseconds."
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/ntp.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/firmware": {
            "get": {
                "summary": "Retrieve a list of firmware images available to use for upgrade on this device.\nAccess Group: sysgrp.mnt",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#",
                            "type": "object",
                            "title": "Firmware Details",
                            "definitions": {
                                "name": {
                                    "type": "string",
                                    "title": "Firmware Name",
                                    "description": "Name of product associated to this firmware."
                                },
                                "id": {
                                    "type": "string",
                                    "title": "Firmware ID",
                                    "description": "Firmware identifier."
                                },
                                "version": {
                                    "type": "string",
                                    "title": "Firmware Version",
                                    "description": "Firmware version."
                                },
                                "major": {
                                    "type": "number",
                                    "title": "Major Version",
                                    "description": "Major number of firmware version."
                                },
                                "minor": {
                                    "type": "number",
                                    "title": "Minor Version",
                                    "description": "Minor number of firmware version."
                                },
                                "patch": {
                                    "type": "number",
                                    "title": "Patch Version",
                                    "description": "Patch number of firmware version."
                                },
                                "build": {
                                    "type": "number",
                                    "title": "Firmware Build Number",
                                    "description": "Build number of firmware version."
                                },
                                "branch-point": {
                                    "type": "string",
                                    "title": "Build Branch Point",
                                    "description": "Point at which build is branched from."
                                },
                                "release-type": {
                                    "type": "string",
                                    "title": "Build Release Type",
                                    "description": "Build release type."
                                },
                                "notes": {
                                    "type": "string",
                                    "title": "Release Notes URL",
                                    "description": "URL to the version release notes of this firmware."
                                },
                                "source": {
                                    "type": "string",
                                    "title": "Firmware Source",
                                    "description": "Firmware source."
                                },
                                "platform-id": {
                                    "type": "string",
                                    "title": "Platform ID",
                                    "description": "Platform identifier."
                                }
                            },
                            "description": "Details on the current and available firmwares for this FortiGate.",
                            "required": [
                                "current",
                                "available"
                            ],
                            "additionalProperties": true,
                            "properties": {
                                "current": {
                                    "type": "object",
                                    "title": "Current Firmware",
                                    "description": "Current firmware of this FortiGate.",
                                    "required": [
                                        "platform-id"
                                    ],
                                    "properties": {
                                        "name": {
                                            "$ref": "#\/definitions\/name"
                                        },
                                        "id": {
                                            "$ref": "#\/definitions\/id"
                                        },
                                        "version": {
                                            "$ref": "#\/definitions\/version"
                                        },
                                        "major": {
                                            "$ref": "#\/definitions\/major"
                                        },
                                        "minor": {
                                            "$ref": "#\/definitions\/minor"
                                        },
                                        "patch": {
                                            "$ref": "#\/definitions\/patch"
                                        },
                                        "build": {
                                            "$ref": "#\/definitions\/build"
                                        },
                                        "branch-point": {
                                            "$ref": "#\/definitions\/branch-point"
                                        },
                                        "release-type": {
                                            "$ref": "#\/definitions\/release-type"
                                        },
                                        "source": {
                                            "$ref": "#\/definitions\/source"
                                        },
                                        "platform-id": {
                                            "$ref": "#\/definitions\/platform-id"
                                        }
                                    }
                                },
                                "available": {
                                    "type": "array",
                                    "title": "Available Firmwares",
                                    "description": "Available firmware versions to download.",
                                    "items": {
                                        "type": "object",
                                        "title": "Generic Firmware",
                                        "description": "Details of a generic firmware.",
                                        "properties": {
                                            "name": {
                                                "$ref": "#\/definitions\/name"
                                            },
                                            "id": {
                                                "$ref": "#\/definitions\/id"
                                            },
                                            "version": {
                                                "$ref": "#\/definitions\/version"
                                            },
                                            "major": {
                                                "$ref": "#\/definitions\/major"
                                            },
                                            "minor": {
                                                "$ref": "#\/definitions\/minor"
                                            },
                                            "patch": {
                                                "$ref": "#\/definitions\/patch"
                                            },
                                            "build": {
                                                "$ref": "#\/definitions\/build"
                                            },
                                            "branch-point": {
                                                "$ref": "#\/definitions\/branch-point"
                                            },
                                            "release-type": {
                                                "$ref": "#\/definitions\/release-type"
                                            },
                                            "notes": {
                                                "$ref": "#\/definitions\/notes"
                                            },
                                            "source": {
                                                "$ref": "#\/definitions\/source"
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/firmware.json"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/firmware\/upgrade": {
            "post": {
                "summary": "Upgrade firmware image on this device using uploaded file.\nAccess Group: sysgrp.mnt",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "source": {
                                    "description": "Firmware file data source [upload|usb|fortiguard].",
                                    "type": "string"
                                },
                                "filename": {
                                    "description": "Name of file on fortiguard or USB disk to upgrade to.",
                                    "type": "string"
                                },
                                "format_partition": {
                                    "description": "Set to true to format boot partition before upgrade.",
                                    "type": "boolean"
                                },
                                "ignore_invalid_signature": {
                                    "description": "Set to true to allow upgrade of firmware images with invalid signatures.",
                                    "type": "boolean"
                                },
                                "file_id": {
                                    "description": "File ID of the uploaded firmware image to allow upgrade of firmware images with invalid signatures.",
                                    "type": "string"
                                },
                                "file_content": {
                                    "description": "Provided when uploading a file: base64 encoded file data. Must not contain whitespace or other invalid base64 characters. Must be included in HTTP body.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/firmware\/upgrade-paths": {
            "get": {
                "summary": "Retrieve a list of supported firmware upgrade paths.\nAccess Group: sysgrp.mnt",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/fsck\/start": {
            "post": {
                "summary": "Set file system check flag so that it will be executed on next device reboot.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/storage": {
            "get": {
                "summary": "Retrieve information for the non-boot disk.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/change-password\/select": {
            "post": {
                "summary": "Save admin and guest-admin passwords.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Change Admin Password",
                            "description": "Change the password for the admin and guest-admin.",
                            "type": "object",
                            "required": [
                                "changed"
                            ],
                            "properties": {
                                "changed": {
                                    "title": "Password Changed",
                                    "description": "True when the password has changed.",
                                    "type": "boolean"
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/change-password.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkey": {
                                    "description": "User ID for password change.",
                                    "type": "string"
                                },
                                "old_password": {
                                    "description": "Old password.",
                                    "type": "string"
                                },
                                "new_password": {
                                    "description": "New password.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/password-policy-conform\/select": {
            "post": {
                "summary": "Check whether password conforms to the password policy.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkey": {
                                    "description": "User ID for password change.",
                                    "type": "string"
                                },
                                "apply_to": {
                                    "description": "Password Policy ID.",
                                    "type": "string"
                                },
                                "password": {
                                    "description": "Password.",
                                    "type": "string"
                                },
                                "old_password": {
                                    "description": "Old password.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/csf": {
            "get": {
                "summary": "Retrieve a full tree of downstream FortiGates registered to the Security Fabric.\nAccess Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Security Fabric Details",
                            "description": "Information on the Security Fabric that this FortiGate is a member of.",
                            "type": "object",
                            "properties": {
                                "csf_group_name": {
                                    "type": "string",
                                    "title": "Security Fabric Name",
                                    "description": "Name of the Security Fabric group."
                                }
                            },
                            "additionalProperties": true,
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/csf.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Scope from which to retrieve the Security Fabric tree [vdom*|global].",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/csf\/pending-authorizations": {
            "get": {
                "summary": "Retrieve fabric devices with pending authorizations for joining the Security Fabric. Note:- This list is currently available on Security Fabric root only.\nAccess Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/csf\/register-appliance": {
            "post": {
                "summary": "Register appliance to Security Fabric.\nAccess Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "type": {
                                    "description": "Appliance type (Example: 'faz').",
                                    "type": "string"
                                },
                                "mgmt_ip": {
                                    "description": "Management IP or FQDN.",
                                    "type": "string"
                                },
                                "mgmt_port": {
                                    "description": "Management port.",
                                    "type": "integer"
                                },
                                "mgmt_url_parameters": {
                                    "description": "Array of URL parameters. Each item is a key\/value pair. If provided, the URL parameters will be included in the management IP URL.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "serial": {
                                    "description": "Serial number.",
                                    "type": "string"
                                },
                                "hostname": {
                                    "description": "Host name.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/modem": {
            "get": {
                "summary": "Retrieve statistics for internal\/external configured modem.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/modem\/reset": {
            "post": {
                "summary": "Reset statistics for internal\/external configured modem.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/modem\/connect": {
            "post": {
                "summary": "Trigger a connect for the configured modem.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/modem\/disconnect": {
            "post": {
                "summary": "Trigger a disconnect for the configured modem.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/modem\/update": {
            "post": {
                "summary": "Update supported modem list from FortiGuard.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/3g-modem": {
            "get": {
                "summary": "List all 3G modems available via FortiGuard.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/lte-modem\/status": {
            "get": {
                "summary": "Retrieve the LTE modem status.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#",
                            "type": "object",
                            "title": "LTE Modem Status",
                            "description": "Information on the configured LTE modem.",
                            "required": [
                                "status"
                            ],
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "title": "LTE Modem Status",
                                    "description": "Status of the LTE modem.",
                                    "enum": [
                                        "enabled",
                                        "disabled"
                                    ]
                                },
                                "manufacturer": {
                                    "type": "string",
                                    "title": "Manufacturer",
                                    "description": "Manufacturer name."
                                },
                                "model": {
                                    "type": "string",
                                    "title": "Model",
                                    "description": "Model name."
                                },
                                "revision": {
                                    "type": "string",
                                    "title": "Revision",
                                    "description": "Revision number."
                                },
                                "msisdn": {
                                    "type": "string",
                                    "title": "MSISDN",
                                    "description": "Mobile director number, also known as a phone number, of the SIM."
                                },
                                "esn": {
                                    "type": "string",
                                    "title": "ESN",
                                    "description": "Electronic serial number."
                                },
                                "imei": {
                                    "type": "string",
                                    "title": "IMEI",
                                    "description": "International mobile equipment identification."
                                },
                                "meid": {
                                    "type": "string",
                                    "title": "Mobile Equipment Identifier",
                                    "description": "Mobile equipment identifier."
                                },
                                "cell_id": {
                                    "type": "string",
                                    "title": "Cell ID",
                                    "description": "Cell ID of the modem."
                                },
                                "hw_revision": {
                                    "type": "string",
                                    "title": "Hardware Revision",
                                    "description": "Hardware revision of the modem."
                                },
                                "sw_revision": {
                                    "type": "string",
                                    "title": "Software Revision",
                                    "description": "Software revision of the modem."
                                },
                                "sku": {
                                    "type": "string",
                                    "title": "SKU",
                                    "description": "Stock keeping unit of the modem."
                                },
                                "fsn": {
                                    "type": "string",
                                    "title": "Serial Number",
                                    "description": "Modem serial number."
                                },
                                "operating_mode": {
                                    "type": "string",
                                    "title": "Operating Mode",
                                    "description": "Current operating mode.",
                                    "enum": [
                                        "QMI_DMS_OPERATING_MODE_ONLINE",
                                        "QMI_DMS_OPERATING_MODE_LOW_POWER",
                                        "QMI_DMS_OPERATING_MODE_FACTORY_TEST",
                                        "QMI_DMS_OPERATING_MODE_OFFLINE",
                                        "QMI_DMS_OPERATING_MODE_RESET",
                                        "QMI_DMS_OPERATING_MODE_SHUTTING_DOWN",
                                        "QMI_DMS_OPERATING_MODE_PERSISTENT_LOW_POWER",
                                        "QMI_DMS_OPERATING_MODE_MODE_ONLY_LOW_POWER",
                                        "QMI_DMS_OPERATING_MODE_UNKNOWN"
                                    ]
                                },
                                "billing_date": {
                                    "type": "integer",
                                    "title": "Billing Date",
                                    "description": "Day of the month that a billing period starts with.",
                                    "minimum": 1,
                                    "maximum": 31
                                },
                                "gps_status": {
                                    "type": "boolean",
                                    "title": "GPS Status",
                                    "description": "True if GPS feature is enabled."
                                },
                                "gps": {
                                    "type": "object",
                                    "title": "GPS Information",
                                    "description": "GPS coordinate information.",
                                    "properties": {
                                        "latitude": {
                                            "type": "number",
                                            "title": "Latitude",
                                            "description": "GPS latitude coordinate in decimal degrees format."
                                        },
                                        "longitude": {
                                            "type": "number",
                                            "title": "Longitude",
                                            "description": "GPS longitude coordinate in decimal degrees format."
                                        },
                                        "timestamp": {
                                            "type": "integer",
                                            "title": "Timestamp",
                                            "description": "Timestamp of when the GPS coordinates were retrieved in Unix epoch time."
                                        }
                                    }
                                },
                                "sim_auto_switch": {
                                    "type": "boolean",
                                    "title": "SIM Auto Switch",
                                    "description": "True if SIM auto detection & hot swap feature is enabled."
                                },
                                "sim_auto_switch_time": {
                                    "type": "string",
                                    "title": "SIM Auto Switch Time",
                                    "description": "Time it takes to activate hot swap feature if current card is not able to connect for a specified duration.",
                                    "enum": [
                                        "5-minutes",
                                        "10-minutes",
                                        "never"
                                    ]
                                },
                                "roaming": {
                                    "type": "boolean",
                                    "title": "Roaming",
                                    "description": "True if LTE modem is in roaming mode."
                                },
                                "signal": {
                                    "type": "object",
                                    "title": "Signal Information",
                                    "description": "Information on various cellular signals the model is currently using.",
                                    "properties": {
                                        "cdma": {
                                            "type": "object",
                                            "title": "CDMA Signal",
                                            "description": "CDMA signal information.",
                                            "properties": {
                                                "rssi": {
                                                    "type": "integer",
                                                    "title": "RSSI",
                                                    "description": "Received signal strength indicator."
                                                },
                                                "ecio": {
                                                    "type": "integer",
                                                    "title": "ECIO",
                                                    "description": "Energy per bit to noise power density ratio."
                                                }
                                            }
                                        },
                                        "hdr": {
                                            "type": "object",
                                            "title": "HDR Signal",
                                            "description": "HDR signal information.",
                                            "properties": {
                                                "rssi": {
                                                    "type": "integer",
                                                    "title": "RSSI",
                                                    "description": "Received signal strength indicator."
                                                },
                                                "ecio": {
                                                    "type": "integer",
                                                    "title": "ECIO",
                                                    "description": "Energy per bit to noise power density ratio."
                                                },
                                                "sinr_level": {
                                                    "type": "integer",
                                                    "title": "SINR Level",
                                                    "description": "Signal to interference and noise ratio in levels where level 0 is -9 decibels and level 8 is +9 decibels.",
                                                    "minimum": 0,
                                                    "maximum": 8
                                                },
                                                "io": {
                                                    "type": "integer",
                                                    "title": "IO",
                                                    "description": "IO value of HDR signal."
                                                }
                                            }
                                        },
                                        "gsm": {
                                            "type": "object",
                                            "title": "GSM Signal",
                                            "description": "GSM signal information.",
                                            "properties": {
                                                "rssi": {
                                                    "type": "integer",
                                                    "title": "RSSI",
                                                    "description": "Received signal strength indicator."
                                                }
                                            }
                                        },
                                        "wcdma": {
                                            "type": "object",
                                            "title": "WCDMA",
                                            "description": "WCDMA signal information.",
                                            "properties": {
                                                "rssi": {
                                                    "type": "integer",
                                                    "title": "RSSI",
                                                    "description": "Received signal strength indicator."
                                                },
                                                "ecio": {
                                                    "type": "integer",
                                                    "title": "ECIO",
                                                    "description": "Energy per bit to noise power density ratio."
                                                }
                                            }
                                        },
                                        "tdma": {
                                            "type": "object",
                                            "title": "TDMA Signal",
                                            "description": "TDMA Signal information.",
                                            "properties": {
                                                "rssi": {
                                                    "type": "integer",
                                                    "title": "RSSI",
                                                    "description": "Received signal strength indicator."
                                                }
                                            }
                                        },
                                        "lte": {
                                            "type": "object",
                                            "title": "LTE Signal",
                                            "description": "LTE signal information.",
                                            "properties": {
                                                "rssi": {
                                                    "type": "integer",
                                                    "title": "RSSI",
                                                    "description": "Received signal strength indicator."
                                                },
                                                "rsrq": {
                                                    "type": "integer",
                                                    "title": "RSRQ",
                                                    "description": "Reference signal received quality."
                                                },
                                                "rsrp": {
                                                    "type": "integer",
                                                    "title": "RSRP",
                                                    "description": "Reference signal received power."
                                                },
                                                "snr": {
                                                    "type": "integer",
                                                    "title": "SNR",
                                                    "description": "Signal to noise ratio."
                                                }
                                            }
                                        }
                                    }
                                },
                                "data_limit": {
                                    "type": "integer",
                                    "title": "Modem Data Limit",
                                    "description": "Unlimited if 0, otherwise the is number of megabytes allowed to transmit and receive."
                                },
                                "data_usage_tracking": {
                                    "type": "boolean",
                                    "title": "Data Usage Tracking",
                                    "description": "True if data usage tracking feature is enabled."
                                },
                                "usage": {
                                    "type": "object",
                                    "title": "Data Usage",
                                    "description": "Data usage for the current billing period month.",
                                    "properties": {
                                        "rx": {
                                            "type": "integer",
                                            "title": "Received Data",
                                            "description": "Amount of received data, in bytes.",
                                            "minimum": 0
                                        },
                                        "tx": {
                                            "type": "integer",
                                            "title": "Transmitted Data",
                                            "description": "Amount of transmitted data, in bytes.",
                                            "minimum": 0
                                        }
                                    }
                                },
                                "active_sim": {
                                    "type": "object",
                                    "title": "Active SIM Information",
                                    "description": "The active SIM information.",
                                    "required": [
                                        "status",
                                        "slot"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "title": "Status",
                                            "description": "Status of the SIM card.",
                                            "enum": [
                                                "SIM_STATE_PRESENT",
                                                "SIM_STATE_ABSENT",
                                                "SIM_STATE_ERROR",
                                                "SIM_STATE_UNKNOWN"
                                            ]
                                        },
                                        "slot": {
                                            "type": "integer",
                                            "title": "Slot",
                                            "description": "Slot the active SIM card is in.",
                                            "enum": [
                                                1,
                                                2
                                            ]
                                        },
                                        "iccid": {
                                            "type": "string",
                                            "title": "ICCID",
                                            "description": "Integrated circuit card identification number of the SIM."
                                        },
                                        "imsi": {
                                            "type": "string",
                                            "title": "IMSI",
                                            "description": "International mobile subscriber identity."
                                        },
                                        "carrier": {
                                            "type": "string",
                                            "title": "Carrier",
                                            "description": "Mobile carrier of the SIM."
                                        },
                                        "country": {
                                            "type": "string",
                                            "title": "Country",
                                            "description": "Country of the SIM."
                                        }
                                    }
                                },
                                "connection_status": {
                                    "type": "string",
                                    "title": "Connection Status",
                                    "description": "The connection status.",
                                    "enum": [
                                        "QMI_WDS_CONNECTION_STATUS_UNKNOWN",
                                        "QMI_WDS_CONNECTION_STATUS_DISCONNECTED",
                                        "QMI_WDS_CONNECTION_STATUS_CONNECTED",
                                        "QMI_WDS_CONNECTION_STATUS_SUSPENDED",
                                        "QMI_WDS_CONNECTION_STATUS_AUTHENTICATING"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "title": "Interface",
                                    "description": "Name of the interface on the FortiGate that the LTE modem uses."
                                },
                                "ipv4": {
                                    "type": "object",
                                    "title": "IPv4",
                                    "description": "IPv4 addresses and netmasks of the LTE modem.",
                                    "properties": {
                                        "address": {
                                            "type": "string",
                                            "title": "IP Address",
                                            "description": "IPv4 address of the LTE modem."
                                        },
                                        "gateway": {
                                            "type": "string",
                                            "title": "Gateway Address",
                                            "description": "Network gateway address of the LTE modem."
                                        },
                                        "address_netmask": {
                                            "type": "string",
                                            "title": "IP Netmask",
                                            "description": "Netmask for the LTE modem's IP address in dot-decimal notation."
                                        },
                                        "gateway_netmask": {
                                            "type": "string",
                                            "title": "IP Netmask",
                                            "description": "Netmask for the LTE modem's gateway address in dot-decimal notation."
                                        }
                                    }
                                },
                                "ipv6": {
                                    "type": "object",
                                    "title": "IPv6",
                                    "description": "IPv6 addresses and netmasks of the LTE modem.",
                                    "properties": {
                                        "address": {
                                            "type": "string",
                                            "title": "IP Address",
                                            "description": "IPv6 address of the LTE modem."
                                        },
                                        "gateway": {
                                            "type": "string",
                                            "title": "Gateway Address",
                                            "description": "Network gateway address of the LTE modem."
                                        },
                                        "address_netmask": {
                                            "type": "integer",
                                            "title": "IP Netmask",
                                            "description": "Netmask for the LTE modem's IPv6 address as a prefix-length."
                                        },
                                        "gateway_netmask": {
                                            "type": "integer",
                                            "title": "IP Netmask",
                                            "description": "Netmask for the LTE modem's IPv6 gateway address as a prefix-length."
                                        }
                                    }
                                },
                                "profile": {
                                    "type": "object",
                                    "title": "Wireless Profile Information",
                                    "description": "Current profile information of the LTE modem.",
                                    "properties": {
                                        "profile_name": {
                                            "type": "string",
                                            "title": "Profile Name",
                                            "description": "Name of the LTE profile."
                                        },
                                        "apn": {
                                            "type": "string",
                                            "title": "APN",
                                            "description": "Access point name."
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/lte-modem.json"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/resource\/usage": {
            "get": {
                "summary": "Retreive current and historical usage data for a provided resource.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Scope of resource [vdom|global]. This parameter is only applicable if the FGT is in VDOM mode.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "resource",
                        "in": "query",
                        "description": "Resource to get usage data for [cpu|mem|disk|session|session6|setuprate|setuprate6|disk_lograte|faz_lograte|forticloud_lograte|gtp_tunnel|gtp_tunnel_setup_rate]. Defaults to all resources if not provided. Additionally, [npu_session|npu_session6] data is available for devices that have an NPU and [nturbo_session|nturbo_session6] data is available for NP6 devices that support NTurbo. [gtp_tunnel|gtp_tunnel_setup_rate] data is available for carrier platforms only.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "description": "Time interval of resource usage [1-min|10-min|30-min|1-hour|12-hour|24-hour]. Defaults to all intervals if not provided.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/sniffer": {
            "get": {
                "summary": "Return a list of all configured packet captures.\nAccess Group: netgrp.packet-capture",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/sniffer\/restart": {
            "post": {
                "summary": "Restart specified packet capture.\nAccess Group: netgrp.packet-capture",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkey": {
                                    "description": "ID of packet capture entry.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/sniffer\/start": {
            "post": {
                "summary": "Start specified packet capture.\nAccess Group: netgrp.packet-capture",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkey": {
                                    "description": "ID of packet capture entry.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/sniffer\/stop": {
            "post": {
                "summary": "Stop specified packet capture.\nAccess Group: netgrp.packet-capture",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkey": {
                                    "description": "ID of packet capture entry.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/sniffer\/clear": {
            "post": {
                "summary": "Clear the results of a specified packet capture.\nAccess Group: netgrp.packet-capture",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkey": {
                                    "description": "ID of packet capture entry.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/sniffer\/download": {
            "get": {
                "summary": "Download a stored packet capture.\nAccess Group: netgrp.packet-capture",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "ID of packet capture entry.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/automation-action\/stats": {
            "get": {
                "summary": "Statistics for automation actions.\nAccess Group: sysgrp.admin",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Security Fabric Automation Action Statistics",
                            "description": "List statistics for configured Security Fabric automation actions.",
                            "type": "array",
                            "items": {
                                "title": "Action Statistics",
                                "description": "Statistics for an automation action.",
                                "type": "object",
                                "required": [
                                    "name",
                                    "trigger_count",
                                    "last_trigger_time"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "title": "Action Name",
                                        "description": "Name of the automation action."
                                    },
                                    "trigger_count": {
                                        "type": "integer",
                                        "title": "Trigger Count",
                                        "description": "The number of times this automation action has been run."
                                    },
                                    "last_trigger_time": {
                                        "type": "integer",
                                        "title": "Last Trigger Time",
                                        "description": "The last time this automation action was triggered, in Unix epoch time."
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/automation-action.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Filter: Automation action name.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/automation-stitch\/stats": {
            "get": {
                "summary": "Statistics for automation stitches.\nAccess Group: sysgrp.admin",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Security Fabric Automation Stitch Statistics",
                            "description": "List statistics for configured Security Fabric automation stitches.",
                            "type": "array",
                            "items": {
                                "title": "Stitch Statistics",
                                "description": "Statistics for an automation stitch.",
                                "type": "object",
                                "required": [
                                    "name",
                                    "trigger_count",
                                    "last_trigger_time"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "title": "Stitch Name",
                                        "description": "Name of the automation stitch."
                                    },
                                    "trigger_count": {
                                        "type": "integer",
                                        "title": "Trigger Count",
                                        "description": "The number of times this automation stitch ran on this device."
                                    },
                                    "relayed_trigger_count": {
                                        "type": "integer",
                                        "title": "Relayed Trigger Count",
                                        "description": "The number of times this automation stitch ran on downstream devices."
                                    },
                                    "last_trigger_time": {
                                        "type": "integer",
                                        "title": "Last Trigger Time",
                                        "description": "The last time this automation stitch was triggered, in Unix epoch time."
                                    },
                                    "next_trigger_time": {
                                        "type": "integer",
                                        "title": "Next Trigger Time",
                                        "description": "The next time this scheduled automation stitch will be triggered, in Unix epoch time."
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/automation-stitch.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Filter: Automation stitch name.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/automation-stitch\/test": {
            "post": {
                "summary": "Triggers an automation stitch for testing purposes.\nAccess Group: sysgrp.admin",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkey": {
                                    "description": "ID of automation stitch to trigger.",
                                    "type": "string"
                                },
                                "log": {
                                    "description": "Message to store in the log buffer when triggering an event. For example, \"logid=\\\"32102\\\" eventtime=1528840790000000000 logdesc=\\\"Sample description\\\" msg=\\\"Sample message\\\"\". This parameter is required for the 'event-log' event type. For the test to run, the 'logid' argument value must match the trigger-defined value. If 'logid' is not provided, the test will use the trigger-defined value.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/automation-stitch\/webhook": {
            "post": {
                "summary": "Triggers an incoming webhook for an automation stitch.\nAccess Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkey": {
                                    "description": "The incoming webhook name to trigger.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/performance\/status": {
            "get": {
                "summary": "Get system performance statistics.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "System Performance Status",
                            "description": "System CPU and memory status.",
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "title": "CPU Status",
                                    "description": "CPU status.",
                                    "type": "object",
                                    "properties": {
                                        "cores": {
                                            "title": "CPU Cores Status",
                                            "description": "List of CPU cores status.",
                                            "type": "array",
                                            "items": {
                                                "title": "CPU Core Status",
                                                "description": "Status of one CPU core.",
                                                "type": "object",
                                                "properties": {
                                                    "user": {
                                                        "title": "User Level Percentage",
                                                        "description": "Percentage of CPU utilization that occurred at the user level.",
                                                        "type": "integer"
                                                    },
                                                    "system": {
                                                        "title": "Kernel Level Percentage",
                                                        "description": "Percentage of CPU utilization that occurred while executing at the system level.",
                                                        "type": "integer"
                                                    },
                                                    "nice": {
                                                        "title": "Nice Priority Percentage",
                                                        "description": "Percentage of CPU utilization that occurred while executing at the user level with nice priority.",
                                                        "type": "integer"
                                                    },
                                                    "idle": {
                                                        "title": "Idle Percentage",
                                                        "description": "Percentage of time that the CPU was idle and the system did not have an outstanding disk I\/O request.",
                                                        "type": "integer"
                                                    },
                                                    "iowait": {
                                                        "title": "I\/O Wait Percentage",
                                                        "description": "Percentage of time that the CPU was idle during which the system had an outstanding disk I\/O request.",
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        },
                                        "user": {
                                            "title": "User Level Percentage",
                                            "description": "Percentage of CPU utilization that occurred at the user level.",
                                            "type": "integer"
                                        },
                                        "system": {
                                            "title": "Kernel Level Percentage",
                                            "description": "Percentage of CPU utilization that occurred while executing at the system level.",
                                            "type": "integer"
                                        },
                                        "nice": {
                                            "title": "Nice Priority Percentage",
                                            "description": "Percentage of CPU utilization that occurred while executing at the user level with nice priority.",
                                            "type": "integer"
                                        },
                                        "idle": {
                                            "title": "Idle Percentage",
                                            "description": "Percentage of time that the CPU or CPUs were idle and the system did not have an outstanding disk I\/O request.",
                                            "type": "integer"
                                        },
                                        "iowait": {
                                            "title": "I\/O Wait Percentage",
                                            "description": "Percentage of time that the CPU or CPUs were idle during which the system had an outstanding disk I\/O request.",
                                            "type": "integer"
                                        }
                                    }
                                },
                                "mem": {
                                    "title": "Memory Status",
                                    "description": "System memory status.",
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "title": "Total Memory",
                                            "description": "All the installed memory in RAM, in bytes.",
                                            "type": "integer"
                                        },
                                        "used": {
                                            "title": "Used Memory",
                                            "description": "Memory are being used, in bytes.",
                                            "type": "integer"
                                        },
                                        "free": {
                                            "title": "Unused Memory",
                                            "description": "All the memory in RAM that is not being used for anything (even caches), in bytes.",
                                            "type": "integer"
                                        },
                                        "freeable": {
                                            "title": "Freeable Memory",
                                            "description": "Freeable buffers\/caches memory, in bytes.",
                                            "type": "integer"
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/performance.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/logdisk\/format": {
            "post": {
                "summary": "Format log disk.\nAccess Group: loggrp.data-access",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/global-search": {
            "get": {
                "summary": "Search for CMDB table objects based on search phrase.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Global Search Result",
                            "description": "Retrieve a list of weighted search result of CMDB object primary keys, path, name, and matched properties based on a search phrase.",
                            "type": "array",
                            "items": {
                                "title": "Global Search Result Entry",
                                "description": "A global search result entry.",
                                "type": "object",
                                "required": [
                                    "mkey",
                                    "pathname",
                                    "weight",
                                    "matched_properties"
                                ],
                                "properties": {
                                    "mkey": {
                                        "type": [
                                            "integer",
                                            "string"
                                        ],
                                        "title": "CMDB Object Primary Key",
                                        "description": "CMDB object primary key\/identifier."
                                    },
                                    "pathname": {
                                        "type": "string",
                                        "title": "CMDB Path Name",
                                        "description": "The CMDB path name to which the object belongs to."
                                    },
                                    "weight": {
                                        "type": "integer",
                                        "title": "Search Weight",
                                        "description": "Numerical score based on what properties the CMDB object has matched with the search phrase."
                                    },
                                    "matched_properties": {
                                        "type": "array",
                                        "title": "Matched Properties",
                                        "description": "Array of CMDB object's properties that matched with the search phrase.",
                                        "items": {
                                            "type": "object",
                                            "title": "Matched Property",
                                            "description": "CMDB object's property that matched the search phrase.",
                                            "required": [
                                                "lang_key",
                                                "names"
                                            ],
                                            "properties": {
                                                "lang_key": {
                                                    "type": "string",
                                                    "title": "Property Language Key",
                                                    "description": "Property language key of the matched property that can be used in GUI. It also serves as unique identifier for the property."
                                                },
                                                "names": {
                                                    "type": "array",
                                                    "title": "CMDB Property Names",
                                                    "description": "CMDB property names associated with the matched property.",
                                                    "items": {
                                                        "type": "string",
                                                        "title": "CMDB Property Name",
                                                        "description": "CMDB property name associated with the matched property."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/global-search.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Phrase used for searching.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Search scope [vdom|global].",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_tables",
                        "in": "query",
                        "description": "Array of CMDB tables to search on. If not defined, global search function will do a search on all tables that the current user has read permission on. E.g ['firewall.address', 'firewall.address6'].",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skip_tables",
                        "in": "query",
                        "description": "Array of CMDB tables to be skipped when doing global search. E.g. ['firewall.address', 'firewall.address6'].",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/interface": {
            "get": {
                "summary": "Retrieve statistics for all system interfaces.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "System Interface Statistics",
                            "description": "List statistics for system interfaces.",
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "title": "Interface Statistics",
                                "description": "Statistics for a single system interface.",
                                "required": [
                                    "id",
                                    "name",
                                    "alias",
                                    "mac",
                                    "ip",
                                    "mask",
                                    "link",
                                    "speed",
                                    "duplex",
                                    "tx_packets",
                                    "rx_packets",
                                    "tx_bytes",
                                    "rx_bytes",
                                    "tx_errors",
                                    "rx_errors"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "title": "Interface ID",
                                        "description": "ID of the interface."
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Interface Name",
                                        "description": "Name of the interface."
                                    },
                                    "alias": {
                                        "type": "string",
                                        "title": "Interface Alias",
                                        "description": "Alias given to the interface."
                                    },
                                    "mac": {
                                        "type": "string",
                                        "title": "MAC Address",
                                        "description": "MAC address of the interface."
                                    },
                                    "ip": {
                                        "type": "string",
                                        "title": "IP Address",
                                        "description": "IP address of the interface."
                                    },
                                    "mask": {
                                        "type": "integer",
                                        "title": "Netmask",
                                        "description": "Netmask of the interface."
                                    },
                                    "link": {
                                        "type": "boolean",
                                        "title": "Link Active",
                                        "description": "True when the link is active."
                                    },
                                    "speed": {
                                        "type": "number",
                                        "title": "Speed",
                                        "description": "Speed of the interface."
                                    },
                                    "duplex": {
                                        "type": "integer",
                                        "title": "Duplex",
                                        "enum": [
                                            -1,
                                            0,
                                            1
                                        ],
                                        "description": "Duplex type of the interface. [-1 = N\/A, 0 = half, 1 = full."
                                    },
                                    "tx_packets": {
                                        "type": "integer",
                                        "title": "Packets Transmitted",
                                        "description": "Number of packets transmitted by this interface."
                                    },
                                    "rx_packets": {
                                        "type": "integer",
                                        "title": "Packets Received",
                                        "description": "Number of packets received by this interface."
                                    },
                                    "tx_bytes": {
                                        "type": "integer",
                                        "title": "Bytes Transmitted",
                                        "description": "Number of bytes transmitted by this interface."
                                    },
                                    "rx_bytes": {
                                        "type": "integer",
                                        "title": "Bytes Received",
                                        "description": "Number of bytes received by this interface."
                                    },
                                    "tx_errors": {
                                        "type": "integer",
                                        "title": "Errors Transmitted",
                                        "description": "Number of errors transmitted."
                                    },
                                    "rx_errors": {
                                        "type": "integer",
                                        "title": "Errors Received",
                                        "description": "Number of errors received."
                                    },
                                    "vlanid": {
                                        "type": "integer",
                                        "title": "VLAN ID",
                                        "description": "The VLAN ID if this interface is a VLAN interface."
                                    },
                                    "interface": {
                                        "type": "string",
                                        "title": "Interface",
                                        "description": "If this interface is a VLAN interface, the interface that this VLAN interface is bound to."
                                    },
                                    "vrrp": {
                                        "type": "array",
                                        "title": "Virtual Router Redundancy Protocol",
                                        "description": "VRRP statistics for this interface.",
                                        "items": {
                                            "type": "object",
                                            "title": "VRRP Statistic",
                                            "description": "VRRP status information.",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "title": "VRRP Status ID",
                                                    "description": "The VRRP status ID."
                                                },
                                                "group": {
                                                    "type": "integer",
                                                    "title": "VRRP Group ID",
                                                    "description": "The VRRP group ID."
                                                },
                                                "state": {
                                                    "type": "integer",
                                                    "title": "VRRP State Code",
                                                    "description": "The VRRP state code."
                                                },
                                                "state_str": {
                                                    "type": "string",
                                                    "title": "VRRP State",
                                                    "description": "The VRRP state."
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/interface.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "interface_name",
                        "in": "query",
                        "description": "Filter: interface name.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_vlan",
                        "in": "query",
                        "description": "Enable to include VLANs in result list.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "include_aggregate",
                        "in": "query",
                        "description": "Enable to include Aggregate interfaces in result list.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Scope from which to retrieve the interface stats from [vdom|global].",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/interface\/poe": {
            "get": {
                "summary": "Retrieve PoE statistics for system interfaces.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiGate PoE Interface Information",
                            "description": "PoE information for FortiGate interfaces that support it.",
                            "type": "array",
                            "items": {
                                "title": "PoE Interface",
                                "description": "PoE information for an interface.",
                                "type": "object",
                                "required": [
                                    "interface",
                                    "enabled",
                                    "power_status",
                                    "used",
                                    "reserved"
                                ],
                                "properties": {
                                    "interface": {
                                        "type": "string",
                                        "title": "Interface",
                                        "description": "Name of the interface that the PoE information is for."
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "title": "PoE Enabled",
                                        "description": "True when PoE is enabled on the interface."
                                    },
                                    "power_status": {
                                        "type": "string",
                                        "title": "Power Status",
                                        "description": "The power status for the PoE interface.",
                                        "enum": [
                                            "disabled",
                                            "searching",
                                            "delivering_power",
                                            "testmode",
                                            "fault",
                                            "otherfault",
                                            "req_power",
                                            "unknown"
                                        ]
                                    },
                                    "used": {
                                        "type": "integer",
                                        "title": "Power Used",
                                        "description": "The amount of power being used by the PoE interface, measured in milliwatts."
                                    },
                                    "reserved": {
                                        "type": "integer",
                                        "title": "Power Reserved",
                                        "description": "The amount of power reserved for use by the PoE interface, measured in milliwatts."
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/interface.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Filter: Name of the interface to fetch PoE statistics for.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Scope from which to retrieve the interface stats from [vdom|global] (default=vdom).",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/interface\/dhcp-status": {
            "get": {
                "summary": "Retrieve the DHCP client status of an interface.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Name of the interface.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ipv6",
                        "in": "query",
                        "description": "Retrieve the DHCPv6 client status.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/interface\/dhcp-renew": {
            "post": {
                "summary": "Renew DHCP lease of an interface.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkey": {
                                    "description": "Name of the interface.",
                                    "type": "string"
                                },
                                "ipv6": {
                                    "description": "Renew the DHCPv6 lease.",
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/interface\/kernel-interfaces": {
            "get": {
                "summary": "Retrieve a list of kernel interfaces.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Kernel Interfaces",
                            "description": "List kernel interfaces.",
                            "type": "array",
                            "items": {
                                "title": "Kernel Interface",
                                "description": "A kernel interface.",
                                "type": "object",
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "title": "Interface ID",
                                        "description": "Device ID of the interface.",
                                        "type": "integer"
                                    },
                                    "name": {
                                        "title": "Interface Name",
                                        "description": "Name of the interface.",
                                        "type": "string"
                                    },
                                    "link": {
                                        "title": "Link ID",
                                        "description": "Device ID of the physical link, if the interface is not physical.",
                                        "type": "integer"
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/interface.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/available-interfaces": {
            "get": {
                "summary": "Retrieve a list of all interfaces along with some meta information regarding their availability.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Available Interfaces",
                            "description": "List all interfaces that are available in a given scope or VDOM.",
                            "type": "array",
                            "items": {
                                "title": "Interface Details",
                                "description": "Detailed description of an interface.",
                                "type": "object",
                                "required": [
                                    "icon",
                                    "name"
                                ],
                                "properties": {
                                    "vlan_protocol": {
                                        "type": "string",
                                        "title": "VLAN Protocol",
                                        "description": "Ethernet protocol used by the VLAN.",
                                        "enum": [
                                            "8021ad",
                                            "8021q"
                                        ]
                                    },
                                    "supports_fctrl_trunk": {
                                        "type": "boolean",
                                        "title": "Supports FortiController Trunk",
                                        "description": "True when the interface supports FortiController trunk."
                                    },
                                    "supports_fortiextender": {
                                        "type": "boolean",
                                        "title": "Supports FortiExtender",
                                        "description": "True when the interface supports FortiExtender."
                                    },
                                    "supports_extension": {
                                        "type": "boolean",
                                        "title": "Supports Extension",
                                        "description": "True when the interface supports extension devices."
                                    },
                                    "is_used": {
                                        "type": "boolean",
                                        "title": "Is Used",
                                        "description": "True when the interface is part of a switch or aggregate interface."
                                    },
                                    "is_zone": {
                                        "type": "boolean",
                                        "title": "Is Zone",
                                        "description": "True when the interface a zone."
                                    },
                                    "is_sdwan_zone": {
                                        "type": "boolean",
                                        "title": "Is SD-WAN Zone",
                                        "description": "True when the interface is an SD-WAN zone."
                                    },
                                    "is_modem": {
                                        "type": "boolean",
                                        "title": "Is Modem",
                                        "description": "True when the interface is a modem interface."
                                    },
                                    "is_modem_hidden": {
                                        "type": "boolean",
                                        "title": "Is Modem Hidden",
                                        "description": "True when the modem interface is hidden."
                                    },
                                    "is_l2tp_enabled": {
                                        "type": "boolean",
                                        "title": "Is L2TP Enabled",
                                        "description": "True when L2TP status is enabled."
                                    },
                                    "is_l2tp_tunnel": {
                                        "type": "boolean",
                                        "title": "Is L2TP Tunnel",
                                        "description": "True when tunnel is an L2TP tunnel."
                                    },
                                    "is_used_by_aggregate": {
                                        "type": "boolean",
                                        "title": "Is Used by Aggregate",
                                        "description": "True when the interface is used by an aggregate interface."
                                    },
                                    "is_used_by_hw_composite": {
                                        "type": "boolean",
                                        "title": "Is Used by Hardware Composite",
                                        "description": "True when the interface is used by a hardware switch or an aggregate interface."
                                    },
                                    "used_by_composite": {
                                        "type": "boolean",
                                        "title": "Is Used by Composite",
                                        "description": "True when the interface is used by a software switch, hardware switch, or an aggregate interface."
                                    },
                                    "is_used_by_switch": {
                                        "type": "boolean",
                                        "title": "Is Used by Switch",
                                        "description": "True when the interface is used by a software switch."
                                    },
                                    "is_used_by_redundant": {
                                        "type": "boolean",
                                        "title": "Is Used by Redundant",
                                        "description": "True when the interface is used by a redundant interface."
                                    },
                                    "is_used_by_ha": {
                                        "type": "boolean",
                                        "title": "Is Used by HA",
                                        "description": "True when the interface is used by HA."
                                    },
                                    "is_used_by_vlan": {
                                        "type": "boolean",
                                        "title": "Is Used by VLAN",
                                        "description": "True when the interface is used by a VLAN interface."
                                    },
                                    "is_used_by_emac_vlan": {
                                        "type": "boolean",
                                        "title": "Is Used by EMAC-VLAN",
                                        "description": "True when the interface is used by an EMAC-VLAN interface."
                                    },
                                    "is_used_by_bypass": {
                                        "type": "boolean",
                                        "title": "Is Used by Bypass",
                                        "description": "True when the interface is used by a bypass interface."
                                    },
                                    "is_wifi": {
                                        "type": "boolean",
                                        "title": "Is WiFi",
                                        "description": "True when this is a WiFi interface."
                                    },
                                    "is_mesh_backhaul": {
                                        "type": "boolean",
                                        "title": "Is WiFi Mesh Backhaul",
                                        "description": "True when this is a WiFi Mesh Backhaul interface."
                                    },
                                    "is_local_bridge": {
                                        "type": "boolean",
                                        "title": "Is WiFi Local Bridge",
                                        "description": "True when this is a WiFi local bridge interface."
                                    },
                                    "supports_vap_security_exempt_list": {
                                        "type": "boolean",
                                        "title": "Supports VAP Security Exempt List",
                                        "description": "True when the interface supports security exempt lists for VAP."
                                    },
                                    "is_usb_lte": {
                                        "type": "boolean",
                                        "title": "Is USB LTE",
                                        "description": "True when this is a USB LTE interface."
                                    },
                                    "is_usb_wwan": {
                                        "type": "boolean",
                                        "title": "Is USB Wireless WAN",
                                        "description": "True when this is a USB wireless WAN interface."
                                    },
                                    "is_wwan": {
                                        "type": "boolean",
                                        "title": "Is Wireless WAN",
                                        "description": "True when this is a wireless WAN interface."
                                    },
                                    "is_tunnel": {
                                        "type": "boolean",
                                        "title": "Is IPsec Tunnel",
                                        "description": "True when this is an IPsec tunnel interface."
                                    },
                                    "is_nat_tunnel": {
                                        "type": "boolean",
                                        "title": "Is NAT Tunnel",
                                        "description": "True when this is a NAT tunnel interface."
                                    },
                                    "is_sit_tunnel": {
                                        "type": "boolean",
                                        "title": "Is SIT Tunnel",
                                        "description": "True when this is a SIT tunnel interface."
                                    },
                                    "is_ipsec_manualkey": {
                                        "type": "boolean",
                                        "title": "Is IPsec Manual Key",
                                        "description": "True when this is an IPsec Manual Key interface."
                                    },
                                    "is_ipsec_static": {
                                        "type": "boolean",
                                        "title": "Is IPsec Static",
                                        "description": "True when this is a static IPsec tunnel interface."
                                    },
                                    "is_ipsec_dialup": {
                                        "type": "boolean",
                                        "title": "Is IPsec Dialup",
                                        "description": "True when this is a dialup IPsec tunnel interface."
                                    },
                                    "is_ipsec_dialup_netdevice": {
                                        "type": "boolean",
                                        "title": "Is IPsec Dialup Kernel Device",
                                        "description": "True when this is a dialup IPsec tunnel kernel device."
                                    },
                                    "is_ipsec_ddns": {
                                        "type": "boolean",
                                        "title": "Is IPsec DDNS",
                                        "description": "True when this is a DDNS IPsec tunnel interface."
                                    },
                                    "is_ipsec_aggregate": {
                                        "type": "boolean",
                                        "title": "Is IPsec Aggregate",
                                        "description": "True when this is an IPsec aggregate interface."
                                    },
                                    "is_sslvpn_client_tunnel": {
                                        "type": "boolean",
                                        "title": "Is SSL-VPN Client Tunnel",
                                        "description": "True when this is an SSL-VPN client tunnel."
                                    },
                                    "is_virtual_wire_pair_member": {
                                        "type": "boolean",
                                        "title": "Is Virtual Wire Pair Member",
                                        "description": "True when this interface is a virtual wire pair member."
                                    },
                                    "is_virtual_wire_pair_used": {
                                        "type": "boolean",
                                        "title": "Is Used by Virtual Wire Pair",
                                        "description": "True when this interface is being used by a virtual wire pair."
                                    },
                                    "does_support_virtual_wire_pair": {
                                        "type": "boolean",
                                        "title": "Supports Virtual Wire Pair",
                                        "description": "True when this interface can be used in a virtual wire pair."
                                    },
                                    "is_backplane": {
                                        "type": "boolean",
                                        "title": "Is Backplane",
                                        "description": "True when this is a backplane interface."
                                    },
                                    "is_backplane_hidden": {
                                        "type": "boolean",
                                        "title": "Is Backplane Hidden",
                                        "description": "True when this backplane interface is hidden."
                                    },
                                    "is_elbc": {
                                        "type": "boolean",
                                        "title": "Is ELBC",
                                        "description": "True when this is an enhanced load balancing cluster interface (ELBC)."
                                    },
                                    "is_elbc_heartbeat": {
                                        "type": "boolean",
                                        "title": "Is ELBC Heartbeat",
                                        "description": "True when this is an enhanced load balancing cluster (ELBC) heartbeat interface."
                                    },
                                    "is_fortiextender": {
                                        "type": "boolean",
                                        "title": "Is FortiExtender",
                                        "description": "True when this is a FortiExtender interface."
                                    },
                                    "is_loopback": {
                                        "type": "boolean",
                                        "title": "Is Loopback",
                                        "description": "True when this is a loopback interface."
                                    },
                                    "is_hdlc": {
                                        "type": "boolean",
                                        "title": "Is HDLC",
                                        "description": "True when this is an HDLC interface."
                                    },
                                    "is_vlan": {
                                        "type": "boolean",
                                        "title": "Is VLAN",
                                        "description": "True when this is a VLAN interface."
                                    },
                                    "is_wifi_vlan": {
                                        "type": "boolean",
                                        "title": "Is VLAN for WiFi",
                                        "description": "True when this is a VLAN interface for an SSID."
                                    },
                                    "is_switch_vlan": {
                                        "type": "boolean",
                                        "title": "Is VLAN for Switch",
                                        "description": "True when this is a VLAN interface for a switch."
                                    },
                                    "is_emac_vlan": {
                                        "type": "boolean",
                                        "title": "Is EMAC VLAN",
                                        "description": "True when this is an EMAC VLAN interface."
                                    },
                                    "is_vxlan": {
                                        "type": "boolean",
                                        "title": "Is VXLAN",
                                        "description": "True when this is a VXLAN interface."
                                    },
                                    "is_wifi_mesh": {
                                        "type": "boolean",
                                        "title": "Is WiFi Mesh",
                                        "description": "True when this is a WiFi mesh interface."
                                    },
                                    "is_wifi_client": {
                                        "type": "boolean",
                                        "title": "Is WiFi Client",
                                        "description": "True when this is a WiFi client interface."
                                    },
                                    "is_hardware_switch": {
                                        "type": "boolean",
                                        "title": "Is Hardware Switch",
                                        "description": "True when this is a hardware switch interface."
                                    },
                                    "is_software_switch": {
                                        "type": "boolean",
                                        "title": "Is Software Switch",
                                        "description": "True when this is a software switch interface."
                                    },
                                    "is_physical": {
                                        "type": "boolean",
                                        "title": "Is Physical Interface",
                                        "description": "True when this is a physical interface."
                                    },
                                    "is_vdom_link": {
                                        "type": "boolean",
                                        "title": "Is VDOM Link",
                                        "description": "True when this is a VDOM link interface."
                                    },
                                    "is_fctrl_trunk": {
                                        "type": "boolean",
                                        "title": "Is FortiController Trunk",
                                        "description": "True when this is a FortiController trunk interface."
                                    },
                                    "is_geneve": {
                                        "type": "boolean",
                                        "title": "Is GENEVE Interface",
                                        "description": "True when this is a GENEVE interface."
                                    },
                                    "is_switchctl_interface_mode": {
                                        "type": "boolean",
                                        "title": "Is FortiLink",
                                        "description": "True when this is a FortiLink interface."
                                    },
                                    "is_switchctl_iot_scanning": {
                                        "type": "boolean",
                                        "title": "FortiSwitch IoT Scanning",
                                        "description": "True when FortiSwitch IoT scanning is enabled."
                                    },
                                    "has_switchctl_split_interface": {
                                        "type": "boolean",
                                        "title": "FortiLink Split Interface",
                                        "description": "True when this is a FortiLink split interface."
                                    },
                                    "is_ha_mgmt_intf": {
                                        "type": "boolean",
                                        "title": "Is HA Management",
                                        "description": "True when this is an HA management interface."
                                    },
                                    "is_dedicated_mgmt": {
                                        "type": "boolean",
                                        "title": "Is Dedicated to Management",
                                        "description": "True when this interface is dedicated to management."
                                    },
                                    "is_used_by_fctrl_trunk": {
                                        "type": "boolean",
                                        "title": "Is Used by FortiController Trunk",
                                        "description": "True when this interface is a FortiController trunk member."
                                    },
                                    "is_npu_vdom_link": {
                                        "type": "boolean",
                                        "title": "Is NPU VDOM Link",
                                        "description": "True when this is an NPU VDOM link interface."
                                    },
                                    "is_lan_extension": {
                                        "type": "boolean",
                                        "title": "Is LAN-Extension Interface",
                                        "description": "True when this is a LAN-extension interface."
                                    },
                                    "dynamic_addressing": {
                                        "type": "boolean",
                                        "title": "Dynamic Addressing",
                                        "description": "True when this interface has dynamic addressing enabled."
                                    },
                                    "pppoe_interface": {
                                        "type": "boolean",
                                        "title": "PPPoE Interface",
                                        "description": "True when this is a PPPoE interface."
                                    },
                                    "dhcp_interface": {
                                        "type": "boolean",
                                        "title": "DHCP Interface",
                                        "description": "True when the addressing mode is DHCP."
                                    },
                                    "device_id_enabled": {
                                        "type": "boolean",
                                        "title": "Device Identification",
                                        "description": "True when device identification is enabled on this interface."
                                    },
                                    "valid_in_policy": {
                                        "type": "boolean",
                                        "title": "Valid in Policy",
                                        "description": "True when this interface is valid for use in policies."
                                    },
                                    "dns_server_enabled": {
                                        "type": "boolean",
                                        "title": "DNS Server Enabled",
                                        "description": "True when a DNS server is enabled on this interface."
                                    },
                                    "is_sslvpn": {
                                        "type": "boolean",
                                        "title": "Is SSL-VPN",
                                        "description": "True when this is an SSL-VPN interface."
                                    },
                                    "used_by_aggregate_or_switch": {
                                        "type": "boolean",
                                        "title": "Used by Aggregate or Switch",
                                        "description": "True when this interface is used by an aggregate or switch interface."
                                    },
                                    "is_split_port": {
                                        "type": "boolean",
                                        "title": "Is Split Port",
                                        "description": "True when this interface is a split port interface."
                                    },
                                    "is_ethernet_trunk": {
                                        "type": "boolean",
                                        "title": "Is Ethernet Trunk",
                                        "description": "True when this is an ethernet trunk interface."
                                    },
                                    "is_aggregate": {
                                        "type": "boolean",
                                        "title": "Is Aggregate",
                                        "description": "True when this is an aggregate interface."
                                    },
                                    "is_redundant": {
                                        "type": "boolean",
                                        "title": "Is Redundant",
                                        "description": "True when this is a redundant interface."
                                    },
                                    "is_hard_switch_vlan": {
                                        "type": "boolean",
                                        "title": "Is Hardware Switch VLAN",
                                        "description": "True when this is a hardware switch VLAN interface."
                                    },
                                    "is_available_for_acl": {
                                        "type": "boolean",
                                        "title": "Is Available for ACL",
                                        "description": "True when this interface is available for access control lists."
                                    },
                                    "explicit_web_proxy_enabled": {
                                        "type": "boolean",
                                        "title": "Explicit Web Proxy",
                                        "description": "True when explicit web proxy is enabled on this interface."
                                    },
                                    "explicit_ftp_proxy_enabled": {
                                        "type": "boolean",
                                        "title": "Explicit FTP Proxy",
                                        "description": "True when explicit FTP proxy is enabled on this interface."
                                    },
                                    "is_hardware_switch_member": {
                                        "type": "boolean",
                                        "title": "Is Hardware Switch Member",
                                        "description": "True when this interface is a member of a hardware switch."
                                    },
                                    "is_zone_member": {
                                        "type": "boolean",
                                        "title": "Is Zone Member",
                                        "description": "True when this interface is a zone member."
                                    },
                                    "is_zone_usable": {
                                        "type": "boolean",
                                        "title": "Usable by Zone",
                                        "description": "True when this interface can be used in a zone."
                                    },
                                    "is_virtual_wan_link_member": {
                                        "type": "boolean",
                                        "title": "SD-WAN Member",
                                        "description": "True when this interface is an SD-WAN member."
                                    },
                                    "is_virtual_wan_link_capable": {
                                        "type": "boolean",
                                        "title": "SD-WAN Capable",
                                        "description": "True when this interface is capable of being an SD-WAN member."
                                    },
                                    "is_dhcp6_prefix_delegation": {
                                        "type": "boolean",
                                        "title": "DHCPv6 Prefix Delegation",
                                        "description": "True when DHCPv6 prefix delegation is enabled."
                                    },
                                    "is_aggregatable": {
                                        "type": "boolean",
                                        "title": "Aggregate Capable",
                                        "description": "True when this interface can be an aggregate interface member."
                                    },
                                    "is_switch_capable": {
                                        "type": "boolean",
                                        "title": "Software Switch Capable",
                                        "description": "True when this interface can be a software switch member."
                                    },
                                    "is_hard_switch_capable": {
                                        "type": "boolean",
                                        "title": "Hardware Switch Capable",
                                        "description": "True when this interface can be a hardware switch member."
                                    },
                                    "is_explicit_proxyable": {
                                        "type": "boolean",
                                        "title": "Supports Explicit Web Proxy",
                                        "description": "True when this interface supports explicit web proxies."
                                    },
                                    "is_ftp_proxyable": {
                                        "type": "boolean",
                                        "title": "Supports Explicit FTP Proxy",
                                        "description": "True when this interface supports explicit FTP proxies."
                                    },
                                    "is_dedicate_capable": {
                                        "type": "boolean",
                                        "title": "Supports Dedicated to Management",
                                        "description": "True when this interface supports being dedicated to management."
                                    },
                                    "is_ipsecable": {
                                        "type": "boolean",
                                        "title": "Supports IPsec",
                                        "description": "True when this interface supports IPsec."
                                    },
                                    "is_routable": {
                                        "type": "boolean",
                                        "title": "Supports Routing",
                                        "description": "True when this interface supports routing."
                                    },
                                    "is_ha_heartbeatable": {
                                        "type": "boolean",
                                        "title": "Supports HA Heartbeat",
                                        "description": "True when this interface supports HA heartbeats."
                                    },
                                    "is_ha_monitorable": {
                                        "type": "boolean",
                                        "title": "Supports HA Monitor",
                                        "description": "True when this interface supports HA monitoring."
                                    },
                                    "is_ha_mgmt_candidate": {
                                        "type": "boolean",
                                        "title": "Supports HA Management",
                                        "description": "True when this interface supports HA management."
                                    },
                                    "is_onearm_sniffer": {
                                        "type": "boolean",
                                        "title": "Is One-Arm Sniffer",
                                        "description": "True when this interface is a One-Arm Sniffer interface."
                                    },
                                    "supports_fortilink": {
                                        "type": "boolean",
                                        "title": "Supports FortiLink",
                                        "description": "True when this interface supports FortiLink."
                                    },
                                    "supports_onearm": {
                                        "type": "boolean",
                                        "title": "Supports One-Arm-Sniffer",
                                        "description": "True when this interface supports One-Arm-Sniffer."
                                    },
                                    "supports_ieee802_1x": {
                                        "type": "boolean",
                                        "title": "Supports IEEE 802.1x",
                                        "description": "True when this interface supports IEEE 802.1x."
                                    },
                                    "supports_poe": {
                                        "type": "boolean",
                                        "title": "Supports PoE",
                                        "description": "True when this interface supports PoE."
                                    },
                                    "supports_poe_members": {
                                        "type": "boolean",
                                        "title": "Supports PoE Members",
                                        "description": "True when this interface supports PoE members."
                                    },
                                    "supports_stp": {
                                        "type": "boolean",
                                        "title": "Supports STP",
                                        "description": "True when this interface supports the Spanning Tree Protocol."
                                    },
                                    "supports_dhcp": {
                                        "type": "boolean",
                                        "title": "Supports DHCP",
                                        "description": "True when this interface supports DHCP servers."
                                    },
                                    "supports_device_id": {
                                        "type": "boolean",
                                        "title": "Supports Device Detection",
                                        "description": "True when this interface supports device detection."
                                    },
                                    "supports_fortitelemetry": {
                                        "type": "boolean",
                                        "title": "Supports FortiTelemetry",
                                        "description": "True when this interface supports FortiTelemetry."
                                    },
                                    "supports_vlan": {
                                        "type": "boolean",
                                        "title": "Supports VLAN",
                                        "description": "True when this interface supports VLAN."
                                    },
                                    "supports_emac_vlan": {
                                        "type": "boolean",
                                        "title": "Supports EMAC VLAN",
                                        "description": "True when this interface supports EMAC VLAN."
                                    },
                                    "supports_elbc_confsync": {
                                        "type": "boolean",
                                        "title": "Supports ELBC Configuration Synchronization",
                                        "description": "True when this interface supports ELBC configuration synchronization."
                                    },
                                    "supports_pppoe": {
                                        "type": "boolean",
                                        "title": "Supports PPPoE",
                                        "description": "True when this interface supports PPPoE."
                                    },
                                    "supports_secondary_ip": {
                                        "type": "boolean",
                                        "title": "Supports Secondary IP",
                                        "description": "True when this interface supports secondary IP addresses."
                                    },
                                    "supports_dhcp_client": {
                                        "type": "boolean",
                                        "title": "Supports DHCP Clients",
                                        "description": "True when this interface supports DHCP clients."
                                    },
                                    "supports_ssid": {
                                        "type": "boolean",
                                        "title": "Supports SSID",
                                        "description": "True when this interface supports SSIDs."
                                    },
                                    "supports_non_manual_addressing": {
                                        "type": "boolean",
                                        "title": "Supports Non-Manual Addressing",
                                        "description": "True when this interface supports non-manual addressing."
                                    },
                                    "supports_transceiver": {
                                        "type": "boolean",
                                        "title": "Supports Transceiver",
                                        "description": "True when this interface supports transceivers."
                                    },
                                    "used_by_policy": {
                                        "type": "boolean",
                                        "title": "Used by Policy",
                                        "description": "True when this SD-WAN interface is used by a policy."
                                    },
                                    "used_by_explicit_policy": {
                                        "type": "boolean",
                                        "title": "Used by Explicit Policy",
                                        "description": "True when this SD-WAN interface is used by an explicit policy."
                                    },
                                    "used_by_route": {
                                        "type": "boolean",
                                        "title": "Used by Route",
                                        "description": "True when this SD-WAN interface is used by a route."
                                    },
                                    "used_by_shaping_policy": {
                                        "type": "boolean",
                                        "title": "Used by Shaping Policy",
                                        "description": "True when this SD-WAN interface is used by a shaping policy."
                                    },
                                    "chip_id": {
                                        "type": "integer",
                                        "title": "Chip ID",
                                        "description": "ID number of the physical chip that the interface resides on."
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "Name of the interface."
                                    },
                                    "port_group_number": {
                                        "type": "integer",
                                        "title": "Port Group Number",
                                        "description": "Group number the interface belongs to."
                                    },
                                    "port_speed_opts": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "title": "Speed Option",
                                            "description": "Speed option."
                                        },
                                        "title": "Port Speed Options",
                                        "description": "List of speed options available to the interface."
                                    },
                                    "port_speed": {
                                        "type": "string",
                                        "title": "Port Speed",
                                        "description": "Configured port speed."
                                    },
                                    "type": {
                                        "type": "string",
                                        "title": "Type",
                                        "description": "Type of interface.",
                                        "enum": [
                                            "aggregate",
                                            "any",
                                            "emac-vlan",
                                            "fctrl-trunk",
                                            "fext-wan",
                                            "hard-switch",
                                            "hard-switch-vlan",
                                            "geneve",
                                            "ipsec-aggregate",
                                            "loopback",
                                            "npu-vlink",
                                            "npu-vlink-pair",
                                            "physical",
                                            "redundant",
                                            "sdwan-zone",
                                            "sit-tunnel",
                                            "ssl",
                                            "switch",
                                            "trunk",
                                            "tunnel",
                                            "unknown",
                                            "vap-switch",
                                            "vdom-link",
                                            "vdom-link-pair",
                                            "vlan",
                                            "vxlan",
                                            "wireless",
                                            "wl-mesh",
                                            "zone",
                                            "lan-extension"
                                        ]
                                    },
                                    "icon": {
                                        "type": "string",
                                        "title": "Icon",
                                        "description": "Icon class to use for the interface."
                                    },
                                    "out_of_scope": {
                                        "type": "boolean",
                                        "title": "Out of Scope",
                                        "description": "True when this interface belongs to another VDOM."
                                    },
                                    "real_interface_name": {
                                        "type": "string",
                                        "title": "Real Interface Name",
                                        "description": "The real name of the interface as specified by the device."
                                    },
                                    "vdom": {
                                        "anyOf": [
                                            {
                                                "title": "VDOM",
                                                "description": "The VDOM that the interface belongs to.",
                                                "type": "string"
                                            },
                                            {
                                                "title": "VDOMs",
                                                "description": "The VDOMs that the interface belongs to.",
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "title": "VDOM",
                                                    "description": "The VDOM that one of the interface pairs belong to."
                                                }
                                            }
                                        ]
                                    },
                                    "is_system_interface": {
                                        "type": "boolean",
                                        "title": "System Interface",
                                        "description": "True when this is a system interface."
                                    },
                                    "status": {
                                        "type": "string",
                                        "title": "Status",
                                        "description": "Status of the interface.",
                                        "enum": [
                                            "up",
                                            "down"
                                        ]
                                    },
                                    "alias": {
                                        "type": "string",
                                        "title": "Alias",
                                        "description": "The alias name given to the interface."
                                    },
                                    "in_bandwidth_limit": {
                                        "type": "integer",
                                        "title": "Incoming Bandwidth Limit",
                                        "description": "The incoming bandwidth limit for the interface, in kbps."
                                    },
                                    "out_bandwidth_limit": {
                                        "type": "integer",
                                        "title": "Outgoing Bandwidth Limit",
                                        "description": "The outgoing bandwidth limit for the interface, in kbps."
                                    },
                                    "dhcp4_client_count": {
                                        "type": "integer",
                                        "title": "IPv4 DHCP Client Count",
                                        "description": "The number of IPv4 DHCP clients for this interface."
                                    },
                                    "dhcp6_client_count": {
                                        "type": "integer",
                                        "title": "IPv6 DHCP Client Count",
                                        "description": "The number of IPv6 DHCP clients for this interface."
                                    },
                                    "role": {
                                        "type": "string",
                                        "title": "Role",
                                        "description": "The role of this interface.",
                                        "enum": [
                                            "lan",
                                            "wan",
                                            "dmz",
                                            "undefined"
                                        ]
                                    },
                                    "estimated_upstream_bandwidth": {
                                        "type": "integer",
                                        "title": "Estimated Upstream Bandwidth",
                                        "description": "The estimated upstream bandwidth for this interface. Only displayed for interfaces with a WAN role."
                                    },
                                    "estimated_downstream_bandwidth": {
                                        "type": "integer",
                                        "title": "Estimated Downstream Bandwidth",
                                        "description": "The estimated downstream bandwidth for this interface. Only displayed for interfaces with a WAN role."
                                    },
                                    "monitor_bandwidth": {
                                        "type": "boolean",
                                        "title": "Monitor Bandwidth",
                                        "description": "True when bandwidth monitoring is enabled on this interface."
                                    },
                                    "measured_upstream_bandwidth": {
                                        "type": "integer",
                                        "title": "Measured Upstream Bandwidth",
                                        "description": "The upstream bandwidth for this interface, in kbps. Only available for interfaces with a WAN role and a valid SWNM license."
                                    },
                                    "measured_downstream_bandwidth": {
                                        "type": "integer",
                                        "title": "Measured Downstream Bandwidth",
                                        "description": "The downstream bandwidth for this interface, in kbps. Only available for interfaces with a WAN role and a valid SWNM license."
                                    },
                                    "measure_time": {
                                        "type": "integer",
                                        "title": "Timestamp of Bandwidth Measurement Completion",
                                        "description": "Timestamp of when the bandwidth measurement completed. Only available for interfaces with a WAN role and a valid SWNM license."
                                    },
                                    "ipv4_addresses": {
                                        "type": "array",
                                        "title": "IPv4 Addresses",
                                        "description": "The IPv4 addresses assigned to this interface.",
                                        "items": {
                                            "type": "object",
                                            "title": "IPv4 Address",
                                            "description": "An IPv4 address assigned to this interface.",
                                            "required": [
                                                "ip",
                                                "netmask",
                                                "cidr_netmask"
                                            ],
                                            "properties": {
                                                "ip": {
                                                    "type": "string",
                                                    "title": "IP",
                                                    "description": "The IP address."
                                                },
                                                "netmask": {
                                                    "type": "string",
                                                    "title": "Netmask",
                                                    "description": "The netmask of the IPv4 address."
                                                },
                                                "cidr_netmask": {
                                                    "type": "integer",
                                                    "title": "CIDR Netmask",
                                                    "description": "The CIDR netmask of the IPv4 address."
                                                }
                                            }
                                        }
                                    },
                                    "ipv6_addresses": {
                                        "type": "array",
                                        "title": "IPv6 Addresses",
                                        "description": "The IPv6 addresses assigned to this interface.",
                                        "items": {
                                            "type": "object",
                                            "title": "IPv6 Address",
                                            "description": "An IPv6 address assigned to this interface.",
                                            "required": [
                                                "ip",
                                                "cidr_netmask"
                                            ],
                                            "properties": {
                                                "ip": {
                                                    "type": "string",
                                                    "title": "IP",
                                                    "description": "The IP address."
                                                },
                                                "cidr_netmask": {
                                                    "type": "integer",
                                                    "title": "CIDR Netmask",
                                                    "description": "The CIDR netmask of the IPv6 address."
                                                }
                                            }
                                        }
                                    },
                                    "mac_address": {
                                        "type": "string",
                                        "title": "MAC Address",
                                        "description": "The MAC address of this interface."
                                    },
                                    "vlan_id": {
                                        "type": "integer",
                                        "title": "VLAN ID",
                                        "description": "The ID given to this VLAN interface."
                                    },
                                    "link": {
                                        "type": "string",
                                        "title": "Link Status",
                                        "description": "The link status of this interface.",
                                        "enum": [
                                            "up",
                                            "down"
                                        ]
                                    },
                                    "duplex": {
                                        "type": "string",
                                        "title": "Duplex",
                                        "description": "The duplex mode of this interface.",
                                        "enum": [
                                            "half",
                                            "full"
                                        ]
                                    },
                                    "speed": {
                                        "type": "integer",
                                        "title": "Speed",
                                        "description": "The speed of the interface, in Mbps."
                                    },
                                    "members": {
                                        "type": "array",
                                        "title": "Members",
                                        "description": "Interface that is a member of this interface.",
                                        "items": {
                                            "type": "string",
                                            "title": "Member",
                                            "description": "Name of the interface member."
                                        }
                                    },
                                    "ssid": {
                                        "type": "string",
                                        "title": "SSID",
                                        "description": "SSID assigned to this WiFi interface."
                                    },
                                    "media": {
                                        "type": "string",
                                        "title": "Media Type",
                                        "description": "Physical interface media type.",
                                        "enum": [
                                            "rj45",
                                            "fiber",
                                            "rj11",
                                            "unknown"
                                        ]
                                    },
                                    "poe_capable": {
                                        "type": "boolean",
                                        "title": "PoE Capable",
                                        "description": "True when this interface is capable of PoE."
                                    },
                                    "poe_enabled": {
                                        "type": "boolean",
                                        "title": "PoE Enabled",
                                        "description": "True when PoE is enabled on this interface."
                                    },
                                    "poe_status": {
                                        "type": "string",
                                        "title": "PoE Status",
                                        "description": "The PoE power status for this interface.",
                                        "enum": [
                                            "disabled",
                                            "searching",
                                            "delivering_power",
                                            "testmode",
                                            "fault",
                                            "otherfault",
                                            "req_power",
                                            "unknown"
                                        ]
                                    },
                                    "adsl": {
                                        "type": "object",
                                        "title": "ADSL Information",
                                        "description": "Information on the asymmetric digital subscriber line.",
                                        "properties": {
                                            "link": {
                                                "type": "string",
                                                "title": "Link Status",
                                                "description": "The link status of this interface.",
                                                "enum": [
                                                    "up",
                                                    "down"
                                                ]
                                            },
                                            "physical_mode": {
                                                "type": "string",
                                                "title": "Physical Mode",
                                                "description": "Physical mode of the ADSL."
                                            }
                                        }
                                    },
                                    "fortiextender_id": {
                                        "type": "string",
                                        "title": "FortiExtender ID",
                                        "description": "ID given to a FortiExtender WAN-extension interface."
                                    },
                                    "physical_switch": {
                                        "type": "string",
                                        "title": "Physical Switch",
                                        "description": "Physical switch that the interface resides on."
                                    },
                                    "description": {
                                        "type": "string",
                                        "title": "Description",
                                        "description": "Description or comment for this interface."
                                    },
                                    "sdwan_zone": {
                                        "type": "string",
                                        "title": "SD-WAN Zone",
                                        "description": "The SD-WAN zone that this interface belongs to."
                                    },
                                    "vlan_interface": {
                                        "type": "string",
                                        "title": "VLAN",
                                        "description": "The interface that this VLAN interface is bound to."
                                    },
                                    "tunnel_interface": {
                                        "anyOf": [
                                            {
                                                "title": "Tunnel Interface",
                                                "description": "The interface that this tunnel interface is bound to.",
                                                "type": "string"
                                            },
                                            {
                                                "title": "Tunnel Interfaces",
                                                "description": "If the tunnel is an aggregate: the interfaces that this tunnel is bound to.",
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "title": "Interface",
                                                    "description": "Name of the interface."
                                                }
                                            }
                                        ]
                                    },
                                    "outgoing_interface": {
                                        "type": "string",
                                        "title": "Outgoing Interface",
                                        "description": "Outgoing interface for encapsulated traffic."
                                    },
                                    "vdom_link": {
                                        "type": "string",
                                        "title": "VDOM Link Pair",
                                        "description": "The VDOM Link interface that this interface belongs to."
                                    },
                                    "npu_vdom_link": {
                                        "type": "string",
                                        "title": "NPU VDOM Link Pair",
                                        "description": "The NPU VDOM Link interface that this interface belongs to."
                                    },
                                    "physical_interface": {
                                        "type": "string",
                                        "title": "Physical Interface",
                                        "description": "The physical interface that a VXLAN interface is bound to."
                                    },
                                    "zone": {
                                        "type": "string",
                                        "title": "Zone",
                                        "description": "The zone that this interface belongs to."
                                    },
                                    "virtual_wire_pair": {
                                        "type": "string",
                                        "title": "Virtual Wire Pair",
                                        "description": "The Virtual Wire Pair interface that this interface belongs to."
                                    },
                                    "hardware_switch": {
                                        "type": "string",
                                        "title": "Hardware Switch",
                                        "description": "Hardware switch that this interface belongs to."
                                    },
                                    "will_https_port_conflict_with_sslvpn": {
                                        "type": "boolean",
                                        "title": "Will HTTPS Conflict With SSL-VPN",
                                        "description": "True when the HTTPS management port would conflict with SSL-VPN when HTTPS access is enabled on the interface."
                                    },
                                    "will_sslvpn_take_precedence_over_https": {
                                        "type": "boolean",
                                        "title": "Will SSL-VPN Port Take Precedence Over HTTPS",
                                        "description": "True when SSL-VPN would take precedence over HTTPS when HTTPS access is enabled on the interface."
                                    },
                                    "tx_packets": {
                                        "type": "integer",
                                        "title": "Packets Transmitted",
                                        "description": "Number of packets transmitted by this interface."
                                    },
                                    "rx_packets": {
                                        "type": "integer",
                                        "title": "Packets Received",
                                        "description": "Number of packets received by this interface."
                                    },
                                    "tx_bytes": {
                                        "type": "integer",
                                        "title": "Bytes Transmitted",
                                        "description": "Number of bytes transmitted by this interface."
                                    },
                                    "rx_bytes": {
                                        "type": "integer",
                                        "title": "Bytes Received",
                                        "description": "Number of bytes received by this interface."
                                    },
                                    "tx_errors": {
                                        "type": "integer",
                                        "title": "Errors Transmitted",
                                        "description": "Number of errors transmitted."
                                    },
                                    "rx_errors": {
                                        "type": "integer",
                                        "title": "Errors Received",
                                        "description": "Number of errors received."
                                    },
                                    "_performance": {
                                        "type": "object",
                                        "title": "Performance",
                                        "description": "Performance metrics, measured in milliseconds.",
                                        "additionalProperties": true
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/available-interfaces.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "view_type",
                        "in": "query",
                        "description": "Optionally include additional information for interfaces. This parameter can be repeated multiple times. 'ha': Includes extra meta information useful when dealing with interfaces related to HA configuration. Interfaces that are used by an HA cluster as management interfaces are also included in this view. 'zone': Includes extra meta information for determining zone membership eligibility. 'vwp': Includes extra meta information for determining virtual wire pair eligibility. 'sdwan': Includes extra meta information for determining SD-WAN eligibility. 'switch': Includes extra meta information for determining switch eligibility. 'hard-switch': Includes extra meta information for determining hard-switch eligibility. 'limited': Includes limited information on parent interfaces that are in another VDOM. 'stat': Includes TX\/RX statistics data. ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Scope of interface list [vdom|global]",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/ipam\/list": {
            "get": {
                "summary": "List IP address allocated by IPAM.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "IPAM IP Address List",
                            "description": "List of IP addresses allocated by IPAM.",
                            "type": "object",
                            "definitions": {
                                "entry": {
                                    "type": "object",
                                    "title": "Allocated IP Address",
                                    "description": "Allocated IP address.",
                                    "required": [
                                        "sn",
                                        "interface",
                                        "vdom",
                                        "ip",
                                        "netmask"
                                    ],
                                    "properties": {
                                        "fortigate_serial": {
                                            "type": "string",
                                            "title": "FortiGate Serial Number",
                                            "description": "FortiGate serial number."
                                        },
                                        "interface": {
                                            "type": "string",
                                            "title": "Interface",
                                            "description": "Interface name."
                                        },
                                        "vdom": {
                                            "type": "string",
                                            "title": "VDOM",
                                            "description": "VDOM."
                                        },
                                        "ip": {
                                            "type": "string",
                                            "title": "IP Address",
                                            "description": "IP address."
                                        },
                                        "subnet_size": {
                                            "type": "string",
                                            "title": "Subnet Size",
                                            "description": "Subnet size."
                                        }
                                    }
                                }
                            },
                            "properties": {
                                "static_entries": {
                                    "type": "array",
                                    "title": "Manually Configured IP Addresses",
                                    "description": "Manually configured IP addresses.",
                                    "items": {
                                        "$ref": "#\/definitions\/entry"
                                    }
                                },
                                "dynamic_entries": {
                                    "type": "array",
                                    "title": "Allocated IP Addresses",
                                    "description": "Allocated IP addresses.",
                                    "items": {
                                        "$ref": "#\/definitions\/entry"
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/ipam.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/ipam\/status": {
            "get": {
                "summary": "Retrieve the status of IPAM.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "IPAM Status",
                            "description": "IPAM status.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "title": "Status",
                                    "description": "Status.",
                                    "enum": [
                                        "enabled",
                                        "disabled"
                                    ]
                                },
                                "server_type": {
                                    "type": "string",
                                    "title": "Server Type",
                                    "description": "Server type.",
                                    "enum": [
                                        "cloud",
                                        "fabric-root"
                                    ]
                                },
                                "available_subnet_size": {
                                    "type": "integer",
                                    "title": "Available Subnet Size",
                                    "description": "Available subnet size."
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/ipam.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/acquired-dns": {
            "get": {
                "summary": "Retrieve a list of interfaces and their acquired DNS servers.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Acquired DNS Servers",
                            "description": "Array of acquired DNS servers from all interfaces.",
                            "type": "array",
                            "items": {
                                "title": "Acquired DNS Server",
                                "description": "DNS server from a single interface.",
                                "type": "object",
                                "required": [
                                    "interface",
                                    "vdom",
                                    "dns_servers"
                                ],
                                "properties": {
                                    "interface": {
                                        "type": "string",
                                        "title": "Interface",
                                        "description": "Interface from which the servers were acquired."
                                    },
                                    "vdom": {
                                        "type": "string",
                                        "title": "VDOM",
                                        "description": "VDOM to which the interface belongs to."
                                    },
                                    "dns-servers": {
                                        "type": "array",
                                        "title": "DNS Servers",
                                        "description": "List of DNS servers.",
                                        "deprecated": true,
                                        "x-scheduledRemoval": {
                                            "major": 7,
                                            "minor": 2
                                        },
                                        "items": {
                                            "type": "string",
                                            "title": "DNS Server Address",
                                            "description": "IPv4\/IPv6 address of the server."
                                        }
                                    },
                                    "dns_servers": {
                                        "type": "array",
                                        "title": "DNS Servers",
                                        "description": "List of DNS servers.",
                                        "items": {
                                            "type": "string",
                                            "title": "DNS Server Address",
                                            "description": "IPv4\/IPv6 address of the server."
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/acquired-dns.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/resolve-fqdn": {
            "get": {
                "summary": "Resolves the provided FQDNs to FQDN -> IP mappings.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "ipv6",
                        "in": "query",
                        "description": "Resolve for the AAAA record?",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "fqdn",
                        "in": "query",
                        "description": "FQDN",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fqdn",
                        "in": "query",
                        "description": "List of FQDNs to be resolved",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/interface\/speed-test-trigger": {
            "post": {
                "summary": "Run a speed-test on the given interface.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkey": {
                                    "description": "Name of the interface.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/interface\/speed-test-status": {
            "get": {
                "summary": "Retrieve the current status of a speed-test with the results if finished.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Speed Test Status",
                            "description": "Current progress of a speed test, including results if it has completed.",
                            "type": "object",
                            "properties": {
                                "progress": {
                                    "type": "integer",
                                    "title": "Progress",
                                    "description": "Current progress of the speed test (0-100)."
                                },
                                "measured_upstream_bandwidth": {
                                    "type": "integer",
                                    "title": "Measured Upstream Bandwidth",
                                    "description": "Upstream bandwidth measured in kbps."
                                },
                                "measured_downstream_bandwidth": {
                                    "type": "integer",
                                    "title": "Measured Downstream Bandwidth",
                                    "description": "Downstream bandwidth measured in kbps."
                                },
                                "measure_time": {
                                    "type": "integer",
                                    "title": "Timestamp of Speed-Test Completion",
                                    "description": "Timestamp of when the speed test completed."
                                },
                                "error_code": {
                                    "type": "integer",
                                    "title": "Error Code",
                                    "description": "Error code to specify the reason for failure."
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/interface.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the speed test.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/usb-log": {
            "get": {
                "summary": "Retrieve information about connected USB drives, including estimated log sizes.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/usb-log\/start": {
            "post": {
                "summary": "Start backup of logs from current VDOM to USB drive.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/usb-log\/stop": {
            "post": {
                "summary": "Stop backup of logs to USB drive.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/usb-device\/eject": {
            "post": {
                "summary": "Eject USB drives for safe removal.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/ipconf": {
            "get": {
                "summary": "Determine if there is an IP conflict for a specific IP using ARP.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "devs",
                        "in": "query",
                        "description": "List of interfaces to check for conflict.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ipaddr",
                        "in": "query",
                        "description": "IPv4 address to check for conflict.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/fortiguard\/update": {
            "post": {
                "summary": "Immediately update status for FortiGuard services.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/fortiguard\/clear-statistics": {
            "post": {
                "summary": "Immediately clear all FortiGuard statistics.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/fortiguard\/test-availability": {
            "post": {
                "summary": "Test availability of FortiGuard services.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "protocol": {
                                    "description": "Protocol to check. [https | udp | http]",
                                    "type": "string"
                                },
                                "port": {
                                    "description": "Port to check.",
                                    "type": "integer"
                                },
                                "service": {
                                    "description": "Service to check. [emailfilter | webfilter]",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/fortiguard\/server-info": {
            "get": {
                "summary": "Get FortiGuard server list and information.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/fortimanager\/status": {
            "get": {
                "summary": "Get FortiManager status.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiManager Status",
                            "description": "Retrieve FortiManager status.",
                            "type": "object",
                            "properties": {
                                "mode": {
                                    "type": "string",
                                    "title": "Mode",
                                    "description": "Operating mode of the FortiManager.",
                                    "enum": [
                                        "normal",
                                        "backup"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "title": "Server",
                                    "description": "Address used by FortiGate to connect to the FortiManager."
                                },
                                "fortimanager_status_id": {
                                    "type": "integer",
                                    "title": "FortiManager Connection Status ID",
                                    "description": "Connection status ID of the FortiManager.",
                                    "deprecated": true,
                                    "x-scheduledRemoval": {
                                        "major": 7,
                                        "minor": 2
                                    },
                                    "enum": [
                                        0,
                                        1,
                                        2
                                    ]
                                },
                                "fortimanager_registration_status_id": {
                                    "type": "integer",
                                    "title": "FortiManager Registration Status ID",
                                    "description": "Registration status ID of the FortiManager.",
                                    "deprecated": true,
                                    "x-scheduledRemoval": {
                                        "major": 7,
                                        "minor": 2
                                    },
                                    "enum": [
                                        0,
                                        1,
                                        2,
                                        3
                                    ]
                                },
                                "fortimanager_status": {
                                    "type": "string",
                                    "title": "FortiManager Connection Status",
                                    "description": "Connection status of the FortiManager.",
                                    "enum": [
                                        "down",
                                        "handshake",
                                        "up"
                                    ]
                                },
                                "fortimanager_registration_status": {
                                    "type": "string",
                                    "title": "FortiManager Registration Status",
                                    "description": "Registration status of the FortiManager.",
                                    "enum": [
                                        "unknown",
                                        "in_progress",
                                        "registered",
                                        "unregistered"
                                    ]
                                },
                                "mgmt_ip": {
                                    "type": "string",
                                    "title": "Management IP or FQDN",
                                    "description": "Management IP or FQDN of the FortiManager."
                                },
                                "mgmt_port": {
                                    "type": "integer",
                                    "title": "Management IP or FQDN",
                                    "description": "Management port of the FortiManager."
                                },
                                "sn": {
                                    "type": "string",
                                    "title": "Serial Number",
                                    "description": "Serial number of the FortiManager."
                                },
                                "pending_fortimanager": {
                                    "type": "string",
                                    "title": "Pending FortiManager Serial",
                                    "description": "Serial number of the FortiManager that is pending authorization."
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/fortimanager.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/fortimanager\/config": {
            "post": {
                "summary": "Configure FortiManager IP. Register FortiManager if 'fortimanager_ip' is provided.       Unregister FortiManager if only 'unregister' parameter is specified and set to true.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "fortimanager_ip": {
                                    "description": "FortiManager IP address.",
                                    "type": "string"
                                },
                                "unregister": {
                                    "description": "Unregister the FortiManager (default=false).",
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/fortimanager\/backup-summary": {
            "get": {
                "summary": "Get FortiManager backup summary.\nAccess Group: fwgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/fortimanager\/backup-action": {
            "post": {
                "summary": "Import or update from FortiManager objects.\nAccess Group: fwgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "operation": {
                                    "description": "Operation to perform on the given CMDB objects [import|update].",
                                    "type": "string"
                                },
                                "objects": {
                                    "description": "Array of CMDB tables and mkeys.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/fortimanager\/backup-details": {
            "get": {
                "summary": "Get the properties of a FortiManager object.\nAccess Group: fwgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Object name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "datasource",
                        "in": "query",
                        "description": "Object datasource.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/available-certificates": {
            "get": {
                "summary": "Get available certificates.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Available SSL Certificates",
                            "description": "Retrieve a list of certificates, certificate revocation lists, and certificate authorities.",
                            "type": "array",
                            "items": {
                                "title": "SSL Certificate",
                                "description": "Details for an SSL certificate.",
                                "type": "object",
                                "required": [
                                    "name",
                                    "source",
                                    "type",
                                    "status"
                                ],
                                "properties": {
                                    "name": {
                                        "title": "Certificate Name",
                                        "description": "Name of the certificate.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "title": "Certificate Status",
                                        "description": "Status of the certificate.",
                                        "type": "string",
                                        "enum": [
                                            "valid",
                                            "invalid",
                                            "expired",
                                            "pending",
                                            "unknown"
                                        ]
                                    },
                                    "source": {
                                        "title": "Certificate Source",
                                        "description": "Origin of the certificate.",
                                        "type": "string",
                                        "enum": [
                                            "user",
                                            "factory",
                                            "bundle"
                                        ]
                                    },
                                    "comments": {
                                        "title": "Comments",
                                        "description": "User comments on the certificate.",
                                        "type": "string"
                                    },
                                    "range": {
                                        "title": "Range",
                                        "description": "VDOM scope of the certificate.",
                                        "type": "string",
                                        "enum": [
                                            "global",
                                            "vdom"
                                        ]
                                    },
                                    "exists": {
                                        "title": "Exists",
                                        "description": "True when the certificate file exists.",
                                        "type": "boolean"
                                    },
                                    "is_ssl_server_cert": {
                                        "title": "Is SSL Server Cert",
                                        "description": "True when the purpose of this certificate is for use in an SSL server.",
                                        "type": "boolean"
                                    },
                                    "is_ssl_client_cert": {
                                        "title": "Is SSL Client Cert",
                                        "description": "True when the purpose of this certificate is for use in an SSL client.",
                                        "type": "boolean"
                                    },
                                    "is_proxy_ssl_cert": {
                                        "title": "Is Proxy SSL Cert",
                                        "description": "True when the certificate is used as an SSL proxy certificate.",
                                        "type": "boolean"
                                    },
                                    "is_general_allowable_cert": {
                                        "title": "Is General Allowable Certificate",
                                        "description": "True when the certificate is generally allowable.",
                                        "type": "boolean"
                                    },
                                    "is_default_local": {
                                        "title": "Is Default Local",
                                        "description": "True when the certificate is one of the default local certificates.",
                                        "type": "boolean"
                                    },
                                    "is_built_in": {
                                        "title": "Is Built In",
                                        "description": "True when the certificate is built in.",
                                        "type": "boolean"
                                    },
                                    "is_wifi_cert": {
                                        "title": "Is WiFi Certificate",
                                        "description": "True when the certificate is a WiFi only certificate.",
                                        "type": "boolean"
                                    },
                                    "is_deep_inspection_cert": {
                                        "title": "Is Deep Inspection Certificate",
                                        "description": "True when the certificate is available for deep inspections.",
                                        "type": "boolean"
                                    },
                                    "trusted": {
                                        "title": "Certificate Authority Trusted",
                                        "description": "True when the certificate authority is trusted.",
                                        "type": "boolean"
                                    },
                                    "has_valid_cert_key": {
                                        "title": "Has Valid Certificate Key",
                                        "description": "True when the certificate has a valid key.",
                                        "type": "boolean"
                                    },
                                    "revoked_serials": {
                                        "title": "Revoked Serials",
                                        "description": "A list of revoked serial numbers.",
                                        "type": "array",
                                        "items": {
                                            "title": "Revoked Serial",
                                            "description": "A revoked serial number.",
                                            "type": "string"
                                        }
                                    },
                                    "key_type": {
                                        "title": "Key Type",
                                        "description": "The type of key for the certificate.",
                                        "type": "string",
                                        "enum": [
                                            "RSA",
                                            "DSA",
                                            "ECDSA",
                                            ""
                                        ]
                                    },
                                    "key_size": {
                                        "title": "Key Size",
                                        "description": "The size of the key for the certificate.",
                                        "type": "integer"
                                    },
                                    "cert_protocol": {
                                        "title": "Certificate Protocol",
                                        "description": "The protocol of the certificate.",
                                        "type": "string",
                                        "enum": [
                                            "none",
                                            "scep",
                                            "cmpv2",
                                            "acme2"
                                        ]
                                    },
                                    "is_local_ca_cert": {
                                        "title": "Is Local Certificate CA",
                                        "description": "True when the local certificate is a CA certificate.",
                                        "type": "boolean"
                                    },
                                    "type": {
                                        "title": "Certificate Type",
                                        "description": "The type of certificate.",
                                        "type": "string",
                                        "enum": [
                                            "local-ca",
                                            "local-cer",
                                            "local-csr",
                                            "remote-cer",
                                            "remote-ca",
                                            "crl"
                                        ]
                                    },
                                    "lastupdate": {
                                        "title": "CRL Last Update",
                                        "description": "Timestamp of when the CRL was last updated, in seconds.",
                                        "type": "integer"
                                    },
                                    "nextupdate": {
                                        "title": "CRL Next Update",
                                        "description": "Number of seconds until the next update for this CRL.",
                                        "type": "integer"
                                    },
                                    "lastupdate_raw": {
                                        "title": "CRL Last Update Raw",
                                        "description": "Raw last update date string from the certificate data.",
                                        "type": "string"
                                    },
                                    "nextupdate_raw": {
                                        "title": "CRL Next Update Raw",
                                        "description": "Raw next update date string from the certificate data.",
                                        "type": "string"
                                    },
                                    "valid_from": {
                                        "title": "Valid From",
                                        "description": "Timestamp of the validity start date, in seconds.",
                                        "type": "integer"
                                    },
                                    "valid_to": {
                                        "title": "Valid To",
                                        "description": "Timestamp of the validity end date, in seconds.",
                                        "type": "integer"
                                    },
                                    "valid_from_raw": {
                                        "title": "Valid From Raw",
                                        "description": "Raw validity start date string from the certificate data.",
                                        "type": "string"
                                    },
                                    "valid_to_raw": {
                                        "title": "Valid to Raw",
                                        "description": "Raw validity end date string from the certificate data.",
                                        "type": "string"
                                    },
                                    "signature_algorithm": {
                                        "title": "Signature Algorithm",
                                        "description": "Hashing algorithm used for the signature.",
                                        "type": "string"
                                    },
                                    "subject": {
                                        "title": "Subject",
                                        "description": "Parsed certificate subject string.",
                                        "type": "object",
                                        "properties": {
                                            "C": {
                                                "title": "Country",
                                                "description": "Subject country.",
                                                "type": "string"
                                            },
                                            "ST": {
                                                "title": "State",
                                                "description": "Subject state.",
                                                "type": "string"
                                            },
                                            "L": {
                                                "title": "Locality",
                                                "description": "Subject locality.",
                                                "type": "string"
                                            },
                                            "O": {
                                                "title": "Organization",
                                                "description": "Subject organization.",
                                                "type": "string"
                                            },
                                            "OU": {
                                                "title": "Organizational Unit",
                                                "description": "Subject organizational unit.",
                                                "type": "string"
                                            },
                                            "CN": {
                                                "title": "Common Name",
                                                "description": "Subject common name.",
                                                "type": "string"
                                            }
                                        },
                                        "additionalProperties": true
                                    },
                                    "subject_raw": {
                                        "title": "Subject Raw",
                                        "description": "Raw subject string from certificate data.",
                                        "type": "string"
                                    },
                                    "issuer": {
                                        "title": "Issuer",
                                        "description": "Parsed certificate issuer string.",
                                        "type": "object",
                                        "properties": {
                                            "C": {
                                                "title": "Country",
                                                "description": "Issuer country.",
                                                "type": "string"
                                            },
                                            "ST": {
                                                "title": "State",
                                                "description": "Issuer state.",
                                                "type": "string"
                                            },
                                            "L": {
                                                "title": "Locality",
                                                "description": "Issuer locality.",
                                                "type": "string"
                                            },
                                            "O": {
                                                "title": "Organization",
                                                "description": "Issuer organization.",
                                                "type": "string"
                                            },
                                            "OU": {
                                                "title": "Organizational Unit",
                                                "description": "Issuer organizational unit.",
                                                "type": "string"
                                            },
                                            "CN": {
                                                "title": "Common Name",
                                                "description": "Issuer common name.",
                                                "type": "string"
                                            }
                                        },
                                        "additionalProperties": true
                                    },
                                    "issuer_raw": {
                                        "title": "Issuer Raw",
                                        "description": "Raw contents of the certificate's issuer field.",
                                        "type": "string"
                                    },
                                    "fingerprint": {
                                        "title": "Fingerprint",
                                        "description": "MD5 fingerprint of the certificate.",
                                        "type": "string"
                                    },
                                    "version": {
                                        "title": "Version",
                                        "description": "Certificate version.",
                                        "type": "integer"
                                    },
                                    "is_ca": {
                                        "title": "Is CA",
                                        "description": "True when the certificate is a root certificate authority.",
                                        "type": "boolean"
                                    },
                                    "serial_number": {
                                        "title": "Serial Number",
                                        "description": "The serial number of the certificate.",
                                        "type": "string"
                                    },
                                    "q_path": {
                                        "title": "CMDB Path",
                                        "description": "The CMDB path the certificate entry belongs to.",
                                        "type": "string"
                                    },
                                    "q_name": {
                                        "title": "CMDB Name",
                                        "description": "The CMDB name the certificate entry belongs to.",
                                        "type": "string"
                                    },
                                    "q_ref": {
                                        "title": "References",
                                        "description": "The CMDB reference count for this certificate.",
                                        "type": "integer"
                                    },
                                    "q_static": {
                                        "title": "Static",
                                        "description": "True when the certificate is a static CMDB entry.",
                                        "type": "boolean"
                                    },
                                    "q_type": {
                                        "title": "Type",
                                        "description": "The CMDB entry type.",
                                        "type": "integer"
                                    },
                                    "ext": {
                                        "title": "Extensions",
                                        "description": "Additional certificate fields.",
                                        "type": "array",
                                        "items": {
                                            "title": "Extension Field",
                                            "description": "An extension field in this certificate.",
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "title": "Extension Name",
                                                    "description": "Name of the extension field.",
                                                    "type": "string"
                                                },
                                                "data": {
                                                    "title": "Extension Data",
                                                    "description": "Extension field data.",
                                                    "type": "string"
                                                },
                                                "critical": {
                                                    "title": "Critical",
                                                    "description": "True when the extension is designated as critical for the use of this certificate.",
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    },
                                    "acme_status": {
                                        "title": "ACME Status",
                                        "description": "Status of the ACME certificate job.",
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "title": "Name",
                                                "description": "Certificate domain name.",
                                                "type": "string"
                                            },
                                            "finished": {
                                                "title": "Finished",
                                                "description": "True if the job finished successfully.",
                                                "type": "boolean"
                                            },
                                            "notified": {
                                                "title": "Notified",
                                                "description": "True if notifications were handled successfully.",
                                                "type": "boolean"
                                            },
                                            "next-run": {
                                                "title": "Next Run",
                                                "description": "Time when this job will next be reprocessed, as a timestamp.",
                                                "type": "string"
                                            },
                                            "last-run": {
                                                "title": "Last Run",
                                                "description": "Timestamp of when this job last ran.",
                                                "type": "string"
                                            },
                                            "errors": {
                                                "title": "Errors",
                                                "description": "Number of erroneous runs of an unfinished job.",
                                                "type": "integer"
                                            },
                                            "error": {
                                                "title": "Error",
                                                "description": "ACME status error.",
                                                "type": "string"
                                            },
                                            "last": {
                                                "title": "Last Result",
                                                "description": "Result from last run.",
                                                "type": "object",
                                                "properties": {
                                                    "status": {
                                                        "title": "Status",
                                                        "description": "Status code of last run.",
                                                        "type": "integer"
                                                    },
                                                    "status-description": {
                                                        "title": "Status Description",
                                                        "description": "Status description of last run.",
                                                        "type": "string"
                                                    },
                                                    "problem": {
                                                        "title": "Problem",
                                                        "description": "Problem code for the last run.",
                                                        "type": "string"
                                                    },
                                                    "detail": {
                                                        "title": "Detail",
                                                        "description": "Details of the last run.",
                                                        "type": "string"
                                                    },
                                                    "activity": {
                                                        "title": "Activity",
                                                        "description": "Activity performed during the last run.",
                                                        "type": "string"
                                                    },
                                                    "valid-from": {
                                                        "title": "Valid From",
                                                        "description": "Timestamp of when the finished job results became valid.",
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "log": {
                                                "title": "Log",
                                                "description": "List of log entries from previous runs.",
                                                "type": "object",
                                                "properties": {
                                                    "entries": {
                                                        "title": "Entries",
                                                        "description": "List of log entries.",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "title": "Log Entry",
                                                            "description": "Log entry.",
                                                            "required": [
                                                                "when",
                                                                "type"
                                                            ],
                                                            "properties": {
                                                                "when": {
                                                                    "title": "When",
                                                                    "description": "Timestamp of when this log entry was made.",
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "title": "Type",
                                                                    "description": "Log entry type.",
                                                                    "type": "string"
                                                                },
                                                                "status": {
                                                                    "title": "Status",
                                                                    "description": "Problem code for the last run.",
                                                                    "type": "string"
                                                                },
                                                                "detail": {
                                                                    "title": "Detail",
                                                                    "description": "Details of the last run.",
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "valid-from": {
                                                "title": "Valid From",
                                                "description": "The time at which time the finished job results became valid.",
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/available-certificates.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Scope of certificate [vdom*|global].",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "with_remote",
                        "in": "query",
                        "description": "Include remote certificates.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "with_ca",
                        "in": "query",
                        "description": "Include certificate authorities.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "with_crl",
                        "in": "query",
                        "description": "Include certificate revocation lists.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Check if specific certificate is available.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "find_all_references",
                        "in": "query",
                        "description": "Include reference counts across all VDOMs when scope is global.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/acme-certificate-status": {
            "get": {
                "summary": "Get ACME certificate status.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "ACME Certificate Status",
                            "description": "Check the status of an ACME Certificate.",
                            "type": "object",
                            "required": [
                                "is_ssl_server_cert",
                                "acme_status"
                            ],
                            "properties": {
                                "is_ssl_server_cert": {
                                    "title": "Is SSL Server Cert",
                                    "description": "True when the purpose of this certificate is for use in an SSL server.",
                                    "type": "boolean"
                                },
                                "acme_status": {
                                    "title": "ACME Status",
                                    "description": "Status of the ACME certificate job.",
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "title": "Name",
                                            "description": "Certificate domain name.",
                                            "type": "string"
                                        },
                                        "finished": {
                                            "title": "Finished",
                                            "description": "True if the job finished successfully.",
                                            "type": "boolean"
                                        },
                                        "notified": {
                                            "title": "Notified",
                                            "description": "True if notifications were handled successfully.",
                                            "type": "boolean"
                                        },
                                        "next-run": {
                                            "title": "Next Run",
                                            "description": "Time when this job will next be reprocessed, as a timestamp.",
                                            "type": "string"
                                        },
                                        "last-run": {
                                            "title": "Last Run",
                                            "description": "Timestamp of when this job last ran.",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "title": "Errors",
                                            "description": "Number of erroneous runs of an unfinished job.",
                                            "type": "integer"
                                        },
                                        "error": {
                                            "title": "Error",
                                            "description": "ACME status error.",
                                            "type": "string"
                                        },
                                        "last": {
                                            "title": "Last Result",
                                            "description": "Result from last run.",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "title": "Status",
                                                    "description": "Status code of last run.",
                                                    "type": "integer"
                                                },
                                                "status-description": {
                                                    "title": "Status Description",
                                                    "description": "Status description of last run.",
                                                    "type": "string"
                                                },
                                                "problem": {
                                                    "title": "Problem",
                                                    "description": "Problem code for the last run.",
                                                    "type": "string"
                                                },
                                                "detail": {
                                                    "title": "Detail",
                                                    "description": "Details of the last run.",
                                                    "type": "string"
                                                },
                                                "activity": {
                                                    "title": "Activity",
                                                    "description": "Activity performed during the last run.",
                                                    "type": "string"
                                                },
                                                "valid-from": {
                                                    "title": "Valid From",
                                                    "description": "Timestamp of when the finished job results became valid.",
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "log": {
                                            "title": "Log",
                                            "description": "List of log entries from previous runs.",
                                            "type": "object",
                                            "properties": {
                                                "entries": {
                                                    "title": "Entries",
                                                    "description": "List of log entries.",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "title": "Log Entry",
                                                        "description": "Log entry.",
                                                        "required": [
                                                            "when",
                                                            "type"
                                                        ],
                                                        "properties": {
                                                            "when": {
                                                                "title": "When",
                                                                "description": "Timestamp of when this log entry was made.",
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "title": "Type",
                                                                "description": "Log entry type.",
                                                                "type": "string"
                                                            },
                                                            "status": {
                                                                "title": "Status",
                                                                "description": "Problem code for the last run.",
                                                                "type": "string"
                                                            },
                                                            "detail": {
                                                                "title": "Detail",
                                                                "description": "Details of the last run.",
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "valid-from": {
                                            "title": "Valid From",
                                            "description": "Timestamp of when the finished job results became valid.",
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/acme-certificate-status.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Check if specific certificate is available.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Scope of certificate [vdom*|global].",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/trusted-cert-authorities": {
            "get": {
                "summary": "Get trusted certifiate authorities.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Trusted CA SSL Certificates",
                            "description": "A list of trusted certificate authorities.",
                            "type": "array",
                            "items": {
                                "title": "Trusted CA SSL Certificate",
                                "description": "A trusted certificate authority's SSL certificate.",
                                "type": "object",
                                "required": [
                                    "name",
                                    "source",
                                    "type",
                                    "status",
                                    "version"
                                ],
                                "properties": {
                                    "name": {
                                        "title": "Certificate Name",
                                        "description": "Name of the certificate.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "title": "Certificate Status",
                                        "description": "Status of the certificate.",
                                        "type": "string",
                                        "enum": [
                                            "valid",
                                            "invalid",
                                            "expired",
                                            "pending",
                                            "unknown"
                                        ]
                                    },
                                    "source": {
                                        "title": "Certificate Source",
                                        "description": "Origin of the certificate.",
                                        "type": "string",
                                        "enum": [
                                            "user",
                                            "factory",
                                            "bundle"
                                        ]
                                    },
                                    "comments": {
                                        "title": "Comments",
                                        "description": "User comments on the certificate.",
                                        "type": "string"
                                    },
                                    "range": {
                                        "title": "Range",
                                        "description": "VDOM scope of the certificate.",
                                        "type": "string",
                                        "enum": [
                                            "global",
                                            "vdom"
                                        ]
                                    },
                                    "exists": {
                                        "title": "Exists",
                                        "description": "True when the certificate file exists.",
                                        "type": "boolean"
                                    },
                                    "is_ssl_server_cert": {
                                        "title": "Is SSL Server Cert",
                                        "description": "True when the purpose of this certificate is for use in an SSL server.",
                                        "type": "boolean"
                                    },
                                    "is_proxy_ssl_cert": {
                                        "title": "Is Proxy SSL Cert",
                                        "description": "True when the certificate is used as an SSL proxy certificate.",
                                        "type": "boolean"
                                    },
                                    "is_general_allowable_cert": {
                                        "title": "Is General Allowable Certificate",
                                        "description": "True when the certificate is generally allowable.",
                                        "type": "boolean"
                                    },
                                    "is_default_local": {
                                        "title": "Is Default Local",
                                        "description": "True when the certificate is one of the default local certificates.",
                                        "type": "boolean"
                                    },
                                    "is_built_in": {
                                        "title": "Is Built In",
                                        "description": "True when the certificate is built in.",
                                        "type": "boolean"
                                    },
                                    "is_wifi_cert": {
                                        "title": "Is WiFi Certificate",
                                        "description": "True when the certificate is a WiFi only certificate.",
                                        "type": "boolean"
                                    },
                                    "is_deep_inspection_cert": {
                                        "title": "Is Deep Inspection Certificate",
                                        "description": "True when the certificate is available for deep inspections.",
                                        "type": "boolean"
                                    },
                                    "trusted": {
                                        "title": "Certificate Authority Trusted",
                                        "description": "True when the certificate authority is trusted.",
                                        "type": "boolean"
                                    },
                                    "has_valid_cert_key": {
                                        "title": "Has Valid Certificate Key",
                                        "description": "True when the certificate has a valid key.",
                                        "type": "boolean"
                                    },
                                    "key_type": {
                                        "title": "Key Type",
                                        "description": "The type of key for the certificate.",
                                        "type": "string",
                                        "enum": [
                                            "RSA",
                                            "DSA",
                                            "ECDSA",
                                            ""
                                        ]
                                    },
                                    "key_size": {
                                        "title": "Key Size",
                                        "description": "The size of the key for the certificate.",
                                        "type": "integer"
                                    },
                                    "is_local_ca_cert": {
                                        "title": "Is Local Certificate CA",
                                        "description": "True when the local certificate is a CA certificate.",
                                        "type": "boolean"
                                    },
                                    "type": {
                                        "title": "Certificate Type",
                                        "description": "The type of certificate.",
                                        "type": "string",
                                        "enum": [
                                            "local-ca",
                                            "local-cer",
                                            "local-csr",
                                            "remote-cer",
                                            "remote-ca",
                                            "crl"
                                        ]
                                    },
                                    "valid_from": {
                                        "title": "Valid From",
                                        "description": "Timestamp of the validity start date, in seconds.",
                                        "type": "integer"
                                    },
                                    "valid_to": {
                                        "title": "Valid To",
                                        "description": "Timestamp of the validity end date, in seconds.",
                                        "type": "integer"
                                    },
                                    "valid_from_raw": {
                                        "title": "Valid From Raw",
                                        "description": "Raw validity start date string from the certificate contents.",
                                        "type": "string"
                                    },
                                    "valid_to_raw": {
                                        "title": "Valid to Raw",
                                        "description": "Raw validity end date string from the certificate contents.",
                                        "type": "string"
                                    },
                                    "signature_algorithm": {
                                        "title": "Signature Algorithm",
                                        "description": "Hashing algorithm used for the signature.",
                                        "type": "string"
                                    },
                                    "subject": {
                                        "title": "Subject",
                                        "description": "Parsed certificate subject field.",
                                        "type": "object",
                                        "properties": {
                                            "C": {
                                                "title": "Country",
                                                "description": "Subject country.",
                                                "type": "string"
                                            },
                                            "ST": {
                                                "title": "State",
                                                "description": "Subject state.",
                                                "type": "string"
                                            },
                                            "L": {
                                                "title": "Locality",
                                                "description": "Subject locality.",
                                                "type": "string"
                                            },
                                            "O": {
                                                "title": "Organization",
                                                "description": "Subject organization.",
                                                "type": "string"
                                            },
                                            "OU": {
                                                "title": "Organizational Unit",
                                                "description": "Subject organizational unit.",
                                                "type": "string"
                                            },
                                            "CN": {
                                                "title": "Common Name",
                                                "description": "Subject common name.",
                                                "type": "string"
                                            }
                                        },
                                        "additionalProperties": {
                                            "title": "Other Subject Properties",
                                            "description": "Additional subject properties from the subject field.",
                                            "type": "string"
                                        }
                                    },
                                    "subject_raw": {
                                        "title": "Subject Raw",
                                        "description": "Raw subject string from the certificate data.",
                                        "type": "string"
                                    },
                                    "issuer": {
                                        "title": "Issuer",
                                        "description": "Parsed certificate issuer field.",
                                        "type": "object",
                                        "properties": {
                                            "C": {
                                                "title": "Country",
                                                "description": "Issuer country.",
                                                "type": "string"
                                            },
                                            "ST": {
                                                "title": "State",
                                                "description": "Issuer state.",
                                                "type": "string"
                                            },
                                            "L": {
                                                "title": "Locality",
                                                "description": "Issuer locality.",
                                                "type": "string"
                                            },
                                            "O": {
                                                "title": "Organization",
                                                "description": "Issuer organization.",
                                                "type": "string"
                                            },
                                            "OU": {
                                                "title": "Organizational Unit",
                                                "description": "Issuer organizational unit.",
                                                "type": "string"
                                            },
                                            "CN": {
                                                "title": "Common Name",
                                                "description": "Issuer common name.",
                                                "type": "string"
                                            }
                                        },
                                        "additionalProperties": {
                                            "title": "Other Issuer Properties",
                                            "description": "Additional attributes from the certificate's issuer field.",
                                            "type": "string"
                                        }
                                    },
                                    "issuer_raw": {
                                        "title": "Issuer Raw",
                                        "description": "Raw contents of the certificate's issuer field.",
                                        "type": "string"
                                    },
                                    "fingerprint": {
                                        "title": "Fingerprint",
                                        "description": "MD5 fingerprint of the certificate.",
                                        "type": "string"
                                    },
                                    "version": {
                                        "title": "Version",
                                        "description": "Certificate version.",
                                        "type": "integer"
                                    },
                                    "is_ca": {
                                        "title": "Is CA",
                                        "description": "True when the certificate is a root certificate authority.",
                                        "type": "boolean"
                                    },
                                    "serial_number": {
                                        "title": "Serial Number",
                                        "description": "The serial number of the certificate.",
                                        "type": "string"
                                    },
                                    "q_path": {
                                        "title": "CMDB Path",
                                        "description": "The CMDB path the certificate entry belongs to.",
                                        "type": "string"
                                    },
                                    "q_name": {
                                        "title": "CMDB Name",
                                        "description": "The CMDB name the certificate entry belongs to.",
                                        "type": "string"
                                    },
                                    "q_ref": {
                                        "title": "References",
                                        "description": "The CMDB reference count for this certificate.",
                                        "type": "integer"
                                    },
                                    "q_static": {
                                        "title": "Static",
                                        "description": "True when the certificate is a static CMDB entry.",
                                        "type": "boolean"
                                    },
                                    "q_type": {
                                        "title": "Type",
                                        "description": "The CMDB entry type.",
                                        "type": "integer"
                                    },
                                    "ext": {
                                        "title": "Extensions",
                                        "description": "Additional certificate fields.",
                                        "type": "array",
                                        "items": {
                                            "title": "Extension",
                                            "description": "An extension field in this certificate.",
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "title": "Extension Name",
                                                    "description": "Name of the extension field.",
                                                    "type": "string"
                                                },
                                                "data": {
                                                    "title": "Extension Data",
                                                    "description": "Extension field data.",
                                                    "type": "string"
                                                },
                                                "critical": {
                                                    "title": "Critical",
                                                    "description": "True when the extension is designated as critical for the use of this certificate.",
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/trusted-cert-authorities.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Scope of certificate [vdom*|global].",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/certificate\/download": {
            "get": {
                "summary": "Download certificate.\nAccess Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Name of certificate.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of certificate [local-cer|remote-cer|local-ca|remote-ca|local-csr|crl].",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Scope of certificate [vdom*|global].",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/certificate\/read-info": {
            "post": {
                "summary": "Get certificate information from a certificate string.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Certificate",
                            "description": "Details of the certificate.",
                            "type": "object",
                            "required": [
                                "issuer",
                                "fingerprint",
                                "status",
                                "serial_number"
                            ],
                            "properties": {
                                "status": {
                                    "title": "Certificate Status",
                                    "description": "Status of the certificate.",
                                    "type": "string",
                                    "enum": [
                                        "valid",
                                        "invalid",
                                        "expired",
                                        "pending",
                                        "unknown"
                                    ]
                                },
                                "valid_from": {
                                    "title": "Valid From",
                                    "description": "Timestamp of the validity start date, in seconds.",
                                    "type": "integer"
                                },
                                "valid_to": {
                                    "title": "Valid To",
                                    "description": "Timestamp of the validity end date, in seconds.",
                                    "type": "integer"
                                },
                                "valid_from_raw": {
                                    "title": "Valid From Raw",
                                    "description": "Raw validity start date string from the certificate data.",
                                    "type": "string"
                                },
                                "valid_to_raw": {
                                    "title": "Valid to Raw",
                                    "description": "Raw validity end date string from the certificate data.",
                                    "type": "string"
                                },
                                "signature_algorithm": {
                                    "title": "Signature Algorithm",
                                    "description": "Hashing algorithm used for the signature.",
                                    "type": "string"
                                },
                                "subject": {
                                    "title": "Subject",
                                    "description": "Parsed certificate subject string.",
                                    "type": "object",
                                    "properties": {
                                        "C": {
                                            "title": "Country",
                                            "description": "Subject country.",
                                            "type": "string"
                                        },
                                        "ST": {
                                            "title": "State",
                                            "description": "Subject state.",
                                            "type": "string"
                                        },
                                        "L": {
                                            "title": "Locality",
                                            "description": "Subject locality.",
                                            "type": "string"
                                        },
                                        "O": {
                                            "title": "Organization",
                                            "description": "Subject organization.",
                                            "type": "string"
                                        },
                                        "OU": {
                                            "title": "Organizational Unit",
                                            "description": "Subject organizational unit.",
                                            "type": "string"
                                        },
                                        "CN": {
                                            "title": "Common Name",
                                            "description": "Subject common name.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": {
                                        "title": "Other Subject Properties",
                                        "description": "Additional attributes from the certificate's subject field.",
                                        "type": "string"
                                    }
                                },
                                "subject_raw": {
                                    "title": "Subject Raw",
                                    "description": "Raw subject string from certificate data.",
                                    "type": "string"
                                },
                                "issuer": {
                                    "title": "Issuer",
                                    "description": "Parsed certificate issuer string.",
                                    "type": "object",
                                    "properties": {
                                        "C": {
                                            "title": "Country",
                                            "description": "Issuer country.",
                                            "type": "string"
                                        },
                                        "ST": {
                                            "title": "State",
                                            "description": "Issuer state.",
                                            "type": "string"
                                        },
                                        "L": {
                                            "title": "Locality",
                                            "description": "Issuer locality.",
                                            "type": "string"
                                        },
                                        "O": {
                                            "title": "Organization",
                                            "description": "Issuer organization.",
                                            "type": "string"
                                        },
                                        "OU": {
                                            "title": "Organizational Unit",
                                            "description": "Issuer organizational unit.",
                                            "type": "string"
                                        },
                                        "CN": {
                                            "title": "Common Name",
                                            "description": "Issuer common name.",
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": {
                                        "title": "Other Issuer Properties",
                                        "description": "Additional attributes from the certificate's issuer field.",
                                        "type": "string"
                                    }
                                },
                                "issuer_raw": {
                                    "title": "Issuer Raw",
                                    "description": "Raw issuer string from the certificate data.",
                                    "type": "string"
                                },
                                "fingerprint": {
                                    "title": "Fingerprint",
                                    "description": "MD5 fingerprint of the certificate.",
                                    "type": "string"
                                },
                                "version": {
                                    "title": "Version",
                                    "description": "Certificate version.",
                                    "type": "integer"
                                },
                                "is_ca": {
                                    "title": "Is CA",
                                    "description": "True when the certificate is a root certificate authority.",
                                    "type": "boolean"
                                },
                                "serial_number": {
                                    "title": "Serial Number",
                                    "description": "The serial number of the certificate.",
                                    "type": "string"
                                },
                                "ext": {
                                    "title": "Extensions",
                                    "description": "Additional certificate fields.",
                                    "type": "array",
                                    "items": {
                                        "title": "Extension Field",
                                        "description": "An extension field in this certificate.",
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "title": "Extension Name",
                                                "description": "Name of the extension field.",
                                                "type": "string"
                                            },
                                            "data": {
                                                "title": "Extension Data",
                                                "description": "Extension field data.",
                                                "type": "string"
                                            },
                                            "critical": {
                                                "title": "Critical",
                                                "description": "True when the extension is critical (has a higher priority).",
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/certificate.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "value": {
                                    "description": "PEM formatted certificate.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/debug\/download": {
            "get": {
                "summary": "Download debug report for technical support.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/com-log\/dump": {
            "post": {
                "summary": "Dump system com-log to file.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/com-log\/update": {
            "get": {
                "summary": "Fetch system com-log file dump progress.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/com-log\/download": {
            "get": {
                "summary": "Download com-log file (after file dump is complete).\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/config-error-log\/download": {
            "get": {
                "summary": "Download the error log of the configuration management database.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/crash-log\/download": {
            "get": {
                "summary": "Download system crash log.\nAccess Group: sysgrp.mnt",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/crash-log\/clear": {
            "post": {
                "summary": "Clear system crash log.\nAccess Group: sysgrp.mnt",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/botnet\/stat": {
            "get": {
                "summary": "Retrieve statistics for FortiGuard botnet database.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/botnet": {
            "get": {
                "summary": "List all known IP-based botnet entries in FortiGuard botnet database.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Botnet Entries",
                            "description": "List all known IP-based botnet entries in FortiGuard botnet database.",
                            "type": "array",
                            "items": {
                                "title": "Botnet Entry",
                                "description": "Detailed description of a botnet entry.",
                                "type": "object",
                                "required": [
                                    "bot_name",
                                    "ip",
                                    "protocol",
                                    "port",
                                    "start_port",
                                    "end_port",
                                    "hit_count"
                                ],
                                "properties": {
                                    "bot_name": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "title": "Botnet Name",
                                                "description": "Botnet name."
                                            },
                                            {
                                                "type": "integer",
                                                "title": "Botnet Name",
                                                "description": "Botnet name."
                                            }
                                        ]
                                    },
                                    "ip": {
                                        "type": "string",
                                        "title": "IP Address",
                                        "description": "IP address."
                                    },
                                    "protocol": {
                                        "type": "string",
                                        "title": "Protocol",
                                        "description": "Protocol.",
                                        "enum": [
                                            "tcp",
                                            "udp"
                                        ]
                                    },
                                    "port": {
                                        "type": "integer",
                                        "title": "Start Port",
                                        "description": "Start port.",
                                        "deprecated": true,
                                        "x-scheduledRemoval": {
                                            "major": 7,
                                            "minor": 2
                                        }
                                    },
                                    "start_port": {
                                        "type": "integer",
                                        "title": "Start Port",
                                        "description": "Start port."
                                    },
                                    "end_port": {
                                        "type": "integer",
                                        "title": "End Port",
                                        "description": "End port."
                                    },
                                    "hit_count": {
                                        "type": "integer",
                                        "title": "Hit Count",
                                        "description": "Hit count."
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/botnet.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Starting entry index.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of entries to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "include_hit_only",
                        "in": "query",
                        "description": "Include entries with hits only.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/botnet-domains": {
            "get": {
                "summary": "List all known domain-based botnet entries in FortiGuard botnet database.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Starting entry index.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of entries to return.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/botnet-domains\/stat": {
            "get": {
                "summary": "List statistics on domain-based botnet entries in FortiGuard botnet database.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/botnet-domains\/hits": {
            "get": {
                "summary": "List hit botnet domains with hit count > 0.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/ha-statistics": {
            "get": {
                "summary": "List of statistics for members of HA cluster.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "HA Statistics Query",
                            "description": "Retrieve a list of statistics for members of the FortiGate's HA cluster.",
                            "type": "array",
                            "items": {
                                "title": "HA Statistics Entry",
                                "description": "HA statistics for an HA cluster member.",
                                "type": "object",
                                "required": [
                                    "hostname",
                                    "serial_no",
                                    "tnow",
                                    "sessions",
                                    "tpacket",
                                    "vir_usage",
                                    "net_usage",
                                    "tbyte",
                                    "intr_usage"
                                ],
                                "properties": {
                                    "hostname": {
                                        "title": "Host Name",
                                        "description": "Name of the HA member device.",
                                        "type": "string"
                                    },
                                    "serial_no": {
                                        "title": "Serial Number",
                                        "description": "Serial number of the HA member device.",
                                        "type": "string"
                                    },
                                    "tnow": {
                                        "title": "Uptime",
                                        "description": "Amount of time the HA member device has been operating.",
                                        "type": "integer"
                                    },
                                    "sessions": {
                                        "title": "Sessions",
                                        "description": "Number of sessions in the HA member device.",
                                        "type": "integer"
                                    },
                                    "tpacket": {
                                        "title": "Packets",
                                        "description": "Total packets handled by the HA member device.",
                                        "type": "integer"
                                    },
                                    "vir_usage": {
                                        "title": "AV Events",
                                        "description": "Number of antivirus events handled by the HA member device.",
                                        "type": "integer"
                                    },
                                    "net_usage": {
                                        "title": "Throughput",
                                        "description": "The network utilization of the HA member device.",
                                        "type": "integer"
                                    },
                                    "tbyte": {
                                        "title": "Bytes",
                                        "description": "Total bytes handled by the HA member device.",
                                        "type": "integer"
                                    },
                                    "intr_usage": {
                                        "title": "IPS Events",
                                        "description": "Total number of IPS events handled by the HA member device.",
                                        "type": "integer"
                                    },
                                    "cpu_usage": {
                                        "title": "CPU Usage",
                                        "description": "Current CPU usage in the HA member device.",
                                        "type": "integer"
                                    },
                                    "mem_usage": {
                                        "title": "RAM Usage",
                                        "description": "Total on-board memory usage in the HA member device.",
                                        "type": "integer"
                                    },
                                    "uptime": {
                                        "title": "Uptime",
                                        "description": "Amount of time HA has been operating on the member device.",
                                        "type": "integer"
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/ha-statistics.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/ha-history": {
            "get": {
                "summary": "Get HA cluster historical logs.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/ha-checksums": {
            "get": {
                "summary": "List of checksums for members of HA cluster.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "HA Checksums Query",
                            "description": "Retrieve a list of checksums for members of the FortiGate's HA cluster.",
                            "type": "array",
                            "items": {
                                "title": "HA Checksums Entry",
                                "description": "An HA checksum for an HA cluster member.",
                                "type": "object",
                                "required": [
                                    "is_manage_master",
                                    "is_root_master",
                                    "checksum"
                                ],
                                "properties": {
                                    "is_manage_master": {
                                        "title": "HA Manage Primary",
                                        "description": "1 when this member is the HA manage primary, otherwise 0.",
                                        "type": "integer"
                                    },
                                    "is_root_master": {
                                        "title": "HA Root Primary",
                                        "description": "1 when this member is the HA root primary, otherwise 0.",
                                        "type": "integer"
                                    },
                                    "serial_no": {
                                        "title": "Serial Number",
                                        "description": "HA member's serial number.",
                                        "type": "string"
                                    },
                                    "checksum": {
                                        "title": "Checksum",
                                        "description": "HA member's checksum information.",
                                        "type": "object",
                                        "required": [
                                            "global",
                                            "root",
                                            "all",
                                            "vdoms"
                                        ],
                                        "properties": {
                                            "global": {
                                                "title": "Global Checksum",
                                                "description": "Checksum for the global scope.",
                                                "type": "string"
                                            },
                                            "root": {
                                                "title": "Root VDOM Checksum",
                                                "description": "Checksum for the root VDOM.",
                                                "type": "string"
                                            },
                                            "all": {
                                                "title": "Overall Checksum",
                                                "description": "Checksum for the whole device.",
                                                "type": "string"
                                            },
                                            "vdoms": {
                                                "title": "VDOMs",
                                                "description": "Checksums for this member's VDOMs.",
                                                "type": "object",
                                                "required": [
                                                    "root"
                                                ],
                                                "properties": {
                                                    "root": {
                                                        "title": "Root VDOM Checksum",
                                                        "description": "Checksum for the root VDOM.",
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": {
                                                    "title": "Other VDOM Checksum",
                                                    "description": "Checksum for a VDOM other than the root.",
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/ha-checksums.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/ha-table-checksums": {
            "get": {
                "summary": "List of table checksums for members of HA cluster.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "HA Table Checksums Query",
                            "description": "Retrieve a list of table checksums for members of the FortiGate's HA cluster.",
                            "type": "object",
                            "required": [
                                "serial_no",
                                "tables"
                            ],
                            "properties": {
                                "serial_no": {
                                    "title": "Serial Number",
                                    "description": "HA member's serial number.",
                                    "type": "string"
                                },
                                "tables": {
                                    "title": "Table Checksums",
                                    "description": "List of table checksums for the given FortiGate's VDOM.",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string",
                                        "title": "Table Checksum",
                                        "description": "Checksum for this table."
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/ha-table-checksums.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Serial number of the HA member.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vdom_name",
                        "in": "query",
                        "description": "VDOM name of the HA member. If not specified, fetch table checksums for global.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/ha-peer": {
            "get": {
                "summary": "Get configuration of peer(s) in HA cluster. Uptime is expressed in seconds.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "HA Peers Query",
                            "description": "Retrieve the configuration of peers for the specified member(s) of the FortiGate's HA cluster.",
                            "type": "array",
                            "items": {
                                "title": "HA Peer",
                                "description": "The configuration of an HA peer.",
                                "type": "object",
                                "required": [
                                    "serial_no",
                                    "vcluster_id",
                                    "priority",
                                    "hostname"
                                ],
                                "properties": {
                                    "serial_no": {
                                        "title": "Serial Number",
                                        "description": "Serial number of the HA peer device.",
                                        "type": "string"
                                    },
                                    "vcluster_id": {
                                        "title": "Virtual Cluster ID",
                                        "description": "ID number of the virtual cluster of the HA peer device.",
                                        "type": "integer"
                                    },
                                    "priority": {
                                        "title": "Priority",
                                        "description": "Priority level of the HA peer device.",
                                        "type": "integer"
                                    },
                                    "hostname": {
                                        "title": "Host Name",
                                        "description": "Host name of the HA peer device.",
                                        "type": "string"
                                    },
                                    "master": {
                                        "title": "Is Primary",
                                        "description": "True when the peer device is the HA primary.",
                                        "type": "boolean"
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/ha-peer.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Serial number of the HA member. If not specified, fetch information for all HA members",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "vcluster_id",
                        "in": "query",
                        "description": "Virtual cluster number. If not specified, fetch information for all active vclusters",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/ha-peer\/update": {
            "post": {
                "summary": "Update configuration of peer in HA cluster.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "serial_no": {
                                    "description": "Serial number of the HA member.",
                                    "type": "string"
                                },
                                "vcluster_id": {
                                    "description": "Virtual cluster number.",
                                    "type": "integer"
                                },
                                "priority": {
                                    "description": "Priority to assign to HA member.",
                                    "type": "integer"
                                },
                                "hostname": {
                                    "description": "Name to assign the HA member.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/ha-peer\/disconnect": {
            "post": {
                "summary": "Update configuration of peer in HA cluster.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "serial_no": {
                                    "description": "Serial number of the HA member.",
                                    "type": "string"
                                },
                                "interface": {
                                    "description": "Name of the interface which should be assigned for management.",
                                    "type": "string"
                                },
                                "ip": {
                                    "description": "IP to assign to the selected interface.",
                                    "type": "string"
                                },
                                "mask": {
                                    "description": "Full network mask to assign to the selected interface.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/link-monitor": {
            "get": {
                "summary": "Retrieve per-interface statistics for active link monitors.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Name of link monitor.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/config\/restore": {
            "post": {
                "summary": "Restore system configuration from uploaded file or from USB.\nAccess Group: sysgrp.mnt",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Restore Configuration",
                            "description": "Restore configuration.",
                            "type": "object",
                            "required": [
                                "restore_started"
                            ],
                            "properties": {
                                "restore_started": {
                                    "title": "Restore Started",
                                    "description": "True if the restoration of the configuration has started.",
                                    "type": "boolean"
                                },
                                "error": {
                                    "title": "Error",
                                    "description": "Error message.",
                                    "type": "string"
                                },
                                "session_id": {
                                    "title": "Session ID",
                                    "description": "Session ID for the session to restore the configuration.",
                                    "type": "string"
                                },
                                "config_restored": {
                                    "title": "Config Restored",
                                    "description": "True if the restoration of the configuration has started. Deprecated. It's kept for backward compatibility.",
                                    "type": "boolean"
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/config.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "source": {
                                    "description": "Configuration file data source [upload | usb | revision].",
                                    "type": "string"
                                },
                                "usb_filename": {
                                    "description": "When using 'usb' source: the filename to restore from the connected USB device.",
                                    "type": "string"
                                },
                                "config_id": {
                                    "description": "When using 'revision' source: valid ID of configuration stored on disk to revert to. ",
                                    "type": "integer"
                                },
                                "password": {
                                    "description": "Password to decrypt configuration data.",
                                    "type": "string"
                                },
                                "scope": {
                                    "description": "Specify global or VDOM only restore [global | vdom].",
                                    "type": "string"
                                },
                                "vdom": {
                                    "description": "If 'vdom' scope specified, the name of the VDOM to restore configuration.",
                                    "type": "string"
                                },
                                "file_content": {
                                    "description": "Provided when uploading a file: base64 encoded file data. Must not contain whitespace or other invalid base64 characters. Must be included in HTTP body.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/config\/restore-status": {
            "get": {
                "summary": "Check the status of the restoring system configuration session.\nAccess Group: sysgrp.mnt",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Configuration Restoration Status",
                            "description": "Status of the session to restore the configuration.",
                            "type": "object",
                            "properties": {
                                "success": {
                                    "title": "Configuration Restoration Success",
                                    "description": "True if restoration of the configuration was successful.",
                                    "type": "boolean"
                                },
                                "session_file_not_found": {
                                    "title": "Session File Not Found",
                                    "description": "True if the session file is not found.",
                                    "type": "boolean"
                                },
                                "in_progress": {
                                    "title": "Configuration Restoration in Progress",
                                    "description": "True if the configuration is being restored.",
                                    "type": "boolean"
                                },
                                "error": {
                                    "title": "Configuration Restoration Error Code",
                                    "description": "The error code for the restoration of the configuration.",
                                    "type": "integer"
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/config.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Session ID for restoring configuration.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/config\/backup": {
            "post": {
                "summary": "Backup system config\nAccess Group: sysgrp.mnt",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "destination": {
                                    "description": "Configuration file destination [file* | usb]",
                                    "type": "string"
                                },
                                "usb_filename": {
                                    "description": "When using 'usb' destination: the filename to save to on the connected USB device",
                                    "type": "string"
                                },
                                "password": {
                                    "description": "Password to encrypt configuration data.",
                                    "type": "string"
                                },
                                "scope": {
                                    "description": "Specify global or VDOM only backup [global | vdom].",
                                    "type": "string"
                                },
                                "vdom": {
                                    "description": "If 'vdom' scope specified, the name of the VDOM to backup configuration.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/config\/usb-filelist": {
            "get": {
                "summary": "List configuration files available on connected USB drive.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/running-processes": {
            "get": {
                "summary": "List of running processes and their resource usage.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "System Processes Status",
                            "description": "Retrieve status of running processes.",
                            "type": "array",
                            "items": {
                                "title": "Process Status",
                                "description": "Status information about the process.",
                                "type": "object",
                                "properties": {
                                    "pid": {
                                        "title": "Process ID",
                                        "description": "ID of the running process.",
                                        "type": "integer"
                                    },
                                    "command": {
                                        "title": "Command",
                                        "description": "Filename of the executable.",
                                        "type": "string"
                                    },
                                    "state": {
                                        "title": "State",
                                        "description": "Process state.",
                                        "type": "string",
                                        "enum": [
                                            "running",
                                            "sleeping",
                                            "stopped",
                                            "zombie",
                                            "other"
                                        ]
                                    },
                                    "priority": {
                                        "title": "Priority",
                                        "description": "Process scheduling priority.",
                                        "type": "string",
                                        "enum": [
                                            "high",
                                            "normal",
                                            "low"
                                        ]
                                    },
                                    "memory": {
                                        "title": "Virtual Memory Resident Set Size",
                                        "description": "Memory size currently resident in RAM, in bytes.",
                                        "type": "integer"
                                    },
                                    "pss": {
                                        "title": "Virtual Memory Proportional Set Size",
                                        "description": "Private + shared weight memory size, in bytes.",
                                        "type": "integer"
                                    },
                                    "cpu": {
                                        "title": "CPU Time Allocation",
                                        "description": "Time spent in user mode and in kernel mode.",
                                        "type": "object",
                                        "properties": {
                                            "user": {
                                                "title": "User Mode",
                                                "description": "Amount of time spent in user mode, in clock ticks.",
                                                "type": "integer"
                                            },
                                            "kernel": {
                                                "title": "Kernel Mode",
                                                "description": "Amount of time spent in kernel mode, in clock ticks.",
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/running-processes.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/sandbox\/cloud-regions": {
            "get": {
                "summary": "Retrieve a list of FortiSandbox cloud regions.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/sandbox\/stats": {
            "get": {
                "summary": "Retrieve sandbox statistics.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/sandbox\/status": {
            "get": {
                "summary": "Retrieve sandbox status.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiSandbox Status",
                            "description": "Information on the configured FortiSandbox.",
                            "type": "object",
                            "required": [
                                "configured",
                                "type",
                                "cloud_region",
                                "malware_package_version",
                                "signatures_loaded",
                                "signatures_count"
                            ],
                            "properties": {
                                "configured": {
                                    "type": "boolean",
                                    "title": "Configured",
                                    "description": "True when a FortiSandbox is configured. This can be an on-premise appliance or FortiGate Cloud Sandbox."
                                },
                                "type": {
                                    "type": "string",
                                    "title": "Type",
                                    "enum": [
                                        "cloud",
                                        "appliance"
                                    ],
                                    "description": "The type of FortiSandbox that is configured."
                                },
                                "cloud_region": {
                                    "type": "string",
                                    "title": "Region",
                                    "description": "The region being used for FortiGate Cloud Sandbox."
                                },
                                "server": {
                                    "type": "string",
                                    "title": "Server",
                                    "description": "The IP address of the FortiSandbox appliance."
                                },
                                "malware_package_version": {
                                    "type": "string",
                                    "title": "Malware Package Version",
                                    "description": "The malware package version being used on the FortiSandbox."
                                },
                                "signatures_loaded": {
                                    "type": "boolean",
                                    "title": "Signatures Loaded",
                                    "description": "True when the signatures have been loaded on the FortiSandbox."
                                },
                                "signatures_count": {
                                    "type": "integer",
                                    "title": "Signature Count",
                                    "description": "The number of signatures that have been loaded on the FortiSandbox."
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/sandbox.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/sandbox\/connection": {
            "get": {
                "summary": "Test the connection to FortiSandbox.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiSandbox Connection Status",
                            "description": "Retrieve the connection status to a FortiSandbox.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "title": "Status",
                                    "enum": [
                                        "reachable",
                                        "unreachable",
                                        "disabled"
                                    ],
                                    "description": "Status of the FortiSandbox connection."
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/sandbox.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "server",
                        "in": "query",
                        "description": "IP\/FQDN of the FortiSandbox to test. Uses the configured FortiSandbox IP\/FQDN if no server is provided.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/object\/usage": {
            "get": {
                "summary": "Retrieve all objects that are currently using as well as objects that can use the given object.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "q_path",
                        "in": "query",
                        "description": "The CMDB table's path",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "q_name",
                        "in": "query",
                        "description": "The CMDB table's name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "qtypes",
                        "in": "query",
                        "description": "List of CMDB table qTypes",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Scope of resource [vdom|global].",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "The mkey for the object",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/status": {
            "get": {
                "summary": "Retrieve basic system status.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "System Status",
                            "description": "Retrieve system status.",
                            "type": "object",
                            "properties": {
                                "model_name": {
                                    "title": "Product Name",
                                    "description": "The product family name.",
                                    "type": "string"
                                },
                                "model_number": {
                                    "title": "Model Number",
                                    "description": "The product model number.",
                                    "type": "string"
                                },
                                "model": {
                                    "title": "Model",
                                    "description": "The model abbreviation.",
                                    "type": "string"
                                },
                                "hostname": {
                                    "title": "Hostname",
                                    "description": "The system hostname.",
                                    "type": "string"
                                },
                                "log_disk_status": {
                                    "title": "Log Disk Status",
                                    "description": "Status of the log disk.",
                                    "type": "string",
                                    "enum": [
                                        "available",
                                        "need_format",
                                        "not_available"
                                    ]
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/status.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/timezone": {
            "get": {
                "summary": "Get world timezone and daylight saving time.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/interface\/transceivers": {
            "get": {
                "summary": "Get a list of transceivers being used by the FortiGate.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiGate Transceiver Information",
                            "description": "List information about transceiver modules that are connected to this FortiGate.",
                            "type": "array",
                            "items": {
                                "title": "Transceiver Module",
                                "description": "Information for a transceiver module.",
                                "type": "object",
                                "required": [
                                    "interface"
                                ],
                                "properties": {
                                    "interface": {
                                        "type": "string",
                                        "title": "FortiGate Interface",
                                        "description": "FortiGate interface that the transceiver module is connected to."
                                    },
                                    "type": {
                                        "type": "string",
                                        "title": "Module Type",
                                        "description": "Type of the transceiver module."
                                    },
                                    "vendor": {
                                        "type": "string",
                                        "title": "Vendor Name",
                                        "description": "Name of the vendor for the transceiver module."
                                    },
                                    "vendor_part_number": {
                                        "type": "string",
                                        "title": "Module Vendor Part Number",
                                        "description": "Vendor part number for the transceiver module."
                                    },
                                    "vendor_serial_number": {
                                        "type": "string",
                                        "title": "Module Vendor Serial Number",
                                        "description": "Vendor serial number for the transceiver module."
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/interface.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Scope from which to retrieve the transceiver information from [vdom|global].",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/vm-information": {
            "get": {
                "summary": "Get VM information.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "VM Information",
                            "description": "Retrieve information about a VM.",
                            "type": "object",
                            "properties": {
                                "cpu_used": {
                                    "type": "integer",
                                    "title": "Active CPU Count",
                                    "description": "Number of active CPUs in the VM."
                                },
                                "cpu_max": {
                                    "type": "integer",
                                    "title": "Maximum CPU Count",
                                    "description": "Maximum number of CPUs the VM can have."
                                },
                                "mem_used": {
                                    "type": "integer",
                                    "title": "Used Memory",
                                    "description": "Memory used, in bytes."
                                },
                                "mem_max": {
                                    "type": "integer",
                                    "title": "Maximum Memory",
                                    "description": "Maximum memory, in bytes."
                                },
                                "ondemand": {
                                    "type": "boolean",
                                    "title": "On Demand",
                                    "description": "True when the VM is on-demand."
                                },
                                "is_payg": {
                                    "type": "boolean",
                                    "title": "Pay As You Go",
                                    "description": "True when the VM is pay as you go."
                                },
                                "type": {
                                    "type": "string",
                                    "title": "License Type",
                                    "description": "Type of license.",
                                    "enum": [
                                        "platform"
                                    ]
                                },
                                "valid": {
                                    "type": "boolean",
                                    "title": "License Validity",
                                    "description": "True when the VM license valid."
                                },
                                "status": {
                                    "type": "string",
                                    "title": "License Status",
                                    "description": "VM license status.",
                                    "enum": [
                                        "vm_valid",
                                        "vm_eval",
                                        "vm_expires_soon",
                                        "vm_validation_overdue",
                                        "vm_expired",
                                        "vm_eval_expired",
                                        "vm_invalid",
                                        "vm_pending"
                                    ]
                                },
                                "license_model": {
                                    "type": "integer",
                                    "title": "License Model",
                                    "description": "VM license model."
                                },
                                "license_platform_name": {
                                    "type": "string",
                                    "title": "License Platform Name",
                                    "description": "VM license platform name."
                                },
                                "expires": {
                                    "type": "integer",
                                    "title": "Expiry",
                                    "description": "Timestamp of when the license expires."
                                },
                                "validation_overdue_since": {
                                    "type": "integer",
                                    "title": "Validation Overdue",
                                    "description": "Number of seconds that validation has been overdue for."
                                },
                                "closed_network": {
                                    "type": "boolean",
                                    "title": "Closed Network",
                                    "description": "True when the license is for a closed network."
                                },
                                "vmx_instance_used": {
                                    "type": "integer",
                                    "title": "VMX Number",
                                    "description": "Number of deployed VMXs."
                                },
                                "vmx_instance_max": {
                                    "type": "integer",
                                    "title": "Maximum VMX Number",
                                    "description": "Capacity of VMX licenses."
                                },
                                "is_autoscale_master": {
                                    "type": "boolean",
                                    "title": "Autoscale Primary",
                                    "description": "True when this VM is the primary in the autoscale set."
                                },
                                "autoscale_set_size": {
                                    "type": "integer",
                                    "title": "Autoscale Size",
                                    "description": "Size of the autoscale set."
                                },
                                "autoscale_enabled": {
                                    "type": "boolean",
                                    "title": "Autoscale Enabled",
                                    "description": "True when autoscale is enabled."
                                },
                                "autoscale_peers": {
                                    "type": "array",
                                    "title": "Autoscale Peers",
                                    "description": "Autoscale peer instances of the VM.",
                                    "items": {
                                        "title": "Autoscale Peer",
                                        "type": "object",
                                        "description": "An autoscale peer instance of the VM.",
                                        "required": [
                                            "ip"
                                        ],
                                        "properties": {
                                            "ip": {
                                                "title": "IP",
                                                "type": "string",
                                                "description": "The IP address of the peer VM instance."
                                            },
                                            "eip": {
                                                "title": "External IP",
                                                "type": "string",
                                                "description": "The external IP address of the peer VM instance."
                                            },
                                            "vmid": {
                                                "title": "Virtual Machine ID",
                                                "type": "string",
                                                "description": "The ID of the peer VM instance."
                                            },
                                            "role": {
                                                "title": "Role",
                                                "type": "string",
                                                "description": "The role of the peer VM instance."
                                            },
                                            "serial_no": {
                                                "title": "Serial Number",
                                                "type": "string",
                                                "description": "The serial number of the peer VM instance."
                                            },
                                            "tgw_ipsec_tunnels": {
                                                "title": "Transit Gateway IPsec Tunnels",
                                                "type": "array",
                                                "description": "The Transit Gateway IPsec tunnels of the VM instance.",
                                                "items": {
                                                    "title": "Transit Gateway IPsec Tunnel",
                                                    "type": "object",
                                                    "description": "The IPsec tunnel that acts as a Transit Gateway.",
                                                    "properties": {
                                                        "name": {
                                                            "title": "IPsec Tunnel Name",
                                                            "type": "string",
                                                            "description": "The name of the IPsec tunnel."
                                                        },
                                                        "status": {
                                                            "title": "IPsec Tunnel Status",
                                                            "type": "string",
                                                            "description": "The status of the IPsec tunnel."
                                                        },
                                                        "remote_port": {
                                                            "title": "IPsec Tunnel Remote Port",
                                                            "type": "integer",
                                                            "description": "The remote port of the IPsec tunnel."
                                                        },
                                                        "remote_gateway": {
                                                            "title": "IPsec Tunnel Remote Gateway",
                                                            "type": "string",
                                                            "description": "The remote gateway of the IPsec tunnel."
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/vm-information.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/vmlicense\/upload": {
            "post": {
                "summary": "Update VM license using uploaded file. Reboots immediately if successful.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "file_content": {
                                    "description": "Provided when uploading a file: base64 encoded file data. Must not contain whitespace or other invalid base64 characters. Must be included in HTTP body.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/traffic-history\/interface": {
            "get": {
                "summary": "Retrieve history traffic stats for an interface.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Interface Bandwidth History",
                            "description": "Bandwidth history of the selected interface within the selected time frame.",
                            "type": "object",
                            "required": [
                                "last_rx",
                                "last_tx",
                                "rx",
                                "tx"
                            ],
                            "properties": {
                                "last_rx": {
                                    "title": "Last Recorded Downstream Bandwidth",
                                    "description": "Interface's last recorded downstream bandwidth for the selected time frame, in bits per second.",
                                    "type": "integer"
                                },
                                "last_tx": {
                                    "title": "Last Recorded Upstream Bandwidth",
                                    "description": "Interface's last recorded upstream bandwidth for the selected time frame, in bits per second.",
                                    "type": "integer"
                                },
                                "rx": {
                                    "title": "Recorded Downstream Bandwidth",
                                    "description": "Array of interface's recorded downstream bandwidth within the selected time frame.",
                                    "type": "array",
                                    "items": {
                                        "title": "Recorded Downstream Bandwidth Entry",
                                        "description": "Interface's recorded downstream bandwidth at a specific point in time within the selected time frame.",
                                        "type": "object",
                                        "required": [
                                            "utc_ms",
                                            "bps"
                                        ],
                                        "properties": {
                                            "utc_ms": {
                                                "title": "UTC Timestamp",
                                                "description": "UTC timestamp of when the downstream bandwidth was recorded, in milliseconds.",
                                                "type": "integer"
                                            },
                                            "bps": {
                                                "title": "Downstream Bandwidth",
                                                "description": "Interface's recorded downstream bandwidth at a specific point in time, in bits per second.",
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "tx": {
                                    "title": "Recorded Upstream Bandwidth",
                                    "description": "Array of interface's recorded upstream bandwidth within the selected time frame.",
                                    "type": "array",
                                    "items": {
                                        "title": "Recorded Upstream Bandwidth Entry",
                                        "description": "Interface's recorded upstream bandwidth at a specific point in time within the selected time frame.",
                                        "type": "object",
                                        "required": [
                                            "utc_ms",
                                            "bps"
                                        ],
                                        "properties": {
                                            "utc_ms": {
                                                "title": "UTC Timestamp",
                                                "description": "UTC timestamp of when the upstream bandwidth was recorded, in milliseconds.",
                                                "type": "integer"
                                            },
                                            "bps": {
                                                "title": "Upstream Bandwidth",
                                                "description": "Interface's recorded upstream bandwidth at a specific point in time, in bits per second.",
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/traffic-history.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "interface",
                        "in": "query",
                        "description": "Interface name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "time_period",
                        "in": "query",
                        "description": "Time period to retrieve data for [hour | day | week].",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/traffic-history\/top-applications": {
            "get": {
                "summary": "Retrieve top FortiView applications traffic stats by bandwidth.\nAccess Group: ftviewgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Top FortiView Application Bandwidth History",
                            "description": "Bandwidth history of top and monitored FortiView applications within the selected time frame.",
                            "type": "array",
                            "items": {
                                "title": "Application Bandwidth History Entry",
                                "description": "Recorded bandwidth history for a specific application within the selected time frame.",
                                "type": "object",
                                "required": [
                                    "app_id",
                                    "last_rx",
                                    "last_tx",
                                    "rx",
                                    "tx",
                                    "total_bytes"
                                ],
                                "properties": {
                                    "app_id": {
                                        "title": "Application ID",
                                        "description": "FortiView application id.",
                                        "type": "integer"
                                    },
                                    "last_rx": {
                                        "title": "Last Recorded Downstream Bandwidth",
                                        "description": "Application's last recorded downstream bandwidth for the selected time frame, in bits per second.",
                                        "type": "integer"
                                    },
                                    "last_tx": {
                                        "title": "Last Recorded Upstream Bandwidth",
                                        "description": "Application's last recorded upstream bandwidth for the selected time frame, in bits per second.",
                                        "type": "integer"
                                    },
                                    "rx": {
                                        "title": "Recorded Downstream Bandwidth",
                                        "description": "Array of application's recorded downstream bandwidth within the selected time frame.",
                                        "type": "array",
                                        "items": {
                                            "title": "Recorded Downstream Bandwidth Entry",
                                            "description": "Application's recorded downstream bandwidth at a specific point in time within the selected time frame.",
                                            "type": "object",
                                            "required": [
                                                "utc_ms",
                                                "bps"
                                            ],
                                            "properties": {
                                                "utc_ms": {
                                                    "title": "UTC Timestamp",
                                                    "description": "UTC timestamp of when the downstream bandwidth of the application was recorded, in milliseconds.",
                                                    "type": "integer"
                                                },
                                                "bps": {
                                                    "title": "Downstream Bandwidth",
                                                    "description": "Application's recorded downstream bandwidth at a specific point in time, in bits per second.",
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    },
                                    "tx": {
                                        "title": "Recorded Upstream Bandwidth",
                                        "description": "Array of application's recorded upstream bandwidth within the selected time frame.",
                                        "type": "array",
                                        "items": {
                                            "title": "Recorded Upstream Bandwidth Entry",
                                            "description": "Application's recorded upstream bandwidth at a specific point in time within the selected time frame.",
                                            "type": "object",
                                            "required": [
                                                "utc_ms",
                                                "bps"
                                            ],
                                            "properties": {
                                                "utc_ms": {
                                                    "title": "UTC Timestamp",
                                                    "description": "UTC timestamp of when the downstream bandwidth of the application was recorded, in milliseconds.",
                                                    "type": "integer"
                                                },
                                                "bps": {
                                                    "title": "Upstream Bandwidth",
                                                    "description": "Application's recorded upstream bandwidth at a specific point in time, in bits per second.",
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    },
                                    "total_bytes": {
                                        "title": "Total Bytes",
                                        "description": "Total accumulated traffic generated by the application since it was first recorded, in bytes.",
                                        "type": "integer"
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/traffic-history.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "time_period",
                        "in": "query",
                        "description": "Time period to retrieve data for [hour | day | week].",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/traffic-history\/enable-app-bandwidth-tracking": {
            "post": {
                "summary": "Enable FortiView application bandwidth tracking.\nAccess Group: ftviewgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/sensor-info": {
            "get": {
                "summary": "Retrieve system sensor status.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/security-rating": {
            "get": {
                "summary": "Retrieve a Security Rating report result. Without ID specified, returns the most recent result.\nAccess Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "type": "object",
                            "title": "Security Rating Report Schema",
                            "description": "Schema for validating security rating reports.",
                            "anyOf": [
                                {
                                    "title": "Security Rating Report",
                                    "type": "object",
                                    "description": "Schema for reports generated by report-runner.",
                                    "required": [
                                        "auditID",
                                        "reportName",
                                        "scheduledRun",
                                        "packageMetaData",
                                        "topologyFullyLicensed",
                                        "maturityLevelStatistics",
                                        "devices",
                                        "statistics",
                                        "results",
                                        "perDeviceStatistics",
                                        "perDeviceTypeStatistics",
                                        "perCheckStatistics",
                                        "perCategoryStatistics",
                                        "securityRatingResults",
                                        "gradeStatistics",
                                        "STATIC"
                                    ],
                                    "properties": {
                                        "auditID": {
                                            "type": "integer",
                                            "title": "Audit ID",
                                            "description": "Unique ID for this report. Based on the time the report was run."
                                        },
                                        "reportName": {
                                            "type": "string",
                                            "title": "Report Name",
                                            "description": "Name of this report."
                                        },
                                        "scheduledRun": {
                                            "type": "boolean",
                                            "title": "Scheduled Run",
                                            "description": "True when this report is generated because of a scheduled run."
                                        },
                                        "topologyRevision": {
                                            "type": "string",
                                            "title": "Topology Revision",
                                            "description": "CSF topology revision."
                                        },
                                        "packageMetaData": {
                                            "type": "object",
                                            "title": "Package Meta Data",
                                            "description": "Security Rating report-runner version information.",
                                            "properties": {
                                                "package_major": {
                                                    "type": "integer",
                                                    "title": "Major Version Number",
                                                    "description": "Current major version number of the report-runner."
                                                },
                                                "package_minor": {
                                                    "type": "integer",
                                                    "title": "Minor Version Number",
                                                    "description": "Current minor version number of the report-runner."
                                                }
                                            }
                                        },
                                        "detectedEndpoints": {
                                            "type": "integer",
                                            "title": "Detected Endpoints",
                                            "description": "Number of endpoints detected in the topology."
                                        },
                                        "topologyFullyLicensed": {
                                            "type": "boolean",
                                            "title": "Topology Fully Licensed",
                                            "description": "True when all the devices in the topology are licensed."
                                        },
                                        "weekHistory": {
                                            "type": "array",
                                            "title": "Week History",
                                            "description": "Summary information about the reports from the previous week.",
                                            "items": {
                                                "type": "object",
                                                "title": "Week History Data",
                                                "description": "Week history data.",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "title": "ID",
                                                        "description": "Report ID."
                                                    },
                                                    "time": {
                                                        "type": "integer",
                                                        "title": "Timestamp",
                                                        "description": "Report timestamp."
                                                    },
                                                    "score": {
                                                        "type": [
                                                            "number",
                                                            "integer"
                                                        ],
                                                        "title": "Score",
                                                        "description": "Report score."
                                                    },
                                                    "ranking": {
                                                        "type": "integer",
                                                        "title": "Ranking",
                                                        "description": "Ranking of the report."
                                                    }
                                                }
                                            }
                                        },
                                        "statistics": {
                                            "type": "object",
                                            "title": "Statistics",
                                            "description": "Global audit statistics.",
                                            "required": [
                                                "auditTime"
                                            ],
                                            "properties": {
                                                "numChecks": {
                                                    "type": "integer",
                                                    "title": "Number of Checks",
                                                    "description": "Total number of checks in the report."
                                                },
                                                "numApplicableChecks": {
                                                    "type": "integer",
                                                    "title": "Number of Applicable Checks",
                                                    "description": "Total number of checks applicable to the current topology or configuration."
                                                },
                                                "auditTime": {
                                                    "type": "integer",
                                                    "title": "Audit Time",
                                                    "description": "Time at which this report ran."
                                                },
                                                "numExecutionErrors": {
                                                    "type": "integer",
                                                    "title": "Number of Execution Errors",
                                                    "description": "Total number of errors encountered during execution."
                                                },
                                                "numFailedChecks": {
                                                    "type": "integer",
                                                    "title": "Number of Failed Checks",
                                                    "description": "Total number of checks that failed due to config or execution errors."
                                                },
                                                "numExemptChecks": {
                                                    "type": "integer",
                                                    "title": "Number of Exempt Checks",
                                                    "description": "Total number of checks that were not executed due to exemptions."
                                                },
                                                "numNonLicensedChecks": {
                                                    "type": "integer",
                                                    "title": "Number of Non Licensed Checks",
                                                    "description": "Total number of checks that do not require a license."
                                                },
                                                "numPassedChecks": {
                                                    "type": "integer",
                                                    "title": "Number of Checks Passed",
                                                    "description": "Total number of checks that passed."
                                                },
                                                "numRecommendations": {
                                                    "type": "integer",
                                                    "title": "Number of Recommendations",
                                                    "description": "Total number of report-runner recommendations."
                                                },
                                                "numWithAutoRecommendations": {
                                                    "type": "integer",
                                                    "title": "Number of Recommendations With Easy Apply",
                                                    "description": "Total number of recommendations that can be fixed using Easy Apply."
                                                },
                                                "scoreTotal": {
                                                    "title": "Score",
                                                    "description": "Total score.",
                                                    "type": [
                                                        "number",
                                                        "integer"
                                                    ]
                                                },
                                                "auditRanking": {
                                                    "title": "Audit Ranking",
                                                    "type": "integer",
                                                    "description": "Ranking based on the results of each check."
                                                },
                                                "numSeverityLow": {
                                                    "type": "integer",
                                                    "title": "Low Severity Checks",
                                                    "description": "Number of failed checks with low severity."
                                                },
                                                "numSeverityMedium": {
                                                    "type": "integer",
                                                    "title": "Medium Severity Checks",
                                                    "description": "Number of failed checks with medium severity."
                                                },
                                                "numSeverityHigh": {
                                                    "type": "integer",
                                                    "title": "High Severity Checks",
                                                    "description": "Number of failed checks with high severity."
                                                },
                                                "numSeverityCritical": {
                                                    "type": "integer",
                                                    "title": "Critical Severity Checks",
                                                    "description": "Number of failed checks with critical severity."
                                                },
                                                "highestSeverityLevel": {
                                                    "type": "string",
                                                    "title": "Highest Severity Level",
                                                    "description": "The highest severity level among failed checks."
                                                },
                                                "applyCount": {
                                                    "type": "integer",
                                                    "title": "Apply Count",
                                                    "description": "Number of recommendations applied."
                                                },
                                                "applySuccessCount": {
                                                    "type": "integer",
                                                    "title": "Apply Success Count",
                                                    "description": "Number of recommendations applied successfully."
                                                },
                                                "applyFailureCount": {
                                                    "type": "integer",
                                                    "title": "Apply Failure Count",
                                                    "description": "Number of recommendations that failed to apply."
                                                },
                                                "numDepsNowMet": {
                                                    "type": "integer",
                                                    "title": "Number of Dependency Not Met",
                                                    "description": "Total number of checks that failed due to missing dependencies."
                                                },
                                                "lastAuditScore": {
                                                    "type": [
                                                        "number",
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "title": "Last Audit Score",
                                                    "description": "Score from the previous audit run."
                                                },
                                                "lastAuditTime": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "title": "Last Audit Time",
                                                    "description": "Time of the previous audit run."
                                                },
                                                "lastAuditRanking": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "title": "Last Audit Ranking",
                                                    "description": "Ranking from the previous audit run."
                                                },
                                                "lastAuditDevices": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "title": "Last Audit Devices",
                                                    "description": "Number of devices in the previous audit."
                                                }
                                            }
                                        },
                                        "results": {
                                            "type": "object",
                                            "title": "Results",
                                            "description": "Result of each check, organized by category.",
                                            "additionalProperties": {
                                                "type": "object",
                                                "title": "Result",
                                                "description": "Result object for every category.",
                                                "additionalProperties": {
                                                    "type": "object",
                                                    "title": "Result Statistics",
                                                    "description": "Result statistics for each check.",
                                                    "additionalProperties": true,
                                                    "required": [
                                                        "instances",
                                                        "perDevice",
                                                        "supportedDevices",
                                                        "passedForFullFabric",
                                                        "standards"
                                                    ],
                                                    "properties": {
                                                        "instances": {
                                                            "type": "array",
                                                            "title": "Instances",
                                                            "description": "Check instances for each applicable device."
                                                        },
                                                        "perDevice": {
                                                            "type": "boolean",
                                                            "title": "Per Device",
                                                            "description": "True when the check ran per device."
                                                        },
                                                        "supportedDevices": {
                                                            "type": "array",
                                                            "title": "Supported Devices",
                                                            "description": "List of devices that this check supports."
                                                        },
                                                        "numberOfDeviceApplicableFor": {
                                                            "type": "integer",
                                                            "title": "Number of Devices",
                                                            "description": "Number of devices this check is applicable for."
                                                        },
                                                        "passedForFullFabric": {
                                                            "type": "boolean",
                                                            "title": "Passed for Full Fabric",
                                                            "description": "True when this check passed for all applicable devices in the fabric."
                                                        },
                                                        "standards": {
                                                            "type": "array",
                                                            "title": "Standards",
                                                            "description": "The standards this check is related to.",
                                                            "additionalItems": false,
                                                            "items": {
                                                                "type": "string",
                                                                "title": "Compliance Standards",
                                                                "description": "Compliance standards.",
                                                                "enum": [
                                                                    "FSBP",
                                                                    "PCI"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "perDeviceStatistics": {
                                            "type": "object",
                                            "title": "Per Device Statistics",
                                            "description": "Statistics for every device. Organized by serial number.",
                                            "additionalProperties": {
                                                "type": "object",
                                                "title": "Statistics",
                                                "description": "Statistics for every device.",
                                                "additionalProperties": false,
                                                "properties": {
                                                    "numChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Checks",
                                                        "description": "Total number of checks in the report."
                                                    },
                                                    "numApplicableChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Applicable Checks",
                                                        "description": "Total number of checks applicable to the current topology or configuration."
                                                    },
                                                    "numExecutionErrors": {
                                                        "type": "integer",
                                                        "title": "Number of Execution Errors",
                                                        "description": "Total number of errors encountered during execution."
                                                    },
                                                    "numFailedChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Failed Checks",
                                                        "description": "Total number of checks that failed due to config or execution errors."
                                                    },
                                                    "numExemptChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Exempt Checks",
                                                        "description": "Total number of checks that were not executed due to exemptions."
                                                    },
                                                    "numNonLicensedChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Non Licensed Checks",
                                                        "description": "Total number of checks that do not require a license."
                                                    },
                                                    "numPassedChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Checks Passed",
                                                        "description": "Total number of checks that passed."
                                                    },
                                                    "numRecommendations": {
                                                        "type": "integer",
                                                        "title": "Number of Recommendations",
                                                        "description": "Total number of report-runner recommendations."
                                                    },
                                                    "numWithAutoRecommendations": {
                                                        "type": "integer",
                                                        "title": "Number of Recommendations With Easy Apply",
                                                        "description": "Total number of recommendations that can be fixed using Easy Apply."
                                                    },
                                                    "scoreTotal": {
                                                        "title": "Score",
                                                        "description": "Total score.",
                                                        "type": [
                                                            "number",
                                                            "integer"
                                                        ]
                                                    },
                                                    "numSeverityLow": {
                                                        "type": "integer",
                                                        "title": "Low Severity Checks",
                                                        "description": "Number of failed checks with low severity."
                                                    },
                                                    "numSeverityMedium": {
                                                        "type": "integer",
                                                        "title": "Medium Severity Checks",
                                                        "description": "Number of failed checks with medium severity."
                                                    },
                                                    "numSeverityHigh": {
                                                        "type": "integer",
                                                        "title": "High Severity Checks",
                                                        "description": "Number of failed checks with high severity."
                                                    },
                                                    "numSeverityCritical": {
                                                        "type": "integer",
                                                        "title": "Critical Severity Checks",
                                                        "description": "Number of failed checks with critical severity."
                                                    },
                                                    "highestSeverityLevel": {
                                                        "type": "string",
                                                        "title": "Highest Severity Level",
                                                        "description": "The highest severity level among failed checks."
                                                    }
                                                }
                                            }
                                        },
                                        "perDeviceTypeStatistics": {
                                            "type": "object",
                                            "title": "Per Device Type Statistics",
                                            "description": "Statistics grouped by device type.",
                                            "additionalProperties": {
                                                "type": "object",
                                                "title": "Device Type Statistics",
                                                "description": "Statistics for every device type.",
                                                "additionalProperties": false,
                                                "properties": {
                                                    "numChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Checks",
                                                        "description": "Total number of checks in the report."
                                                    },
                                                    "numApplicableChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Applicable Checks",
                                                        "description": "Total number of checks applicable to the current topology or configuration."
                                                    },
                                                    "numExecutionErrors": {
                                                        "type": "integer",
                                                        "title": "Number of Execution Errors",
                                                        "description": "Total number of errors encountered during execution."
                                                    },
                                                    "numFailedChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Failed Checks",
                                                        "description": "Total number of checks that failed due to config or execution errors."
                                                    },
                                                    "numExemptChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Exempt Checks",
                                                        "description": "Total number of checks that were not executed due to exemptions."
                                                    },
                                                    "numNonLicensedChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Non Licensed Checks",
                                                        "description": "Total number of checks that do not require a license."
                                                    },
                                                    "numPassedChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Checks Passed",
                                                        "description": "Total number of checks that passed."
                                                    },
                                                    "numRecommendations": {
                                                        "type": "integer",
                                                        "title": "Number of Recommendations",
                                                        "description": "Total number of report-runner recommendations."
                                                    },
                                                    "numWithAutoRecommendations": {
                                                        "type": "integer",
                                                        "title": "Number of Recommendations With Easy Apply",
                                                        "description": "Total number of recommendations that can be fixed using Easy Apply."
                                                    },
                                                    "scoreTotal": {
                                                        "title": "Score",
                                                        "description": "Total score.",
                                                        "type": [
                                                            "number",
                                                            "integer"
                                                        ]
                                                    },
                                                    "numSeverityLow": {
                                                        "type": "integer",
                                                        "title": "Low Severity Checks",
                                                        "description": "Number of failed checks with low severity."
                                                    },
                                                    "numSeverityMedium": {
                                                        "type": "integer",
                                                        "title": "Medium Severity Checks",
                                                        "description": "Number of failed checks with medium severity."
                                                    },
                                                    "numSeverityHigh": {
                                                        "type": "integer",
                                                        "title": "High Severity Checks",
                                                        "description": "Number of failed checks with high severity."
                                                    },
                                                    "numSeverityCritical": {
                                                        "type": "integer",
                                                        "title": "Critical Severity Checks",
                                                        "description": "Number of failed checks with critical severity."
                                                    },
                                                    "highestSeverityLevel": {
                                                        "type": "string",
                                                        "title": "Highest Severity Level",
                                                        "description": "The highest severity level among failed checks."
                                                    }
                                                }
                                            }
                                        },
                                        "perCheckStatistics": {
                                            "type": "object",
                                            "title": "Per Check Statistics",
                                            "description": "Statistics for every check.",
                                            "additionalProperties": {
                                                "type": "object",
                                                "title": "Check Name",
                                                "description": "Name of the check.",
                                                "additionalProperties": false,
                                                "properties": {
                                                    "numChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Checks",
                                                        "description": "Total number of checks in the report."
                                                    },
                                                    "numApplicableChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Applicable Checks",
                                                        "description": "Total number of checks applicable to the current topology or configuration."
                                                    },
                                                    "numExecutionErrors": {
                                                        "type": "integer",
                                                        "title": "Number of Execution Errors",
                                                        "description": "Total number of errors encountered during execution."
                                                    },
                                                    "numFailedChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Failed Checks",
                                                        "description": "Total number of checks that failed due to config or execution errors."
                                                    },
                                                    "numExemptChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Exempt Checks",
                                                        "description": "Total number of checks that were not executed due to exemptions."
                                                    },
                                                    "numNonLicensedChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Non Licensed Checks",
                                                        "description": "Total number of checks that do not require a license."
                                                    },
                                                    "numPassedChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Checks Passed",
                                                        "description": "Total number of checks that passed."
                                                    },
                                                    "numRecommendations": {
                                                        "type": "integer",
                                                        "title": "Number of Recommendations",
                                                        "description": "Total number of report-runner recommendations."
                                                    },
                                                    "numWithAutoRecommendations": {
                                                        "type": "integer",
                                                        "title": "Number of Recommendations With Easy Apply",
                                                        "description": "Total number of recommendations that can be fixed using Easy Apply."
                                                    },
                                                    "totalScore": {
                                                        "title": "Score",
                                                        "description": "Total score.",
                                                        "type": [
                                                            "number",
                                                            "integer"
                                                        ]
                                                    },
                                                    "numSeverityLow": {
                                                        "type": "integer",
                                                        "title": "Low Severity Checks",
                                                        "description": "Number of failed checks with low severity."
                                                    },
                                                    "numSeverityMedium": {
                                                        "type": "integer",
                                                        "title": "Medium Severity Checks",
                                                        "description": "Number of failed checks with medium severity."
                                                    },
                                                    "numSeverityHigh": {
                                                        "type": "integer",
                                                        "title": "High Severity Checks",
                                                        "description": "Number of failed checks with high severity."
                                                    },
                                                    "numSeverityCritical": {
                                                        "type": "integer",
                                                        "title": "Critical Severity Checks",
                                                        "description": "Number of failed checks with critical severity."
                                                    },
                                                    "highestSeverityLevel": {
                                                        "type": "string",
                                                        "title": "Highest Severity Level",
                                                        "description": "The highest severity level among failed checks."
                                                    }
                                                }
                                            }
                                        },
                                        "perCategoryStatistics": {
                                            "type": "object",
                                            "title": "Per Category Statistics",
                                            "description": "Statistics grouped by every category of checks.",
                                            "additionalProperties": {
                                                "type": "object",
                                                "title": "Category Statistics",
                                                "description": "Statistics for every category.",
                                                "additionalProperties": false,
                                                "properties": {
                                                    "numChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Checks",
                                                        "description": "Total number of checks in the report."
                                                    },
                                                    "numApplicableChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Applicable Checks",
                                                        "description": "Total number of checks applicable to the current topology or configuration."
                                                    },
                                                    "numExecutionErrors": {
                                                        "type": "integer",
                                                        "title": "Number of Execution Errors",
                                                        "description": "Total number of errors encountered during execution."
                                                    },
                                                    "numFailedChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Failed Checks",
                                                        "description": "Total number of checks that failed due to config or execution errors."
                                                    },
                                                    "numExemptChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Exempt Checks",
                                                        "description": "Total number of checks that were not executed due to exemptions."
                                                    },
                                                    "numNonLicensedChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Non Licensed Checks",
                                                        "description": "Total number of checks that do not require a license."
                                                    },
                                                    "numPassedChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Checks Passed",
                                                        "description": "Total number of checks that passed."
                                                    },
                                                    "numRecommendations": {
                                                        "type": "integer",
                                                        "title": "Number of Recommendations",
                                                        "description": "Total number of report-runner recommendations."
                                                    },
                                                    "numWithAutoRecommendations": {
                                                        "type": "integer",
                                                        "title": "Number of Recommendations With Easy Apply",
                                                        "description": "Total number of recommendations that can be fixed using Easy Apply."
                                                    },
                                                    "scoreTotal": {
                                                        "title": "Score",
                                                        "description": "Total score.",
                                                        "type": [
                                                            "number",
                                                            "integer"
                                                        ]
                                                    },
                                                    "numSeverityLow": {
                                                        "type": "integer",
                                                        "title": "Low Severity Checks",
                                                        "description": "Number of failed checks with low severity."
                                                    },
                                                    "numSeverityMedium": {
                                                        "type": "integer",
                                                        "title": "Medium Severity Checks",
                                                        "description": "Number of failed checks with medium severity."
                                                    },
                                                    "numSeverityHigh": {
                                                        "type": "integer",
                                                        "title": "High Severity Checks",
                                                        "description": "Number of failed checks with high severity."
                                                    },
                                                    "numSeverityCritical": {
                                                        "type": "integer",
                                                        "title": "Critical Severity Checks",
                                                        "description": "Number of failed checks with critical severity."
                                                    },
                                                    "highestSeverityLevel": {
                                                        "type": "string",
                                                        "title": "Highest Severity Level",
                                                        "description": "The highest severity level among failed checks."
                                                    }
                                                }
                                            }
                                        },
                                        "maturityLevelStatistics": {
                                            "type": "object",
                                            "title": "Maturity Level Statistics",
                                            "description": "Statistics for every maturity level.",
                                            "additionalProperties": {
                                                "type": "object",
                                                "title": "Statistics",
                                                "description": "Statistics for every device.",
                                                "additionalProperties": false,
                                                "properties": {
                                                    "numChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Checks",
                                                        "description": "Total number of checks in the report."
                                                    },
                                                    "numApplicableChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Applicable Checks",
                                                        "description": "Total number of checks applicable to the current topology or configuration."
                                                    },
                                                    "numExecutionErrors": {
                                                        "type": "integer",
                                                        "title": "Number of Execution Errors",
                                                        "description": "Total number of errors encountered during execution."
                                                    },
                                                    "numFailedChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Failed Checks",
                                                        "description": "Total number of checks that failed due to config or execution errors."
                                                    },
                                                    "numExemptChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Exempt Checks",
                                                        "description": "Total number of checks that were not executed due to exemptions."
                                                    },
                                                    "numNonLicensedChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Non Licensed Checks",
                                                        "description": "Total number of checks that do not require a license."
                                                    },
                                                    "numPassedChecks": {
                                                        "type": "integer",
                                                        "title": "Number of Checks Passed",
                                                        "description": "Total number of checks that passed."
                                                    },
                                                    "numRecommendations": {
                                                        "type": "integer",
                                                        "title": "Number of Recommendations",
                                                        "description": "Total number of report-runner recommendations."
                                                    },
                                                    "numWithAutoRecommendations": {
                                                        "type": "integer",
                                                        "title": "Number of Recommendations With Easy Apply",
                                                        "description": "Total number of recommendations that can be fixed using Easy Apply."
                                                    },
                                                    "scoreTotal": {
                                                        "title": "Score",
                                                        "description": "Total score.",
                                                        "type": [
                                                            "number",
                                                            "integer"
                                                        ]
                                                    },
                                                    "numSeverityLow": {
                                                        "type": "integer",
                                                        "title": "Low Severity Checks",
                                                        "description": "Number of failed checks with low severity."
                                                    },
                                                    "numSeverityMedium": {
                                                        "type": "integer",
                                                        "title": "Medium Severity Checks",
                                                        "description": "Number of failed checks with medium severity."
                                                    },
                                                    "numSeverityHigh": {
                                                        "type": "integer",
                                                        "title": "High Severity Checks",
                                                        "description": "Number of failed checks with high severity."
                                                    },
                                                    "numSeverityCritical": {
                                                        "type": "integer",
                                                        "title": "Critical Severity Checks",
                                                        "description": "Number of failed checks with critical severity."
                                                    },
                                                    "highestSeverityLevel": {
                                                        "type": "string",
                                                        "title": "Highest Severity Level",
                                                        "description": "The highest severity level among failed checks."
                                                    }
                                                }
                                            }
                                        },
                                        "devices": {
                                            "type": "array",
                                            "title": "Devices",
                                            "description": "All the devices in the topology.",
                                            "items": {
                                                "type": "object",
                                                "title": "Devices",
                                                "description": "Devices in the topology.",
                                                "additionalProperties": true,
                                                "required": [
                                                    "deviceType",
                                                    "deviceID"
                                                ],
                                                "properties": {
                                                    "deviceType": {
                                                        "type": "string",
                                                        "title": "Device Type",
                                                        "description": "Device Type."
                                                    },
                                                    "deviceID": {
                                                        "type": "string",
                                                        "title": "Device Serial Number",
                                                        "description": "Device serial number."
                                                    }
                                                }
                                            }
                                        },
                                        "securityRatingResults": {
                                            "type": "object",
                                            "title": "Security Rating Results",
                                            "description": "Security rating scores by industry, regions, business size, etc.",
                                            "additionalProperties": true,
                                            "properties": {
                                                "title": {
                                                    "type": "string",
                                                    "title": "Result Title",
                                                    "description": "Title of the result."
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "title": "Description",
                                                    "description": "Description of the result."
                                                },
                                                "region": {
                                                    "type": "string",
                                                    "title": "Region",
                                                    "description": "Reference region for the result."
                                                },
                                                "industry": {
                                                    "type": "string",
                                                    "title": "Industry",
                                                    "description": "Reference industry for the result."
                                                },
                                                "companySize": {
                                                    "type": "string",
                                                    "title": "Company Size",
                                                    "description": "Reference company size for the result."
                                                },
                                                "companySizeRangeStart": {
                                                    "type": "integer",
                                                    "title": "Company Size Range Start",
                                                    "description": "Reference minimum company size for the result."
                                                },
                                                "companySizeRangeEnd": {
                                                    "type": "integer",
                                                    "title": "Company Size Range End",
                                                    "description": "Reference maximum company size for the result."
                                                }
                                            }
                                        },
                                        "gradeStatistics": {
                                            "type": "object",
                                            "title": "Grade Statistics",
                                            "description": "Security rating grading information.",
                                            "required": [
                                                "totalGrade",
                                                "hasValidPercentage",
                                                "categoryGrades",
                                                "changeSince",
                                                "changeAbsolute",
                                                "changePercentage",
                                                "high",
                                                "low"
                                            ],
                                            "properties": {
                                                "totalGrade": {
                                                    "type": "string",
                                                    "title": "Overall Grade",
                                                    "description": "The overall grade for this run."
                                                },
                                                "hasValidPercentage": {
                                                    "type": "boolean",
                                                    "title": "Valid Percentage",
                                                    "description": "True when the percentage is valid."
                                                },
                                                "categoryGrades": {
                                                    "type": "object",
                                                    "title": "Category Grades",
                                                    "description": "Grades scored in each category of checks.",
                                                    "additionalProperties": {
                                                        "type": "object",
                                                        "title": "Grade",
                                                        "description": "Grade object.",
                                                        "additionalProperties": false,
                                                        "properties": {
                                                            "percentage": {
                                                                "type": [
                                                                    "number",
                                                                    "integer"
                                                                ],
                                                                "title": "Percentage",
                                                                "description": "Percentage."
                                                            },
                                                            "grade": {
                                                                "type": "string",
                                                                "title": "Grade",
                                                                "description": "Grade."
                                                            },
                                                            "severity": {
                                                                "type": "string",
                                                                "title": "Severity Level",
                                                                "description": "Severity level."
                                                            },
                                                            "count": {
                                                                "type": "integer",
                                                                "title": "Count",
                                                                "description": "Count."
                                                            }
                                                        }
                                                    }
                                                },
                                                "changeSince": {
                                                    "type": "integer",
                                                    "title": "Change Since",
                                                    "description": "Time from when changes are calculated, in milliseconds."
                                                },
                                                "changeAbsolute": {
                                                    "type": [
                                                        "number",
                                                        "integer"
                                                    ],
                                                    "title": "Absolute Change",
                                                    "description": "Change in score (absolute)."
                                                },
                                                "changePercentage": {
                                                    "type": [
                                                        "number",
                                                        "integer"
                                                    ],
                                                    "title": "Percentage Change",
                                                    "description": "Change in score (percentage)."
                                                },
                                                "high": {
                                                    "type": [
                                                        "number",
                                                        "integer"
                                                    ],
                                                    "title": "Score High",
                                                    "description": "Highest score achieved so far."
                                                },
                                                "low": {
                                                    "type": [
                                                        "number",
                                                        "integer"
                                                    ],
                                                    "title": "Score Low",
                                                    "description": "Lowest score achieved so far."
                                                }
                                            }
                                        },
                                        "STATIC": {
                                            "type": "object",
                                            "title": "Static Data",
                                            "description": "Static data used for parsing the report.",
                                            "required": [
                                                "AUTO_RECOMMENDATION_RESULT",
                                                "SUPPORTED_OBJECTS_MAP",
                                                "SUPPORTED_OBJECTS",
                                                "RECOMMENDATION_CONTROLLER",
                                                "SUPPORTED_OBJECT_PARTIALS_LOCATION",
                                                "SUPPORTED_OBJECT_PARTIALS",
                                                "SUPPORTED_OPERATIONS_MAP",
                                                "USER_INPUT_TRANSLATION",
                                                "SUPPORTED_OPERATIONS",
                                                "RESULT",
                                                "SEVERITY_LEVELS",
                                                "SEVERITY_LEVEL_WEIGHT",
                                                "SEVERITY_LEVEL_INDEX",
                                                "RUN_TIME_VALUE",
                                                "DATA_TYPES",
                                                "VALIDATION_TYPES",
                                                "MATURITY_LEVELS",
                                                "COMPLIANCE",
                                                "DEVICES",
                                                "ORGANIZATION_SIZES",
                                                "ORGANIZATION_SIZE_RANGES"
                                            ],
                                            "properties": {
                                                "AUTO_RECOMMENDATION_RESULT": {
                                                    "type": "object",
                                                    "title": "Auto Recommendation Result",
                                                    "description": "Possible results for auto recommendation execution.",
                                                    "required": [
                                                        "PENDING",
                                                        "EXECUTION_ERROR",
                                                        "FAILED",
                                                        "SUCCESS"
                                                    ],
                                                    "properties": {
                                                        "PENDING": {
                                                            "type": "string",
                                                            "title": "Pending",
                                                            "description": "Applying auto-recommendation."
                                                        },
                                                        "EXECUTION_ERROR": {
                                                            "type": "string",
                                                            "title": "Execution Error",
                                                            "description": "An error occurred while executing auto-recommendation."
                                                        },
                                                        "FAILED": {
                                                            "type": "string",
                                                            "title": "Failed",
                                                            "description": "Failed to apply auto-recommendation."
                                                        },
                                                        "SUCCESS": {
                                                            "type": "string",
                                                            "title": "Success",
                                                            "description": "Successfully applied auto-recommendation."
                                                        }
                                                    }
                                                },
                                                "SUPPORTED_OBJECTS_MAP": {
                                                    "type": "object",
                                                    "title": "Supported Objects Map",
                                                    "description": "Schema for supported HTML elements.",
                                                    "required": [
                                                        "LABEL",
                                                        "LIST",
                                                        "FORTIGATEOBJECT",
                                                        "TABLE",
                                                        "DROPDOWN",
                                                        "INPUT",
                                                        "TOGGLE"
                                                    ],
                                                    "properties": {
                                                        "LABEL": {
                                                            "type": "string",
                                                            "title": "Label",
                                                            "description": "Label GUI element."
                                                        },
                                                        "LIST": {
                                                            "type": "string",
                                                            "title": "List",
                                                            "description": "List GUI element."
                                                        },
                                                        "FORTIGATEOBJECT": {
                                                            "type": "string",
                                                            "title": "FortiGate Object",
                                                            "description": "FortiGate object GUI element."
                                                        },
                                                        "TABLE": {
                                                            "type": "string",
                                                            "title": "Table",
                                                            "description": "Table GUI element."
                                                        },
                                                        "DROPDOWN": {
                                                            "type": "string",
                                                            "title": "Dropdown",
                                                            "description": "Dropdown GUI element."
                                                        },
                                                        "INPUT": {
                                                            "type": "string",
                                                            "title": "Input",
                                                            "description": "Input GUI element."
                                                        },
                                                        "TOGGLE": {
                                                            "type": "string",
                                                            "title": "Toggle",
                                                            "description": "Toggle GUI element."
                                                        }
                                                    }
                                                },
                                                "SUPPORTED_OBJECTS": {
                                                    "type": "array",
                                                    "title": "Supported Objects",
                                                    "description": "List of supported HTML objects.",
                                                    "additionalItems": true
                                                },
                                                "RECOMMENDATION_CONTROLLER": {
                                                    "type": "string",
                                                    "title": "Recommendation Controller",
                                                    "description": "Recommendation controller."
                                                },
                                                "SUPPORTED_OBJECT_PARTIALS_LOCATION": {
                                                    "type": "string",
                                                    "title": "Supported Object Partials Location",
                                                    "description": "Location of the supported object partials."
                                                },
                                                "SUPPORTED_OBJECT_PARTIALS": {
                                                    "type": "object",
                                                    "title": "Supported Object Partials",
                                                    "description": "Supported object partials.",
                                                    "required": [
                                                        "Label",
                                                        "List",
                                                        "FortiGateObject",
                                                        "Table",
                                                        "DropDown",
                                                        "Input",
                                                        "Toggle"
                                                    ],
                                                    "properties": {
                                                        "Label": {
                                                            "type": "string",
                                                            "title": "Label",
                                                            "description": "Label GUI element."
                                                        },
                                                        "List": {
                                                            "type": "string",
                                                            "title": "List",
                                                            "description": "List GUI element."
                                                        },
                                                        "FortiGateObject": {
                                                            "type": "string",
                                                            "title": "FortiGate Object",
                                                            "description": "FortiGate object GUI element."
                                                        },
                                                        "Table": {
                                                            "type": "string",
                                                            "title": "Table",
                                                            "description": "Table GUI element."
                                                        },
                                                        "DropDown": {
                                                            "type": "string",
                                                            "title": "Dropdown",
                                                            "description": "Dropdown GUI element."
                                                        },
                                                        "Input": {
                                                            "type": "string",
                                                            "title": "Input",
                                                            "description": "Input GUI element."
                                                        },
                                                        "Toggle": {
                                                            "type": "string",
                                                            "title": "Toggle",
                                                            "description": "Toggle GUI element."
                                                        }
                                                    }
                                                },
                                                "SUPPORTED_OPERATIONS_MAP": {
                                                    "type": "object",
                                                    "title": "Supported Operations",
                                                    "description": "Supported operations map.",
                                                    "required": [
                                                        "APPEND",
                                                        "SPLICE",
                                                        "UPDATE",
                                                        "POST",
                                                        "DEFAULT"
                                                    ],
                                                    "properties": {
                                                        "APPEND": {
                                                            "type": "string",
                                                            "title": "Append",
                                                            "description": "Append."
                                                        },
                                                        "SPLICE": {
                                                            "type": "string",
                                                            "title": "Splice",
                                                            "description": "Splice."
                                                        },
                                                        "UPDATE": {
                                                            "type": "string",
                                                            "title": "Update",
                                                            "description": "Update."
                                                        },
                                                        "POST": {
                                                            "type": "string",
                                                            "title": "Post",
                                                            "description": "Post."
                                                        },
                                                        "DEFAULT": {
                                                            "type": "string",
                                                            "title": "Default",
                                                            "description": "Default."
                                                        }
                                                    }
                                                },
                                                "USER_INPUT_TRANSLATION": {
                                                    "type": "object",
                                                    "title": "User Input Translation",
                                                    "description": "User input translation.",
                                                    "required": [
                                                        "EMPTY_STRING",
                                                        "FALSE"
                                                    ],
                                                    "properties": {
                                                        "EMPTY_STRING": {
                                                            "type": "string",
                                                            "title": "Empty String",
                                                            "description": "Empty string."
                                                        },
                                                        "FALSE": {
                                                            "type": "string",
                                                            "title": "False",
                                                            "description": "False."
                                                        }
                                                    }
                                                },
                                                "SUPPORTED_OPERATIONS": {
                                                    "type": "array",
                                                    "title": "Supported Operations",
                                                    "description": "Supported Operations."
                                                },
                                                "RESULT": {
                                                    "type": "object",
                                                    "title": "Result Status Strings",
                                                    "description": "Result status strings.",
                                                    "required": [
                                                        "PENDING",
                                                        "EXECUTION_ERROR",
                                                        "DEPENDENCIES_NOT_MET",
                                                        "EXEMPT",
                                                        "FAILED",
                                                        "PASSED",
                                                        "NOT_LICENSED"
                                                    ],
                                                    "properties": {
                                                        "PENDING": {
                                                            "type": "string",
                                                            "title": "Pending",
                                                            "description": "Pending state."
                                                        },
                                                        "EXECUTION_ERROR": {
                                                            "type": "string",
                                                            "title": "Execution Error",
                                                            "description": "Check failed due to an error during execution."
                                                        },
                                                        "DEPENDENCIES_NOT_MET": {
                                                            "type": "string",
                                                            "title": "Dependencies Not Met",
                                                            "description": "Dependencies not met for a check to run."
                                                        },
                                                        "EXEMPT": {
                                                            "type": "string",
                                                            "title": "Exempt",
                                                            "description": "Check was exempt from this batch of reports."
                                                        },
                                                        "FAILED": {
                                                            "type": "string",
                                                            "title": "Failed",
                                                            "description": "Check failed."
                                                        },
                                                        "PASSED": {
                                                            "type": "string",
                                                            "title": "Passed",
                                                            "description": "Check passed."
                                                        },
                                                        "NOT_LICENSED": {
                                                            "type": "string",
                                                            "title": "Not Licensed",
                                                            "description": "Security Rating is not licensed to run this check."
                                                        }
                                                    }
                                                },
                                                "SEVERITY_LEVELS": {
                                                    "type": "object",
                                                    "title": "Severity Levels",
                                                    "description": "Possible Severity Levels of Check Failure.",
                                                    "required": [
                                                        "NONE",
                                                        "LOW",
                                                        "MEDIUM",
                                                        "HIGH",
                                                        "CRITICAL"
                                                    ],
                                                    "properties": {
                                                        "NONE": {
                                                            "type": "string",
                                                            "title": "None",
                                                            "description": "None."
                                                        },
                                                        "LOW": {
                                                            "type": "string",
                                                            "title": "Low",
                                                            "description": "Low."
                                                        },
                                                        "MEDIUM": {
                                                            "type": "string",
                                                            "title": "Medium",
                                                            "description": "Medium."
                                                        },
                                                        "HIGH": {
                                                            "type": "string",
                                                            "title": "High",
                                                            "description": "High."
                                                        },
                                                        "CRITICAL": {
                                                            "type": "string",
                                                            "title": "Critical",
                                                            "description": "Critical."
                                                        }
                                                    }
                                                },
                                                "SEVERITY_LEVEL_WEIGHT": {
                                                    "type": "object",
                                                    "title": "Severity Level Weight",
                                                    "description": "Defines the impact of each severity level on the score.",
                                                    "required": [
                                                        "low",
                                                        "medium",
                                                        "high",
                                                        "critical"
                                                    ],
                                                    "properties": {
                                                        "low": {
                                                            "type": "integer",
                                                            "title": "Low",
                                                            "description": "Low."
                                                        },
                                                        "medium": {
                                                            "type": "integer",
                                                            "title": "Medium",
                                                            "description": "Medium."
                                                        },
                                                        "high": {
                                                            "type": "integer",
                                                            "title": "High",
                                                            "description": "High."
                                                        },
                                                        "critical": {
                                                            "type": "integer",
                                                            "title": "Critical",
                                                            "description": "Critical."
                                                        }
                                                    }
                                                },
                                                "SEVERITY_LEVEL_INDEX": {
                                                    "type": "object",
                                                    "title": "Severity Level Index",
                                                    "description": "Severity level index.",
                                                    "required": [
                                                        "none",
                                                        "low",
                                                        "medium",
                                                        "high",
                                                        "critical"
                                                    ],
                                                    "properties": {
                                                        "none": {
                                                            "type": "integer",
                                                            "title": "None",
                                                            "description": "None."
                                                        },
                                                        "low": {
                                                            "type": "integer",
                                                            "title": "Low",
                                                            "description": "Low."
                                                        },
                                                        "medium": {
                                                            "type": "integer",
                                                            "title": "Medium",
                                                            "description": "Medium."
                                                        },
                                                        "high": {
                                                            "type": "integer",
                                                            "title": "High",
                                                            "description": "High."
                                                        },
                                                        "critical": {
                                                            "type": "integer",
                                                            "title": "Critical",
                                                            "description": "Critical."
                                                        }
                                                    }
                                                },
                                                "RUN_TIME_VALUE": {
                                                    "type": "string",
                                                    "title": "Runtime Value",
                                                    "description": "Runtime value."
                                                },
                                                "DATA_TYPES": {
                                                    "type": "object",
                                                    "title": "Data Types",
                                                    "description": "Data types for string interpolation on the GUI.",
                                                    "required": [
                                                        "STRING",
                                                        "DATE",
                                                        "DATE_TIME"
                                                    ],
                                                    "properties": {
                                                        "STRING": {
                                                            "type": "string",
                                                            "title": "String",
                                                            "description": "String data type."
                                                        },
                                                        "DATE": {
                                                            "type": "string",
                                                            "title": "Date",
                                                            "description": "Date data type."
                                                        },
                                                        "DATE_TIME": {
                                                            "type": "string",
                                                            "title": "Date-Time",
                                                            "description": "Date-Time data type."
                                                        }
                                                    }
                                                },
                                                "VALIDATION_TYPES": {
                                                    "type": "object",
                                                    "title": "Validation Types",
                                                    "description": "Keys for pattern matching and validation.",
                                                    "required": [
                                                        "XSS",
                                                        "FGT_HOSTNAME"
                                                    ],
                                                    "properties": {
                                                        "XSS": {
                                                            "type": "string",
                                                            "title": "XSS",
                                                            "description": "XSS pattern."
                                                        },
                                                        "FGT_HOSTNAME": {
                                                            "type": "string",
                                                            "title": "FortiGate Hostname",
                                                            "description": "FortiGate hostname pattern."
                                                        }
                                                    }
                                                },
                                                "MATURITY_LEVELS": {
                                                    "type": "array",
                                                    "title": "Maturity Levels",
                                                    "description": "Structure of a Maturity Level object."
                                                },
                                                "COMPLIANCE": {
                                                    "type": "object",
                                                    "title": "Compliance",
                                                    "description": "Compliance abbreviations.",
                                                    "required": [
                                                        "FSBP",
                                                        "PCI"
                                                    ],
                                                    "properties": {
                                                        "FSBP": {
                                                            "type": "string",
                                                            "title": "FSBP",
                                                            "description": "Fortinet Security Best Practices."
                                                        },
                                                        "PCI": {
                                                            "type": "string",
                                                            "title": "PCI",
                                                            "description": "PCI security compliance."
                                                        }
                                                    }
                                                },
                                                "DEVICES": {
                                                    "type": "object",
                                                    "title": "Devices",
                                                    "description": "Devices that the checks are run for.",
                                                    "required": [
                                                        "FORTIGATE",
                                                        "FORTIANALYZER",
                                                        "FORTIMANAGER",
                                                        "FORTIAP",
                                                        "FORTIEXTENDER",
                                                        "FORTISWITCH",
                                                        "FORTICASB",
                                                        "FORTIMAIL",
                                                        "FORTINAC",
                                                        "FORTIVOICE",
                                                        "FORTIWEB",
                                                        "FORTIMONITOR"
                                                    ],
                                                    "properties": {
                                                        "FORTIGATE": {
                                                            "type": "string",
                                                            "title": "FortiGate",
                                                            "description": "FortiGate."
                                                        },
                                                        "FORTIANALYZER": {
                                                            "type": "string",
                                                            "title": "FortiAnalyzer",
                                                            "description": "FortiAnalyzer."
                                                        },
                                                        "FORTIMANAGER": {
                                                            "type": "string",
                                                            "title": "FortiManager",
                                                            "description": "FortiManager."
                                                        },
                                                        "FORTIAP": {
                                                            "type": "string",
                                                            "title": "FortiAP",
                                                            "description": "FortiAP."
                                                        },
                                                        "FORTIEXTENDER": {
                                                            "type": "string",
                                                            "title": "FortiExtender",
                                                            "description": "FortiExtender."
                                                        },
                                                        "FORTISWITCH": {
                                                            "type": "string",
                                                            "title": "FortiSwitch",
                                                            "description": "FortiSwitch."
                                                        },
                                                        "FORTICASB": {
                                                            "type": "string",
                                                            "title": "FortiCASB",
                                                            "description": "FortiCASB."
                                                        },
                                                        "FORTIMAIL": {
                                                            "type": "string",
                                                            "title": "FortiMail",
                                                            "description": "FortiMail."
                                                        },
                                                        "FORTINAC": {
                                                            "type": "string",
                                                            "title": "FortiNAC",
                                                            "description": "FortiNAC."
                                                        },
                                                        "FORTIVOICE": {
                                                            "type": "string",
                                                            "title": "FortiVoice",
                                                            "description": "FortiVoice."
                                                        },
                                                        "FORTIWEB": {
                                                            "type": "string",
                                                            "title": "FortiWeb",
                                                            "description": "FortiWeb."
                                                        },
                                                        "FORTIMONITOR": {
                                                            "type": "string",
                                                            "title": "FortiMonitor",
                                                            "description": "FortiMonitor."
                                                        }
                                                    }
                                                },
                                                "ORGANIZATION_SIZES": {
                                                    "type": "array",
                                                    "title": "Organization Sizes",
                                                    "description": "Organization sizes."
                                                },
                                                "ORGANIZATION_SIZE_RANGES": {
                                                    "type": "object",
                                                    "title": "Organization Size Ranges",
                                                    "description": "Organization size ranges.",
                                                    "required": [
                                                        "SMB",
                                                        "ENT",
                                                        "LENT",
                                                        "GENT"
                                                    ],
                                                    "properties": {
                                                        "SMB": {
                                                            "type": "object",
                                                            "title": "Small-Medium Business",
                                                            "description": "Small-Medium business.",
                                                            "required": [
                                                                "min",
                                                                "max"
                                                            ],
                                                            "properties": {
                                                                "min": {
                                                                    "type": "integer",
                                                                    "title": "Range Min",
                                                                    "description": "Range minimum."
                                                                },
                                                                "max": {
                                                                    "type": "integer",
                                                                    "title": "Range Max",
                                                                    "description": "Range maximum."
                                                                }
                                                            }
                                                        },
                                                        "ENT": {
                                                            "type": "object",
                                                            "title": "Enterprise",
                                                            "description": "Enterprise.",
                                                            "required": [
                                                                "min",
                                                                "max"
                                                            ],
                                                            "properties": {
                                                                "min": {
                                                                    "type": "integer",
                                                                    "title": "Range Min",
                                                                    "description": "Range minimum."
                                                                },
                                                                "max": {
                                                                    "type": "integer",
                                                                    "title": "Range Max",
                                                                    "description": "Range maximum."
                                                                }
                                                            }
                                                        },
                                                        "LENT": {
                                                            "type": "object",
                                                            "title": "Large Enterprise",
                                                            "description": "Large enterprise.",
                                                            "required": [
                                                                "min",
                                                                "max"
                                                            ],
                                                            "properties": {
                                                                "min": {
                                                                    "type": "integer",
                                                                    "title": "Range Min",
                                                                    "description": "Range minimum."
                                                                },
                                                                "max": {
                                                                    "type": "integer",
                                                                    "title": "Range Max",
                                                                    "description": "Range maximum."
                                                                }
                                                            }
                                                        },
                                                        "GENT": {
                                                            "type": "object",
                                                            "title": "Global Enterprise",
                                                            "description": "Large enterprise.",
                                                            "required": [
                                                                "min"
                                                            ],
                                                            "properties": {
                                                                "min": {
                                                                    "type": "integer",
                                                                    "title": "Range Min",
                                                                    "description": "Range minimum."
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "detectedEndpointTypes": {
                                            "type": "object",
                                            "title": "Detected Endpoint Types",
                                            "description": "Cumulative numbers for types of endpoints in the topology.",
                                            "additionalProperties": {
                                                "title": "Number of Endpoint Devices",
                                                "description": "Number of endpoint devices in the topology, by type.",
                                                "type": "integer"
                                            }
                                        },
                                        "detectedEndpointChange": {
                                            "type": "integer",
                                            "title": "Detected Endpoint Change",
                                            "description": "Change in number of endpoints in the topology."
                                        },
                                        "_performance": {
                                            "type": "array",
                                            "title": "Report Performance",
                                            "description": "List of entries for checking report generation performance.",
                                            "items": {
                                                "type": "object",
                                                "title": "Performance Entry",
                                                "description": "Details of a report performance entry.",
                                                "required": [
                                                    "name",
                                                    "entryType",
                                                    "startTime",
                                                    "duration"
                                                ],
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "title": "Entry Name",
                                                        "description": "Describes the section of code that this entry is measuring performance for."
                                                    },
                                                    "entryType": {
                                                        "type": "string",
                                                        "title": "Entry Type",
                                                        "description": "Type of the performance entry.",
                                                        "enum": [
                                                            "node",
                                                            "mark",
                                                            "measure",
                                                            "function",
                                                            "gc",
                                                            "http",
                                                            "http2"
                                                        ]
                                                    },
                                                    "startTime": {
                                                        "type": "number",
                                                        "title": "Entry Start Time",
                                                        "description": "The high resolution millisecond timestamp marking the starting time of the Performance Entry."
                                                    },
                                                    "duration": {
                                                        "type": "number",
                                                        "title": "Entry Elapsed Time",
                                                        "description": "The total number of milliseconds elapsed for this entry."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "title": "Topology Report",
                                    "type": "object",
                                    "description": "Details of a topology report.",
                                    "required": [
                                        "topology"
                                    ],
                                    "properties": {
                                        "topology": {
                                            "type": "object",
                                            "title": "Topology Schema",
                                            "description": "Schema for topology objects (nodes and edges).",
                                            "required": [
                                                "nodes",
                                                "edges",
                                                "summary"
                                            ],
                                            "properties": {
                                                "nodes": {
                                                    "type": "array",
                                                    "title": "Topology Nodes",
                                                    "description": "List of topology nodes.",
                                                    "items": {
                                                        "type": "object",
                                                        "title": "Node Properties",
                                                        "description": "Details of a topology node.",
                                                        "required": [
                                                            "id",
                                                            "type",
                                                            "interactType"
                                                        ],
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "title": "Node ID",
                                                                "description": "ID that uniquely identifies this node."
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "title": "Node Type",
                                                                "description": "Type of node. Used to determine unique rendering or interaction behavior.",
                                                                "enum": [
                                                                    "icon",
                                                                    "container",
                                                                    "icon-group",
                                                                    "topology-container"
                                                                ]
                                                            },
                                                            "sub-topology": {
                                                                "type": "object",
                                                                "title": "Nested Topology Schema",
                                                                "description": "Schema for nested topology objects (nodes and edges).",
                                                                "required": [
                                                                    "nodes",
                                                                    "edges"
                                                                ],
                                                                "properties": {
                                                                    "nodes": {
                                                                        "type": "array",
                                                                        "title": "Topology Nodes",
                                                                        "description": "List of nested topology nodes."
                                                                    },
                                                                    "edges": {
                                                                        "type": "array",
                                                                        "title": "The Multi-Edges Schema",
                                                                        "description": "List of nested topology multi-edges."
                                                                    }
                                                                }
                                                            },
                                                            "interactType": {
                                                                "type": "string",
                                                                "title": "Node Interact Types",
                                                                "description": "Interaction types supported by the node. Used to determine client-specific interactions for a node.",
                                                                "enum": [
                                                                    "upstream-fortigate",
                                                                    "global-fortigate",
                                                                    "fortigate",
                                                                    "fortiswitch",
                                                                    "fortiap",
                                                                    "fortianalyzer",
                                                                    "fortiextender",
                                                                    "fabric-connector",
                                                                    "generic-fabric-device",
                                                                    "servers",
                                                                    "endpoint-devices",
                                                                    "cloud",
                                                                    "destination-countries",
                                                                    "destination-ips",
                                                                    "destination-owners",
                                                                    "hardware-vendor-group",
                                                                    "os-name-group",
                                                                    "server-group",
                                                                    "device-group",
                                                                    "topology-container"
                                                                ]
                                                            },
                                                            "iconClass": {
                                                                "type": "string",
                                                                "title": "Node Icon Class",
                                                                "description": "Font icon class for the node. Only applicable for 'icon' node types."
                                                            },
                                                            "iconColor": {
                                                                "type": "string",
                                                                "title": "Hexadecimal Icon Color",
                                                                "description": "Icon color (hexadecimal). Only applicable for 'icon' node types."
                                                            },
                                                            "subIconClass": {
                                                                "type": "string",
                                                                "title": "Node Icon Class",
                                                                "description": "Font icon class for the node's sub-icon. Only applicable for 'icon' node types."
                                                            },
                                                            "subIconColor": {
                                                                "type": "string",
                                                                "title": "Hexadecimal Icon Color",
                                                                "description": "Icon color (hexadecimal). Only applicable for 'icon' nodes with sub-icons."
                                                            },
                                                            "iconGroupLabel": {
                                                                "type": "string",
                                                                "title": "Icon Group Label",
                                                                "description": "Label for the icon group."
                                                            },
                                                            "iconGroupMembers": {
                                                                "type": "array",
                                                                "title": "Icon Group Members",
                                                                "description": "List of icon group members.",
                                                                "items": {
                                                                    "type": "object",
                                                                    "title": "Icon Group Member",
                                                                    "description": "Details of an icon group member.",
                                                                    "required": [
                                                                        "iconClass",
                                                                        "id",
                                                                        "label",
                                                                        "type"
                                                                    ],
                                                                    "properties": {
                                                                        "iconClass": {
                                                                            "type": "string",
                                                                            "title": "Icon Group Member Icon Class",
                                                                            "description": "Font icon class for the icon group member."
                                                                        },
                                                                        "id": {
                                                                            "type": "string",
                                                                            "title": "Icon Group Member ID",
                                                                            "description": "Unique ID of the icon group member. Used to determine unique rendering or interaction behavior."
                                                                        },
                                                                        "label": {
                                                                            "type": "string",
                                                                            "title": "Icon Group Member Label",
                                                                            "description": "Label for the icon group member."
                                                                        },
                                                                        "type": {
                                                                            "type": "string",
                                                                            "title": "Icon Group Member Type",
                                                                            "description": "Type of the icon group member. Used to determine unique rendering or interaction behavior.",
                                                                            "enum": [
                                                                                "icon"
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "spanningTreeRoot": {
                                                                "type": "boolean",
                                                                "title": "Is Spanning Tree Root",
                                                                "description": "True when the node is the spanning tree root for the topology."
                                                            },
                                                            "caption": {
                                                                "type": "string",
                                                                "title": "Node Caption",
                                                                "description": "Localized node caption that should be shown alongside the label."
                                                            },
                                                            "label": {
                                                                "type": "string",
                                                                "title": "Node Label",
                                                                "description": "Label for a given node."
                                                            },
                                                            "labelClass": {
                                                                "type": "string",
                                                                "title": "Node Label Class",
                                                                "description": "CSS class for the node label."
                                                            },
                                                            "alwaysVisible": {
                                                                "type": "boolean",
                                                                "title": "Node Visibility",
                                                                "description": "True when node visibility is toggleable."
                                                            },
                                                            "hasLeftBranchToggle": {
                                                                "type": "boolean",
                                                                "title": "Has Left Branch Toggle",
                                                                "description": "True when the node's left branch is toggleable. Note: This assumes a left-to-right layout for the topology."
                                                            },
                                                            "iconBadges": {
                                                                "type": "array",
                                                                "title": "Node Icon Badges",
                                                                "description": "Icon badges for the node. Only applicable for 'icon' node types."
                                                            },
                                                            "numberBubbleBadges": {
                                                                "type": "array",
                                                                "title": "Number Bubble Badges",
                                                                "description": "Number bubble badges displayed alongside the node.",
                                                                "items": {
                                                                    "type": "object",
                                                                    "title": "Number Bubble Badge Schema",
                                                                    "description": "Details of a number bubble badge.",
                                                                    "required": [
                                                                        "numberBubble",
                                                                        "severity",
                                                                        "tooltip",
                                                                        "position",
                                                                        "color",
                                                                        "interactType"
                                                                    ],
                                                                    "properties": {
                                                                        "numberBubble": {
                                                                            "type": "integer",
                                                                            "title": "Number Bubble Value",
                                                                            "description": "Numeric value of the number bubble."
                                                                        },
                                                                        "severity": {
                                                                            "type": "string",
                                                                            "title": "Number Bubble Severity",
                                                                            "description": "Severity state associated with the number bubble.",
                                                                            "enum": [
                                                                                "none",
                                                                                "low",
                                                                                "medium",
                                                                                "high",
                                                                                "critical"
                                                                            ]
                                                                        },
                                                                        "tooltip": {
                                                                            "type": "string",
                                                                            "title": "Number Bubble Tooltip Text",
                                                                            "description": "Text to be displayed inside a tooltip for the number bubble."
                                                                        },
                                                                        "position": {
                                                                            "type": "string",
                                                                            "title": "Number Bubble Position",
                                                                            "description": "The position of the node's number bubble relative to the node's icon.",
                                                                            "enum": [
                                                                                "topRight"
                                                                            ]
                                                                        },
                                                                        "color": {
                                                                            "type": "string",
                                                                            "title": "Number Bubble Color",
                                                                            "description": "Hexadecimal number bubble color."
                                                                        },
                                                                        "interactType": {
                                                                            "type": "string",
                                                                            "title": "Number Bubble Interact Type",
                                                                            "description": "Specifies the client-specific interactions for number bubble."
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "placement": {
                                                                "type": "string",
                                                                "title": "Node Placement",
                                                                "description": "Placement of the node. Used to identify leaf vs non-leaf nodes of the topology.",
                                                                "enum": [
                                                                    "branch",
                                                                    "leaf"
                                                                ]
                                                            },
                                                            "subType": {
                                                                "type": "string",
                                                                "title": "Node Subtype",
                                                                "description": "Subtype of the node. Used to further categorize 'container' type nodes.",
                                                                "enum": [
                                                                    "square-pack",
                                                                    "circle-pack",
                                                                    "multi-group"
                                                                ]
                                                            },
                                                            "donutLabel": {
                                                                "type": "string",
                                                                "title": "Donut Label",
                                                                "description": "Only applicable for 'container' type nodes (they are shown as donuts by default)."
                                                            },
                                                            "donutGroupByKey": {
                                                                "type": "string",
                                                                "title": "Donut Grouping Key",
                                                                "description": "Only applicable for 'container' type nodes. Their member nodes are organized into donut segments according to the value of this key.",
                                                                "enum": [
                                                                    "displayName",
                                                                    "addressType",
                                                                    "iconKey",
                                                                    "label"
                                                                ]
                                                            },
                                                            "donutGroupSumKey": {
                                                                "type": "string",
                                                                "title": "Donut Grouping Sum Key",
                                                                "description": "Only applicable for 'container' type nodes. Their member nodes are organized into donut segments according to the value of this key.",
                                                                "enum": [
                                                                    "hostCount"
                                                                ]
                                                            },
                                                            "tableContent": {
                                                                "type": "array",
                                                                "title": "Node Table Contents",
                                                                "description": "List of node ports, represented as a table, for drawing edge connections between nodes.",
                                                                "items": {
                                                                    "type": "object",
                                                                    "title": "The Items Schema",
                                                                    "description": "Details of the Node Table Content Item.",
                                                                    "required": [
                                                                        "interactType",
                                                                        "iconClass",
                                                                        "id",
                                                                        "label"
                                                                    ],
                                                                    "properties": {
                                                                        "interactType": {
                                                                            "type": "string",
                                                                            "title": "Table Row Interact Type",
                                                                            "description": "Specifies the client-specific interactions for the table row.",
                                                                            "enum": [
                                                                                "interface",
                                                                                "vdom"
                                                                            ]
                                                                        },
                                                                        "iconClass": {
                                                                            "type": "string",
                                                                            "title": "Table Row Icon Class",
                                                                            "description": "Icon class for the table row. Usually determined by the corresponding port's type and link state."
                                                                        },
                                                                        "id": {
                                                                            "type": "string",
                                                                            "title": "Table Row ID",
                                                                            "description": "Unique ID for the table row. Used for determining client-specific behavior."
                                                                        },
                                                                        "label": {
                                                                            "type": "string",
                                                                            "title": "Table Row Label",
                                                                            "description": "Text label for the table row."
                                                                        },
                                                                        "labelFontWeight": {
                                                                            "type": "string",
                                                                            "title": "Label Font Weight",
                                                                            "description": "Font weight for the label text.",
                                                                            "enum": [
                                                                                "bold"
                                                                            ]
                                                                        },
                                                                        "parentId": {
                                                                            "type": "string",
                                                                            "title": "Parent Table Row ID",
                                                                            "description": "ID of the parent table row. Used to determine table row grouping and hierarchy."
                                                                        },
                                                                        "indentLevel": {
                                                                            "type": "integer",
                                                                            "title": "Table Row Indentation Level",
                                                                            "description": "Indentation level for the table row. Used to depict parent-child hierarchy between table rows. Only application for table rows with a parentID attribute."
                                                                        },
                                                                        "fillColor": {
                                                                            "type": "string",
                                                                            "title": "Table Row Fill Color",
                                                                            "description": "Hexadecimal fill color for the table row."
                                                                        },
                                                                        "serialized": {
                                                                            "type": "object",
                                                                            "title": "Serialized Table Row Data",
                                                                            "description": "Serialized data for the table row. Contains port or portgroup related information to generate client-side interactions.",
                                                                            "properties": [],
                                                                            "additionalProperties": true
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "serialized": {
                                                                "type": "object",
                                                                "title": "Serialized Node Properties",
                                                                "description": "Properties of the serialized node. Used to construct client-side models associated with this node.",
                                                                "properties": [],
                                                                "additionalProperties": true
                                                            },
                                                            "contents": {
                                                                "anyOf": [
                                                                    {
                                                                        "type": "array",
                                                                        "title": "Container Node Contents",
                                                                        "description": "List of member nodes for the container node. Only available in 'container' node types.",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "title": "Container Member Schema",
                                                                            "description": "Schema for members of the container node.",
                                                                            "required": [
                                                                                "interactType",
                                                                                "type",
                                                                                "iconClass"
                                                                            ],
                                                                            "properties": {
                                                                                "interactType": {
                                                                                    "type": "string",
                                                                                    "title": "Member Node Interact Type",
                                                                                    "description": "Specifies the client-specific interactions for the member node.",
                                                                                    "enum": [
                                                                                        "server",
                                                                                        "endpoint-device",
                                                                                        "device",
                                                                                        "os-name",
                                                                                        "hardware-vendor",
                                                                                        "destination-owner",
                                                                                        "destination-ip",
                                                                                        "destination-country"
                                                                                    ]
                                                                                },
                                                                                "type": {
                                                                                    "type": "string",
                                                                                    "title": "Member Node Type",
                                                                                    "description": "Type of member node. Used to determine unique rendering or interaction behavior for the member node.",
                                                                                    "enum": [
                                                                                        "icon"
                                                                                    ]
                                                                                },
                                                                                "id": {
                                                                                    "type": "string",
                                                                                    "title": "Member Node ID",
                                                                                    "description": "Unique ID for the member node."
                                                                                },
                                                                                "label": {
                                                                                    "type": "string",
                                                                                    "title": "Member Node Label",
                                                                                    "description": "Label for the member node."
                                                                                },
                                                                                "iconClass": {
                                                                                    "type": "string",
                                                                                    "title": "Member Node Icon Class",
                                                                                    "description": "Font icon class for the member node."
                                                                                },
                                                                                "iconKey": {
                                                                                    "type": "string",
                                                                                    "title": "Member Node Icon Key",
                                                                                    "description": "Original key used to look up the member node's icon class. This can be used to group similar member nodes."
                                                                                },
                                                                                "fillColor": {
                                                                                    "type": "string",
                                                                                    "title": "Member Node Fill Color",
                                                                                    "description": "Hexadecimal color for the member node (only applicable for endpoint nodes)."
                                                                                },
                                                                                "borderColors": {
                                                                                    "type": "array",
                                                                                    "title": "Member Node Border Colors",
                                                                                    "description": "List of hexadecimal colors applied to the member node's borders.",
                                                                                    "items": {
                                                                                        "type": "string",
                                                                                        "title": "Border Color",
                                                                                        "description": "Hexadecimal border color."
                                                                                    }
                                                                                },
                                                                                "formattedValue": {
                                                                                    "type": "string",
                                                                                    "title": "Formatted Value",
                                                                                    "description": "The formatted value (with units) associated with the member node."
                                                                                },
                                                                                "value": {
                                                                                    "type": "integer",
                                                                                    "title": "Member Node Value",
                                                                                    "description": "The numeric value associated with the member node. Used to determine sorting and size of the node."
                                                                                },
                                                                                "iconBadge": {
                                                                                    "type": "object",
                                                                                    "title": "Member Node Icon Badge",
                                                                                    "description": "Icon badge for the member node. Usually a composite icon with 'main' and 'effect' sub-icons.",
                                                                                    "required": [
                                                                                        "main",
                                                                                        "effect",
                                                                                        "color"
                                                                                    ],
                                                                                    "properties": {
                                                                                        "main": {
                                                                                            "type": "string",
                                                                                            "title": "Main Icon",
                                                                                            "description": "Font icon class for the base icon in the icon badge."
                                                                                        },
                                                                                        "effect": {
                                                                                            "type": "string",
                                                                                            "title": "Sub-Icon",
                                                                                            "description": "Font icon class for the sub-icon in the icon badge."
                                                                                        },
                                                                                        "color": {
                                                                                            "type": "string",
                                                                                            "title": "Icon Badge Color",
                                                                                            "description": "The color of the effect sub-icon in the badge."
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "count": {
                                                                                    "title": "Number of Members",
                                                                                    "description": "Number of members in a particular group. Only applicable for multi-group type nodes.",
                                                                                    "type": "integer"
                                                                                },
                                                                                "addressType": {
                                                                                    "title": "Destination Address Type",
                                                                                    "description": "Address type of the destination. Only applicable for member nodes that belong to a container with 'destination' interactType.",
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "internet",
                                                                                        "internal"
                                                                                    ]
                                                                                },
                                                                                "hostCount": {
                                                                                    "title": "Destination Host Count",
                                                                                    "description": "Number of destination hosts. Only applicable for member nodes that belong to a container with 'destination' interactType.",
                                                                                    "type": "integer"
                                                                                },
                                                                                "serialized": {
                                                                                    "title": "Serialized Properties",
                                                                                    "description": "Serialized properties for the member node. Used to construct client-side models for the member node.",
                                                                                    "type": "object",
                                                                                    "properties": [],
                                                                                    "additionalProperties": true
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "array",
                                                                        "title": "Destination Container Node Contents",
                                                                        "description": "List of member nodes for the destination container node. Only available in 'container' node types with 'destination-*' interact types.",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "title": "Container Member Schema",
                                                                            "description": "Schema for members of the container node.",
                                                                            "required": [
                                                                                "interactType",
                                                                                "id"
                                                                            ],
                                                                            "properties": {
                                                                                "interactType": {
                                                                                    "type": "string",
                                                                                    "title": "Member Node Interact Type",
                                                                                    "description": "Specifies the client-specific interactions for the member node.",
                                                                                    "enum": [
                                                                                        "destination-owner",
                                                                                        "destination-ip",
                                                                                        "destination-country"
                                                                                    ]
                                                                                },
                                                                                "id": {
                                                                                    "type": "string",
                                                                                    "title": "Member Node ID",
                                                                                    "description": "Unique ID for the member node."
                                                                                },
                                                                                "label": {
                                                                                    "type": "string",
                                                                                    "title": "Member Node Label",
                                                                                    "description": "Label for the member node."
                                                                                },
                                                                                "value": {
                                                                                    "type": "integer",
                                                                                    "title": "Member Node Value",
                                                                                    "description": "The numeric value associated with the member node. Used to determine sorting and size of the node."
                                                                                },
                                                                                "addressType": {
                                                                                    "title": "Destination Address Type",
                                                                                    "description": "Address type of the destination. Only applicable for member nodes that belong to a container with 'destination' interactType.",
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "internet",
                                                                                        "internal"
                                                                                    ]
                                                                                },
                                                                                "hostCount": {
                                                                                    "title": "Destination Host Count",
                                                                                    "description": "Number of destination hosts. Only applicable for member nodes that belong to a container with 'destination' interactType.",
                                                                                    "type": "integer"
                                                                                },
                                                                                "serialized": {
                                                                                    "title": "Serialized Properties",
                                                                                    "description": "Serialized properties for the member node. Used to construct client-side models for the member node.",
                                                                                    "type": "object",
                                                                                    "properties": [],
                                                                                    "additionalProperties": true
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                },
                                                "edges": {
                                                    "type": "array",
                                                    "title": "The Multi-Edges Schema",
                                                    "description": "List of topology multi-edges.",
                                                    "items": {
                                                        "type": "object",
                                                        "title": "Multi-Edge Schema",
                                                        "description": "Details of a topology multi-edge.",
                                                        "properties": {
                                                            "properties": {
                                                                "type": "array",
                                                                "title": "The Multi-Edge Members Schema",
                                                                "description": "List of edges belonging to this multi-edge.",
                                                                "items": {
                                                                    "type": "object",
                                                                    "title": "Edge Member Schema",
                                                                    "description": "Details of an edge belonging to a multi-edge.",
                                                                    "properties": {
                                                                        "iconBadge": {
                                                                            "type": "object",
                                                                            "title": "Edge Icon Badge",
                                                                            "description": "Usually a composite icon with 'main' and 'effect' sub-icons. Typically drawn along the midpoint of the edge.",
                                                                            "required": [
                                                                                "main"
                                                                            ],
                                                                            "properties": {
                                                                                "main": {
                                                                                    "type": "string",
                                                                                    "title": "Main Icon",
                                                                                    "description": "Font icon class for the base icon of the badge."
                                                                                },
                                                                                "effect": {
                                                                                    "type": "string",
                                                                                    "title": "Sub Icon",
                                                                                    "description": "Font icon class for the sub-icon of the badge."
                                                                                },
                                                                                "color": {
                                                                                    "type": "string",
                                                                                    "title": "Icon Badge Color",
                                                                                    "description": "The color of the effect sub-icon in the badge."
                                                                                },
                                                                                "tooltip": {
                                                                                    "type": "string",
                                                                                    "title": "Icon Badge Tooltip Text",
                                                                                    "description": "Text to be displayed inside a tooltip for the icon badge."
                                                                                },
                                                                                "interactType": {
                                                                                    "type": "string",
                                                                                    "title": "Icon Badge Interact Type",
                                                                                    "description": "Specifies the client-specific interactions for the icon badge."
                                                                                }
                                                                            }
                                                                        },
                                                                        "nodeProperties": {
                                                                            "type": "object",
                                                                            "title": "Incident Node Properties",
                                                                            "description": "Dictionary map with incident node IDs as keys. The keys point to properties for the edge's incident nodes.",
                                                                            "properties": [],
                                                                            "additionalProperties": true
                                                                        },
                                                                        "color": {
                                                                            "type": "string",
                                                                            "title": "Edge Color",
                                                                            "description": "Color applied to the SVG path for this edge."
                                                                        },
                                                                        "strokeDasharray": {
                                                                            "type": "string",
                                                                            "title": "Stroke Dash Array",
                                                                            "description": "Stroke dash array applied to the SVG path for this edge."
                                                                        },
                                                                        "strokeWidth": {
                                                                            "type": "number",
                                                                            "title": "Stroke Width",
                                                                            "description": "Stroke width applied to the SVG path for this edge."
                                                                        },
                                                                        "interactType": {
                                                                            "type": "string",
                                                                            "title": "Edge Interact Type",
                                                                            "description": "Specifies the client-specific interactions for edge."
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "summary": {
                                                    "type": "object",
                                                    "title": "",
                                                    "description": "",
                                                    "required": [
                                                        "status"
                                                    ],
                                                    "properties": {
                                                        "status": {
                                                            "type": "array",
                                                            "title": "Device Status Summaries",
                                                            "description": "List of device status summaries.",
                                                            "items": {
                                                                "type": "object",
                                                                "title": "Device Status Summary",
                                                                "description": "Status summary for a specific device type.",
                                                                "required": [
                                                                    "type"
                                                                ],
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string",
                                                                        "title": "Device Type",
                                                                        "description": "The device type corresponding to this status summary."
                                                                    },
                                                                    "total": {
                                                                        "type": "integer",
                                                                        "title": "Total Device Count",
                                                                        "description": "The total number of devices of this type."
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "statistics": {
                                            "type": "object",
                                            "title": "Report Statistics",
                                            "description": "Statistics.",
                                            "properties": {
                                                "auditTime": {
                                                    "type": "integer",
                                                    "title": "Audit Time",
                                                    "description": "Time at which this report was executed, in milliseconds elapsed since Jan 1, 1970, 00:00:00 UTC."
                                                }
                                            },
                                            "additionalProperties": true
                                        },
                                        "params": {
                                            "type": "object",
                                            "title": "Report Parameters",
                                            "description": "Full list of API parameters (including defaults for missing ones) used to generate this report.",
                                            "properties": [],
                                            "additionalProperties": true
                                        },
                                        "_performance": {
                                            "type": "array",
                                            "title": "Report Performance",
                                            "description": "List of entries for checking report generation performance.",
                                            "items": {
                                                "type": "object",
                                                "title": "Performance Entry",
                                                "description": "Details of a report performance entry.",
                                                "required": [
                                                    "name",
                                                    "entryType",
                                                    "startTime",
                                                    "duration"
                                                ],
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "title": "Entry Name",
                                                        "description": "Describes the section of code that this entry is measuring performance for."
                                                    },
                                                    "entryType": {
                                                        "type": "string",
                                                        "title": "Entry Type",
                                                        "description": "Type of the performance entry.",
                                                        "enum": [
                                                            "node",
                                                            "mark",
                                                            "measure",
                                                            "function",
                                                            "gc",
                                                            "http",
                                                            "http2"
                                                        ]
                                                    },
                                                    "startTime": {
                                                        "type": "number",
                                                        "title": "Entry Start Time",
                                                        "description": "The high resolution millisecond timestamp marking the starting time of the Performance Entry."
                                                    },
                                                    "duration": {
                                                        "anyOf": [
                                                            {
                                                                "type": "number",
                                                                "title": "Entry Elapsed Time",
                                                                "description": "The total number of milliseconds elapsed for this entry."
                                                            },
                                                            {
                                                                "type": "integer",
                                                                "title": "Entry Elapsed Time",
                                                                "description": "The total number of milliseconds elapsed for this entry."
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ],
                            "additionalProperties": true,
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/security-rating.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Report ID.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "report_type",
                        "in": "query",
                        "description": "Report type to view, Security Report when unspecified.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Scope of the report [vdom*|global]. Global scope is only accessible for global administrators.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/security-rating\/supported-reports": {
            "get": {
                "summary": "Retrieve list of report types the Security Rating package supports.\nAccess Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Supported Security Rating Reports",
                            "description": "List of supported Security Rating report types.",
                            "type": "array",
                            "items": {
                                "title": "Report Type",
                                "description": "Type of report.",
                                "type": "string",
                                "enum": [
                                    "PostureReport",
                                    "CoverageReport",
                                    "OptimizationReport",
                                    "TopologyReport"
                                ]
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/security-rating.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/security-rating\/history": {
            "get": {
                "summary": "Retrieve Security Rating history.\nAccess Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Security Rating Report History",
                            "description": "List history about a specific Security Rating report type.",
                            "type": "array",
                            "items": {
                                "title": "Security Rating Report",
                                "description": "Details for a Security Rating Report.",
                                "type": "object",
                                "required": [
                                    "file_name",
                                    "id"
                                ],
                                "properties": {
                                    "file_name": {
                                        "type": "string",
                                        "title": "Report Filename",
                                        "description": "JSON file containing report results."
                                    },
                                    "id": {
                                        "type": "integer",
                                        "title": "Report ID",
                                        "description": "Unique ID of the report."
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/security-rating.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "report_type",
                        "in": "query",
                        "description": "Security Rating report history to view, view Security Report when unspecified.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/security-rating\/trigger": {
            "post": {
                "summary": "Run a Security Rating report.\nAccess Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "report_type": {
                                    "description": "Security Rating report to run, run all reports when unspecified.",
                                    "type": "string"
                                },
                                "report_types": {
                                    "description": "Multiple Security Rating reports to run, run all reports when unspecified.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/security-rating\/status": {
            "get": {
                "summary": "Check if a Security Rating report is currently running.\nAccess Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Security Rating Report Status",
                            "description": "Status for a running Security Rating report.",
                            "type": "object",
                            "required": [
                                "is_running"
                            ],
                            "properties": {
                                "is_running": {
                                    "title": "Report Status",
                                    "description": "True when the report is currently running.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": true,
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/security-rating.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Report ID.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "report_type",
                        "in": "query",
                        "description": "Report type to view, Security Report when unspecified.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "progress",
                        "in": "query",
                        "description": "Query report progress.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/check-port-availability": {
            "get": {
                "summary": "Check whether a list of TCP port ranges is available for a certain service.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "port_ranges",
                        "in": "query",
                        "description": "List of TCP port range objects to check against.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service",
                        "in": "query",
                        "description": "The service in which the ports could be available. 'service' options are [reserved | sysglobal | webproxy | ftpproxy | sslvpn | slaprobe | fsso | ftm_push]. If 'service' is not specified, the port ranges availability is checked against all services.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/external-resource\/entry-list": {
            "get": {
                "summary": "Retrieve resource file status with a list of valid\/invalid entries for the specific external resource. Empty lines and comment lines are not returned.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#",
                            "title": "External Resource Information",
                            "description": "Display the status of an external resource and list all of its entries.",
                            "type": "object",
                            "required": [
                                "status"
                            ],
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "title": "Connection Status",
                                    "description": "Connection status to the external resource.",
                                    "enum": [
                                        "disable",
                                        "error",
                                        "success",
                                        "unavailable"
                                    ]
                                },
                                "error": {
                                    "type": "string",
                                    "title": "Error Message",
                                    "description": "Error message for when the external resource entries cannot be retrieved."
                                },
                                "error_code": {
                                    "type": "integer",
                                    "title": "Error Code",
                                    "description": "Error code for when the external resource entries cannot be retrieved."
                                },
                                "http_status_code": {
                                    "type": "integer",
                                    "title": "HTTP Connection Status Code",
                                    "description": "HTTP status code for the connection to the external resource."
                                },
                                "conn_attempt_time": {
                                    "type": "integer",
                                    "title": "Connection Attempt Timestamp",
                                    "description": "Timestamp of when the last attempted connection to the external resource was made."
                                },
                                "resource_file_status": {
                                    "type": "string",
                                    "title": "File Status",
                                    "description": "Status of the external resource file.",
                                    "enum": [
                                        "downloaded",
                                        "unavailable"
                                    ]
                                },
                                "last_content_update_time": {
                                    "type": "integer",
                                    "title": "Last Content Update Timestamp",
                                    "description": "Timestamp of when the external resource file was last updated."
                                },
                                "last_conn_success_time": {
                                    "type": "integer",
                                    "title": "Last Successful Connection Timestamp",
                                    "description": "Timestamp of the last successful connection to the external resource."
                                },
                                "entries": {
                                    "type": "array",
                                    "title": "Entries List",
                                    "description": "List of entries in the external resource.",
                                    "items": {
                                        "type": "object",
                                        "title": "Entry",
                                        "description": "Details for an entry in the external resource.",
                                        "required": [
                                            "entry",
                                            "valid"
                                        ],
                                        "properties": {
                                            "entry": {
                                                "type": "string",
                                                "title": "Entry Content",
                                                "description": "Content of the entry."
                                            },
                                            "valid": {
                                                "type": "boolean",
                                                "title": "Entry Validity",
                                                "description": "True if the entry is valid."
                                            }
                                        }
                                    }
                                },
                                "invalid_count": {
                                    "type": "integer",
                                    "title": "Invalid Entries Count",
                                    "description": "Number of invalid entries in the resource file."
                                },
                                "valid_count": {
                                    "type": "integer",
                                    "title": "Valid Entries Count",
                                    "description": "Number of valid entries in the resource file."
                                },
                                "overflow": {
                                    "type": "boolean",
                                    "title": "Overflow of Entries",
                                    "description": "True if the number of entries in the resource file exceeds the maximum entry limit."
                                },
                                "notes": {
                                    "type": "array",
                                    "title": "Notes on External Resource",
                                    "description": "List of notes on the external resource.",
                                    "items": {
                                        "type": "object",
                                        "title": "Note",
                                        "description": "A note on the external resource.",
                                        "required": [
                                            "entry"
                                        ],
                                        "properties": {
                                            "entry": {
                                                "type": "string",
                                                "title": "Note",
                                                "description": "A note on the external resource."
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/external-resource.json"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "The external resource name to query.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "status_only",
                        "in": "query",
                        "description": "Set to true to retrieve resource file status only. (Skip valid\/invalid entries.)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "include_notes",
                        "in": "query",
                        "description": "Set to true to retrieve notes on the resource file.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/external-resource\/refresh": {
            "post": {
                "summary": "Fetch the external resource file and refresh status for the specified external resource.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#",
                            "title": "Refresh External Resource",
                            "description": "Update the connection status and entries of an external resource.",
                            "type": "object",
                            "required": [
                                "status"
                            ],
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "title": "Status",
                                    "description": "Status of the external resource refresh.",
                                    "enum": [
                                        "start",
                                        "pending",
                                        "finished",
                                        "error"
                                    ]
                                },
                                "last_connection_time": {
                                    "type": "integer",
                                    "title": "Last Connection Timestamp",
                                    "description": "Timestamp of when the last connection to the external resource was made."
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/external-resource.json"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkey": {
                                    "description": "The name of the external resource to query.",
                                    "type": "string"
                                },
                                "check_status_only": {
                                    "description": "Set to true to return only the refresh status.",
                                    "type": "boolean"
                                },
                                "last_connection_time": {
                                    "description": "The timestamp of last connection to the resource; used for checking refresh status.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/sdn-connector\/nsx-security-tags": {
            "get": {
                "summary": "Retrieve a list of NSX security tags for connected NSX servers.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Filter: NSX SDN connector name.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/sdn-connector\/status": {
            "get": {
                "summary": "Retrieve connection status for SDN connectors.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "SDN Connector Status Information",
                            "description": "List information about SDN connectors on this device.",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "title": "SDN Connector Status",
                                "description": "The status of an SDN connector.",
                                "required": [
                                    "name",
                                    "type",
                                    "status",
                                    "last_update"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "description": "Name of the SDN connector object."
                                    },
                                    "type": {
                                        "type": "string",
                                        "title": "Type",
                                        "enum": [
                                            "aci",
                                            "aci-direct",
                                            "alicloud",
                                            "aws",
                                            "azure",
                                            "gcp",
                                            "ibm",
                                            "kubernetes",
                                            "nsx",
                                            "nuage",
                                            "nutanix",
                                            "oci",
                                            "openstack",
                                            "sepm",
                                            "vmware"
                                        ],
                                        "description": "Type of the SDN connector."
                                    },
                                    "status": {
                                        "type": "string",
                                        "title": "Status",
                                        "enum": [
                                            "Disabled",
                                            "Down",
                                            "Unknown",
                                            "Up",
                                            "Updating"
                                        ],
                                        "description": "Status of the SDN connector."
                                    },
                                    "updating": {
                                        "type": "boolean",
                                        "title": "Updating",
                                        "description": "True when this SDN connector is currently updating dynamic objects."
                                    },
                                    "last_update": {
                                        "type": "integer",
                                        "title": "Last Update Time",
                                        "description": "The time when the SDN connector was last updated, in seconds."
                                    },
                                    "active_server": {
                                        "type": "string",
                                        "title": "Active Server",
                                        "description": "IP of the server that is currently being used by the SDN connector if there are multiple configured."
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/sdn-connector.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Filter: SDN connector name.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter: SDN connector type. Ignored if mkey is specified.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/sdn-connector\/update": {
            "post": {
                "summary": "Update an SDN connector's connection status.\nAccess Group: sysgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Update SDN Connector Status Information",
                            "description": "Update SDN connector information and return the updated status of the connector.",
                            "type": "object",
                            "required": [
                                "name",
                                "type",
                                "status"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "description": "Name of the SDN connector."
                                },
                                "type": {
                                    "type": "string",
                                    "title": "Type",
                                    "enum": [
                                        "aci",
                                        "aci-direct",
                                        "alicloud",
                                        "aws",
                                        "azure",
                                        "gcp",
                                        "ibm",
                                        "kubernetes",
                                        "nsx",
                                        "nuage",
                                        "nutanix",
                                        "oci",
                                        "openstack",
                                        "sepm",
                                        "vmware"
                                    ],
                                    "description": "Type of the SDN connector."
                                },
                                "status": {
                                    "type": "string",
                                    "title": "Status",
                                    "enum": [
                                        "Up",
                                        "Down",
                                        "Disabled",
                                        "Unknown"
                                    ],
                                    "description": "Updated status of the SDN connector."
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/system\/sdn-connector.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkey": {
                                    "description": "SDN connector name.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/system\/sdn-connector\/validate-gcp-key": {
            "post": {
                "summary": "Validate a string representing a private key from GCP in PEM format.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "private-key": {
                                    "description": "Private key in PEM format.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "system"
                ]
            }
        },
        "\/user\/firewall": {
            "get": {
                "summary": "List authenticated firewall users.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Starting entry index.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of entries to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ipv4",
                        "in": "query",
                        "description": "Include IPv4 user (default=true).",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ipv6",
                        "in": "query",
                        "description": "Include IPv6 users.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/firewall\/auth": {
            "post": {
                "summary": "Trigger authentication for a single firewall user.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "username": {
                                    "description": "User name.",
                                    "type": "string"
                                },
                                "ip": {
                                    "description": "User IP address.",
                                    "type": "string"
                                },
                                "ip_version": {
                                    "description": "IP version [ip4|ip6].",
                                    "type": "string"
                                },
                                "server": {
                                    "description": "Name of an existing LDAP server entry. If supplied, authenticate that user against any matched groups on that LDAP server.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/firewall\/deauth": {
            "post": {
                "summary": "Deauthenticate single, multiple, or all firewall users.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "user_type": {
                                    "description": "User type [proxy|firewall]. Required for both proxy and firewall users.",
                                    "type": "string"
                                },
                                "id": {
                                    "description": "User ID. Required for both proxy and firewall users.",
                                    "type": "integer"
                                },
                                "ip": {
                                    "description": "User IP address. Required for both proxy and firewall users.",
                                    "type": "string"
                                },
                                "ip_version": {
                                    "description": "IP version [ip4|ip6]. Only required if user_type is firewall.",
                                    "type": "string"
                                },
                                "method": {
                                    "description": "Authentication method [fsso|rsso|ntlm|firewall|wsso|fsso_citrix|sso_guest]. Only required if user_type is firewall.",
                                    "type": "string"
                                },
                                "all": {
                                    "description": "Set to true to deauthenticate all users. Other parameters will be ignored.",
                                    "type": "boolean"
                                },
                                "users": {
                                    "description": "Array of user objects to deauthenticate. Use this to deauthenticate multiple users at once. Each object should include the above properties.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/banned": {
            "get": {
                "summary": "Return a list of all banned users by IP.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/banned\/clear_users": {
            "post": {
                "summary": "Immediately clear a list of specific banned users by IP.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ip_addresses": {
                                    "description": "List of banned user IPs to clear. IPv4 and IPv6 addresses are allowed.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/banned\/add_users": {
            "post": {
                "summary": "Immediately add one or more users to the banned list.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ip_addresses": {
                                    "description": "List of IP Addresses to ban. IPv4 and IPv6 addresses are allowed.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "expiry": {
                                    "description": "Time until expiry in seconds. 0 for indefinite ban.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/banned\/clear_all": {
            "post": {
                "summary": "Immediately clear all banned users.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/banned\/check": {
            "get": {
                "summary": "Check if an IPv4 or IPv6 address is banned administratively.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Banned IP Address Check",
                            "description": "Check if an IP address is banned.",
                            "type": "object",
                            "required": [
                                "ip_address",
                                "is_banned"
                            ],
                            "properties": {
                                "ip_address": {
                                    "type": "string",
                                    "title": "IP Address",
                                    "description": "IPv4 or IPv6 address to check."
                                },
                                "is_banned": {
                                    "type": "boolean",
                                    "title": "Is Banned",
                                    "description": "True when the IP address is banned."
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/user\/banned.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "ip_address",
                        "in": "query",
                        "description": "IPv4 or IPv6 Address to check.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/fortitoken": {
            "get": {
                "summary": "Retrieve a map of FortiTokens and their status.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/fortitoken\/activate": {
            "post": {
                "summary": "Activate a set of FortiTokens by serial number.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "tokens": {
                                    "description": "List of FortiToken serial numbers to activate. If omitted, all tokens will be used.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/fortitoken-cloud\/status": {
            "get": {
                "summary": "Retrieve FortiToken Cloud service status.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiToken Cloud Service Status",
                            "description": "FortiToken Cloud service status.",
                            "type": "object",
                            "required": [
                                "point_balance",
                                "trial_status",
                                "user_count",
                                "user_limit"
                            ],
                            "properties": {
                                "point_balance": {
                                    "type": "number",
                                    "title": "Point Balance",
                                    "description": "Points remaining in the account balance."
                                },
                                "trial_status": {
                                    "type": "string",
                                    "title": "Trial Status",
                                    "description": "Current license status.",
                                    "enum": [
                                        "no_license",
                                        "in_trial",
                                        "licensed",
                                        "unknown"
                                    ]
                                },
                                "user_count": {
                                    "type": "integer",
                                    "title": "User Count",
                                    "description": "Number of FortiToken Cloud users associated with this account."
                                },
                                "user_limit": {
                                    "type": "integer",
                                    "title": "User Limit",
                                    "description": "Maximum number of FortiToken Cloud users for this account."
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/user\/fortitoken-cloud.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/collected-email": {
            "get": {
                "summary": "List email addresses collected from captive portal.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Collected Email",
                            "description": "Retrieve email addresses collected from captive portal.",
                            "type": "array",
                            "items": {
                                "title": "Collected Email Address Entry",
                                "description": "A collected email address from captive portal.",
                                "type": "object",
                                "required": [
                                    "collected_email"
                                ],
                                "properties": {
                                    "collected_email": {
                                        "type": "string",
                                        "title": "Collected Email",
                                        "description": "Email address collected from captive portal."
                                    },
                                    "duration_secs": {
                                        "type": "integer",
                                        "title": "Duration",
                                        "description": "Duration, in seconds."
                                    },
                                    "ipaddr": {
                                        "type": "string",
                                        "title": "IP Address",
                                        "description": "IPv4 or IPv6 address on which the email address is collected."
                                    },
                                    "expiry_secs": {
                                        "type": "integer",
                                        "title": "Expiry Time",
                                        "description": "Seconds remaining before captive portal expires the email address."
                                    },
                                    "traffic_vol_bytes": {
                                        "type": "integer",
                                        "title": "Traffic Volume",
                                        "description": "Total bytes used by traffic in and traffic out."
                                    },
                                    "mac": {
                                        "type": "string",
                                        "title": "MAC Address",
                                        "description": "MAC address on which the email address is collected."
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/user\/collected-email.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "ipv6",
                        "in": "query",
                        "description": "Include collected email from IPv6 users.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/device\/query": {
            "get": {
                "summary": "Retrieve user devices from user device store. List all the user devices if there is no filter set.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Detected Devices",
                            "description": "A list of detected devices.",
                            "type": "array",
                            "definitions": {
                                "user_info": {
                                    "type": "object",
                                    "title": "Device User Information",
                                    "description": "Authenticated user information retrieved by IP address.",
                                    "properties": {
                                        "username": {
                                            "type": "array",
                                            "title": "Usernames",
                                            "description": "Firewall usernames for the user.",
                                            "items": {
                                                "type": "string",
                                                "title": "Username",
                                                "description": "Firewall username for the user."
                                            }
                                        },
                                        "cn": {
                                            "type": "array",
                                            "title": "Common Names",
                                            "description": "Names of the user.",
                                            "items": {
                                                "type": "string",
                                                "title": "Common Name",
                                                "description": "Name of the user."
                                            }
                                        },
                                        "company": {
                                            "type": "array",
                                            "title": "Companies",
                                            "description": "Companies that the user works for.",
                                            "items": {
                                                "type": "string",
                                                "title": "Company",
                                                "description": "A company that the user works for."
                                            }
                                        },
                                        "department": {
                                            "type": "array",
                                            "title": "Departments",
                                            "description": "Departments.",
                                            "items": {
                                                "type": "string",
                                                "title": "Department",
                                                "description": "A department that the user works in."
                                            }
                                        },
                                        "mail": {
                                            "type": "array",
                                            "title": "Mails",
                                            "description": "Mails.",
                                            "items": {
                                                "type": "string",
                                                "title": "Mail",
                                                "description": "A mailing address for the user."
                                            }
                                        },
                                        "manager": {
                                            "type": "array",
                                            "title": "Managers",
                                            "description": "Managers.",
                                            "items": {
                                                "type": "string",
                                                "title": "Manager",
                                                "description": "The name of the user's manager."
                                            }
                                        },
                                        "telephoneNumber": {
                                            "type": "array",
                                            "title": "Telephone Numbers",
                                            "description": "Telephone Numbers.",
                                            "items": {
                                                "type": "string",
                                                "title": "Telephone Number",
                                                "description": "A telephone number for the user."
                                            }
                                        },
                                        "title": {
                                            "type": "array",
                                            "title": "Titles",
                                            "description": "Titles.",
                                            "items": {
                                                "type": "string",
                                                "title": "Title",
                                                "description": "A job title for the user."
                                            }
                                        },
                                        "domain name": {
                                            "type": "array",
                                            "title": "Domain Names",
                                            "description": "LDAP server\/exchange server domains the user belongs to.",
                                            "items": {
                                                "title": "Domain Name",
                                                "description": "LDAP server\/exchange server domain the user belongs to.",
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "mac": {
                                    "type": "string",
                                    "title": "MAC Address",
                                    "description": "MAC address."
                                },
                                "ipv4_address": {
                                    "type": "string",
                                    "title": "IPv4 Address",
                                    "description": "IPv4 address."
                                },
                                "ipv6_address": {
                                    "type": "string",
                                    "title": "IPv6 Address",
                                    "description": "IPv6 address."
                                },
                                "detected_interface": {
                                    "type": "string",
                                    "title": "Detected Interface",
                                    "description": "Interface name from which the device is detected."
                                },
                                "detected_interface_fortitelemetry": {
                                    "type": "boolean",
                                    "title": "Detected Interface Telemetry",
                                    "description": "True when the detected interface allows FortiTelemetry."
                                },
                                "is_detected_interface_role_wan": {
                                    "type": "boolean",
                                    "title": "Detected Interface Has WAN Role",
                                    "description": "True when the detected interface's role is WAN."
                                },
                                "dhcp_lease_status": {
                                    "type": "string",
                                    "title": "DHCP Lease Status",
                                    "description": "DHCP lease status if the IPv4 address is leased from a DHCP server.",
                                    "enum": [
                                        "leased",
                                        "conflicted"
                                    ]
                                },
                                "dhcp_lease_expire": {
                                    "type": "integer",
                                    "title": "DHCP Lease Expire Time",
                                    "description": "UNIX epoch time when the DHCP lease expires."
                                },
                                "dhcp_lease_reserved": {
                                    "type": "boolean",
                                    "title": "DHCP Lease Reserved",
                                    "description": "True when the DHCP lease is reserved."
                                },
                                "dhcp_server_id": {
                                    "type": "integer",
                                    "title": "DHCP Server ID",
                                    "description": "ID of the DHCP server from where the IPv4 address is leased."
                                },
                                "fortiswitch_id": {
                                    "type": "string",
                                    "title": "FortiSwitch ID",
                                    "description": "ID of the FortiSwitch from which the device is detected."
                                },
                                "fortiswitch_name": {
                                    "type": "string",
                                    "title": "FortiSwitch Name",
                                    "description": "Name of the FortiSwitch from which the device is detected."
                                },
                                "fortiswitch_port_id": {
                                    "type": "integer",
                                    "title": "FortiSwitch Port ID",
                                    "description": "ID of the FortiSwitch port from which the device is detected."
                                },
                                "fortiswitch_vlan_id": {
                                    "type": "integer",
                                    "title": "FortiSwitch VLAN ID",
                                    "description": "ID of the FortiSwitch VLAN from which the device is detected."
                                },
                                "fortiswitch_port_name": {
                                    "type": "string",
                                    "title": "FortiSwitch Port Name",
                                    "description": "Name of the FortiSwitch port from which the device is detected."
                                },
                                "fortiswitch_last_seen": {
                                    "type": "integer",
                                    "title": "Last Seen by FortiSwitch",
                                    "description": "Seconds since the device was most recently detected by FortiSwitch."
                                },
                                "forticlient_gateway_interface": {
                                    "type": "string",
                                    "title": "FortiClient Interface",
                                    "description": "The interface with which the FortiClient endpoint communicates."
                                },
                                "mac_firewall_address": {
                                    "type": "string",
                                    "title": "MAC Firewall Address",
                                    "description": "MAC firewall address associated with this device."
                                },
                                "master_mac": {
                                    "type": "string",
                                    "title": "Primary MAC Address",
                                    "description": "Primary MAC address."
                                },
                                "is_master_device": {
                                    "type": "boolean",
                                    "title": "Primary Device",
                                    "description": "True when the device is a primary device."
                                },
                                "is_online": {
                                    "type": "boolean",
                                    "title": "Online",
                                    "description": "True when the device is online."
                                },
                                "on_net": {
                                    "type": "boolean",
                                    "title": "On-Net",
                                    "description": "True when the FortiClient endpoint is on-net."
                                },
                                "last_seen": {
                                    "type": "integer",
                                    "title": "Last Seen",
                                    "description": "Unix timestamp for when the device was most recently detected."
                                },
                                "fortiap_id": {
                                    "type": "string",
                                    "title": "FortiAP ID",
                                    "description": "ID of the FortiAP from which the device is detected."
                                },
                                "fortiap_ssid": {
                                    "type": "string",
                                    "title": "FortiAP SSID",
                                    "description": "SSID of the FortiAP to which the device connects."
                                },
                                "fortiap_name": {
                                    "type": "string",
                                    "title": "FortiAP Name",
                                    "description": "Name of the FortiAP from which the device is detected."
                                },
                                "is_fortiguard_src": {
                                    "type": "boolean",
                                    "title": "FortiGuard Source",
                                    "description": "True when the device is scanned by the FortiGuard IoT detection service."
                                },
                                "is_ems_registered": {
                                    "type": "boolean",
                                    "title": "Registered on EMS",
                                    "description": "True when the FortiClient endpoint is registered on EMS."
                                },
                                "active_start_time": {
                                    "type": "integer",
                                    "title": "Active Start Time",
                                    "description": "Unix timestamp for when the device started to be active."
                                },
                                "active_end_time": {
                                    "type": "integer",
                                    "title": "Active End Time",
                                    "description": "Unix timestamp for when the device started to be inactive."
                                }
                            },
                            "additionalProperties": true,
                            "items": {
                                "title": "Detected Device",
                                "description": "A detected device.",
                                "type": "object",
                                "required": [
                                    "master_mac"
                                ],
                                "properties": {
                                    "avatar_source": {
                                        "type": "string",
                                        "title": "Avatar Source",
                                        "description": "Source from where FortiClient gathers user information."
                                    },
                                    "avatar_fingerprint": {
                                        "type": "string",
                                        "title": "Avatar Fingerprint",
                                        "description": "Avatar fingerprint."
                                    },
                                    "detected_interface": {
                                        "$ref": "#\/definitions\/detected_interface"
                                    },
                                    "detected_interface_fortitelemetry": {
                                        "$ref": "#\/definitions\/detected_interface_fortitelemetry"
                                    },
                                    "dhcp_lease_status": {
                                        "$ref": "#\/definitions\/dhcp_lease_status"
                                    },
                                    "dhcp_lease_expire": {
                                        "$ref": "#\/definitions\/dhcp_lease_expire"
                                    },
                                    "dhcp_lease_reserved": {
                                        "$ref": "#\/definitions\/dhcp_lease_reserved"
                                    },
                                    "dhcp_server_id": {
                                        "$ref": "#\/definitions\/dhcp_server_id"
                                    },
                                    "domain": {
                                        "type": "string",
                                        "title": "Domain",
                                        "description": "The name of the domain to which the FortiClient endpoint is connected, if applicable."
                                    },
                                    "email": {
                                        "type": "string",
                                        "title": "Email",
                                        "description": "Email address detected by FortiClient."
                                    },
                                    "fortiap_id": {
                                        "$ref": "#\/definitions\/fortiap_id"
                                    },
                                    "fortiap_ssid": {
                                        "$ref": "#\/definitions\/fortiap_ssid"
                                    },
                                    "fortiap_name": {
                                        "$ref": "#\/definitions\/fortiap_name"
                                    },
                                    "forticlient_id": {
                                        "type": "string",
                                        "title": "FortiClient ID",
                                        "description": "FortiClient ID."
                                    },
                                    "forticlient_gateway_interface": {
                                        "$ref": "#\/definitions\/forticlient_gateway_interface"
                                    },
                                    "forticlient_username": {
                                        "type": "string",
                                        "title": "FortiClient Username",
                                        "description": "Username detected by FortiClient."
                                    },
                                    "forticlient_version": {
                                        "type": "string",
                                        "title": "FortiClient Version",
                                        "description": "FortiClient version."
                                    },
                                    "fortiswitch_id": {
                                        "$ref": "#\/definitions\/fortiswitch_id"
                                    },
                                    "fortiswitch_name": {
                                        "$ref": "#\/definitions\/fortiswitch_name"
                                    },
                                    "fortiswitch_port_id": {
                                        "$ref": "#\/definitions\/fortiswitch_port_id"
                                    },
                                    "fortiswitch_vlan_id": {
                                        "$ref": "#\/definitions\/fortiswitch_vlan_id"
                                    },
                                    "fortiswitch_port_name": {
                                        "$ref": "#\/definitions\/fortiswitch_port_name"
                                    },
                                    "fortiswitch_last_seen": {
                                        "$ref": "#\/definitions\/fortiswitch_last_seen"
                                    },
                                    "hardware_family": {
                                        "type": "string",
                                        "title": "Hardware Family",
                                        "description": "Hardware family."
                                    },
                                    "hardware_type": {
                                        "type": "string",
                                        "title": "Hardware Type",
                                        "description": "Hardware type."
                                    },
                                    "hardware_vendor": {
                                        "type": "string",
                                        "title": "Hardware Vendor",
                                        "description": "Hardware vendor."
                                    },
                                    "hardware_version": {
                                        "type": "string",
                                        "title": "Hardware Version",
                                        "description": "Hardware version."
                                    },
                                    "hostname": {
                                        "type": "string",
                                        "title": "Hostname",
                                        "description": "Hostname."
                                    },
                                    "ipv4_address": {
                                        "$ref": "#\/definitions\/ipv4_address"
                                    },
                                    "ipv6_address": {
                                        "$ref": "#\/definitions\/ipv6_address"
                                    },
                                    "is_detected_interface_role_wan": {
                                        "$ref": "#\/definitions\/is_detected_interface_role_wan"
                                    },
                                    "is_forticlient_endpoint": {
                                        "type": "boolean",
                                        "title": "FortiClient Endpoint",
                                        "description": "True when the device is a FortiClient endpoint."
                                    },
                                    "is_ems_registered": {
                                        "$ref": "#\/definitions\/is_ems_registered"
                                    },
                                    "is_forticlient_unauth_user": {
                                        "type": "boolean",
                                        "title": "FortiClient Unauthenticated User",
                                        "description": "True when the source of the unauthenticated user is FortiClient."
                                    },
                                    "is_master_device": {
                                        "$ref": "#\/definitions\/is_master_device"
                                    },
                                    "is_online": {
                                        "$ref": "#\/definitions\/is_online"
                                    },
                                    "last_seen": {
                                        "$ref": "#\/definitions\/last_seen"
                                    },
                                    "active_start_time": {
                                        "$ref": "#\/definitions\/active_start_time"
                                    },
                                    "active_end_time": {
                                        "$ref": "#\/definitions\/active_end_time"
                                    },
                                    "mac": {
                                        "$ref": "#\/definitions\/mac"
                                    },
                                    "mac_firewall_address": {
                                        "$ref": "#\/definitions\/mac_firewall_address"
                                    },
                                    "master_mac": {
                                        "$ref": "#\/definitions\/master_mac"
                                    },
                                    "online_interfaces": {
                                        "type": "array",
                                        "title": "Device Online Interfaces",
                                        "description": "Names of online interfaces.",
                                        "items": {
                                            "title": "Device Online Interface",
                                            "description": "Name of an online interface.",
                                            "type": "string"
                                        }
                                    },
                                    "on_net": {
                                        "$ref": "#\/definitions\/on_net"
                                    },
                                    "os_name": {
                                        "type": "string",
                                        "title": "Operating System Name",
                                        "description": "Operating system name."
                                    },
                                    "os_version": {
                                        "type": "string",
                                        "title": "Operating System Version",
                                        "description": "Operating system version."
                                    },
                                    "other_macs": {
                                        "type": "array",
                                        "title": "Device Other MACs",
                                        "description": "Summary of other MAC addresses on this device.",
                                        "items": {
                                            "title": "Device MAC Address Info",
                                            "description": "Information for a MAC address on the device.",
                                            "type": "object",
                                            "required": [
                                                "mac"
                                            ],
                                            "properties": {
                                                "mac": {
                                                    "$ref": "#\/definitions\/mac"
                                                },
                                                "ipv4_address": {
                                                    "$ref": "#\/definitions\/ipv4_address"
                                                },
                                                "ipv6_address": {
                                                    "$ref": "#\/definitions\/ipv6_address"
                                                },
                                                "detected_interface": {
                                                    "$ref": "#\/definitions\/detected_interface"
                                                },
                                                "detected_interface_fortitelemetry": {
                                                    "$ref": "#\/definitions\/detected_interface_fortitelemetry"
                                                },
                                                "is_detected_interface_role_wan": {
                                                    "$ref": "#\/definitions\/is_detected_interface_role_wan"
                                                },
                                                "dhcp_lease_status": {
                                                    "$ref": "#\/definitions\/dhcp_lease_status"
                                                },
                                                "dhcp_lease_expire": {
                                                    "$ref": "#\/definitions\/dhcp_lease_expire"
                                                },
                                                "dhcp_lease_reserved": {
                                                    "$ref": "#\/definitions\/dhcp_lease_reserved"
                                                },
                                                "dhcp_server_id": {
                                                    "$ref": "#\/definitions\/dhcp_server_id"
                                                },
                                                "fortiswitch_id": {
                                                    "$ref": "#\/definitions\/fortiswitch_id"
                                                },
                                                "fortiswitch_name": {
                                                    "$ref": "#\/definitions\/fortiswitch_name"
                                                },
                                                "fortiswitch_port_id": {
                                                    "$ref": "#\/definitions\/fortiswitch_port_id"
                                                },
                                                "fortiswitch_vlan_id": {
                                                    "$ref": "#\/definitions\/fortiswitch_vlan_id"
                                                },
                                                "fortiswitch_port_name": {
                                                    "$ref": "#\/definitions\/fortiswitch_port_name"
                                                },
                                                "fortiswitch_last_seen": {
                                                    "$ref": "#\/definitions\/fortiswitch_last_seen"
                                                },
                                                "forticlient_gateway_interface": {
                                                    "$ref": "#\/definitions\/forticlient_gateway_interface"
                                                },
                                                "mac_firewall_address": {
                                                    "$ref": "#\/definitions\/mac_firewall_address"
                                                },
                                                "master_mac": {
                                                    "$ref": "#\/definitions\/master_mac"
                                                },
                                                "is_master_device": {
                                                    "$ref": "#\/definitions\/is_master_device"
                                                },
                                                "is_online": {
                                                    "$ref": "#\/definitions\/is_online"
                                                },
                                                "on_net": {
                                                    "$ref": "#\/definitions\/on_net"
                                                },
                                                "last_seen": {
                                                    "$ref": "#\/definitions\/last_seen"
                                                },
                                                "fortiap_id": {
                                                    "$ref": "#\/definitions\/fortiap_id"
                                                },
                                                "fortiap_ssid": {
                                                    "$ref": "#\/definitions\/fortiap_ssid"
                                                },
                                                "fortiap_name": {
                                                    "$ref": "#\/definitions\/fortiap_name"
                                                },
                                                "is_fortiguard_src": {
                                                    "$ref": "#\/definitions\/is_fortiguard_src"
                                                },
                                                "is_ems_registered": {
                                                    "$ref": "#\/definitions\/is_ems_registered"
                                                }
                                            }
                                        }
                                    },
                                    "phone": {
                                        "type": "string",
                                        "title": "Phone Number",
                                        "description": "Phone number detected by FortiClient."
                                    },
                                    "quarantined_on_forticlient": {
                                        "type": "boolean",
                                        "title": "Quarantined on FortiClient",
                                        "description": "True when the device is quarantined on FortiClient."
                                    },
                                    "server": {
                                        "type": "string",
                                        "title": "Server Type",
                                        "description": "Server type if the device is detected as a server."
                                    },
                                    "unauth_user": {
                                        "type": "string",
                                        "title": "Unauthenticated User",
                                        "description": "Unauthenticated user name."
                                    },
                                    "unjoined_forticlient_endpoint": {
                                        "type": "boolean",
                                        "title": "Unjoined FortiClient Endpoint",
                                        "description": "True when the FortiClient endpoint has a record without an associated user device entry."
                                    },
                                    "user_info": {
                                        "anyOf": [
                                            {
                                                "$ref": "#\/definitions\/user_info"
                                            },
                                            {
                                                "type": "array",
                                                "title": "Device User Information",
                                                "description": "Authenticated user information retrieved by IP address.",
                                                "items": {
                                                    "$ref": "#\/definitions\/user_info"
                                                }
                                            }
                                        ]
                                    },
                                    "vuln_count": {
                                        "type": "integer",
                                        "title": "All Levels Vulnerabilities Count",
                                        "description": "Total number of vulnerabilities for all levels."
                                    },
                                    "vuln_count_critical": {
                                        "type": "integer",
                                        "title": "Critical Level Vulnerabilities Count",
                                        "description": "Total number of critical level vulnerabilities."
                                    },
                                    "vuln_count_high": {
                                        "type": "integer",
                                        "title": "High Level Vulnerabilities Count",
                                        "description": "Total number of high level vulnerabilities."
                                    },
                                    "vuln_count_info": {
                                        "type": "integer",
                                        "title": "Info Level Vulnerabilities Count",
                                        "description": "Total number of info level vulnerabilities."
                                    },
                                    "vuln_count_low": {
                                        "type": "integer",
                                        "title": "Low Level Vulnerabilities Count",
                                        "description": "Total number of low level vulnerabilities."
                                    },
                                    "vuln_count_medium": {
                                        "type": "integer",
                                        "title": "Medium Level Vulnerabilities Count",
                                        "description": "Total number of medium level vulnerabilities."
                                    },
                                    "host_src": {
                                        "type": "string",
                                        "title": "Host Source",
                                        "description": "Source of host."
                                    },
                                    "user_info_src": {
                                        "type": "string",
                                        "title": "User Info Source",
                                        "description": "Source of user info."
                                    },
                                    "vdom": {
                                        "type": "string",
                                        "title": "VDOM",
                                        "description": "VDOM name."
                                    },
                                    "is_fortiguard_src": {
                                        "$ref": "#\/definitions\/is_fortiguard_src"
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/user\/device.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Number of entries to skip from the beginning.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Maximum number of entries to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "timestamp_from",
                        "in": "query",
                        "description": "To get entries since the timestamp for unified historical query.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "timestamp_to",
                        "in": "query",
                        "description": "To get entries before the timestamp for unified historical query.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "A list of filters. Type: {\"type\": string, \"value\": string, \"op\": string}. Op: filter operator [exact|contains|greaterThanEqualTo|lessThanEqualTo]. Default is exact.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query_type",
                        "in": "query",
                        "description": "Query type [latest|unified_latest|unified_history]. Default is latest.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "query_id",
                        "in": "query",
                        "description": "Provide a query ID to continue getting data for that unified request. Only available for unified query types.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "cache_query",
                        "in": "query",
                        "description": "Cache query result for 5 mins and return query ID. Only available for unified query types. Default is false.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "key_only",
                        "in": "query",
                        "description": "Return primary key fields only. Default is false.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "filter_logic",
                        "in": "query",
                        "description": "The logic between filters [and|or]). Default is and.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/query\/abort": {
            "post": {
                "summary": "Abort a running user device unified query.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "query_id": {
                                    "description": "Provide a query ID to abort an unified type query.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/device\/remove": {
            "post": {
                "summary": "Remove single or multiple user devices specified by host MAC addresses.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "macs": {
                                    "description": "An array of host MAC addresses to be removed.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/fortitoken\/refresh": {
            "post": {
                "summary": "Refresh a set of FortiTokens by serial number.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "tokens": {
                                    "description": "List of FortiToken serial numbers to refresh. If omitted, all tokens will be used.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/fortitoken\/provision": {
            "post": {
                "summary": "Provision a set of FortiTokens by serial number.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "tokens": {
                                    "description": "List of FortiToken serial numbers to provision. If omitted, all tokens will be used.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/fortitoken\/send-activation": {
            "post": {
                "summary": "Send a FortiToken activation code to a user via SMS or Email.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "token": {
                                    "description": "FortiToken serial number. The token must be assigned to a user\/admin.",
                                    "type": "string"
                                },
                                "method": {
                                    "description": "Method to send activation code [email|sms]. If not set, SMS will be attempted first, then email.",
                                    "type": "string"
                                },
                                "email": {
                                    "description": "Override email address.",
                                    "type": "string"
                                },
                                "sms_phone": {
                                    "description": "Override SMS phone number. SMS provider must be set in the assigned user\/admin.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/fortitoken\/import-trial": {
            "post": {
                "summary": "Import trial mobile FortiTokens.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/fortitoken\/import-mobile": {
            "post": {
                "summary": "Import a list of tokens from FortiGuard to the FortiGate unit.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "Activation code on redemption certificate.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/fortitoken\/import-seed": {
            "post": {
                "summary": "Import a FortiToken seed file.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "file_content": {
                                    "description": "Provided when uploading a file: base64 encoded file data. Must not contain whitespace or other invalid base64 characters. Must be included in HTTP body.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/fsso\/refresh-server": {
            "post": {
                "summary": "Refresh remote agent group list for all fsso agents.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/fsso": {
            "get": {
                "summary": "Get a list of fsso and fsso polling status.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Filter: Get the status for a specific FSSO entry. `type` is required if this is set.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter: Get the status for this type of FSSO entry [fsso|fsso-polling].",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/guest\/email": {
            "post": {
                "summary": "Sent guest login details via email.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "group": {
                                    "description": "Guest group name.",
                                    "type": "string"
                                },
                                "guest": {
                                    "description": "Guest user IDs.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/guest\/sms": {
            "post": {
                "summary": "Sent guest login details via SMS.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "group": {
                                    "description": "Guest group name.",
                                    "type": "string"
                                },
                                "guest": {
                                    "description": "Guest user IDs.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/radius\/test-connect": {
            "post": {
                "summary": "Test the connectivity of the given RADIUS server and, optionally, the validity of a username & password.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkey": {
                                    "description": "Name of FortiGate's RADIUS object whose settings to test.",
                                    "type": "string"
                                },
                                "ordinal": {
                                    "description": "If 'mkey' is provided, the server-secret pair to use from the object: 'primary', 'secondary' or 'tertiary'. Defaults to 'primary'.",
                                    "type": "string"
                                },
                                "server": {
                                    "description": "Host name or IP of a RADIUS server. If 'mkey' is provided, this overrides the 'server' value in the object.",
                                    "type": "string"
                                },
                                "secret": {
                                    "description": "Secret password for the RADIUS server. If 'mkey' is provided, this overrides the 'secret' value in the object.",
                                    "type": "string"
                                },
                                "auth_type": {
                                    "description": "Authentication protocol to use [auto|ms_chap_v2|ms_chap|chap|pap]. If 'mkey' is provided, this overrides the 'auth-type' value in the object.",
                                    "type": "string"
                                },
                                "user": {
                                    "description": "User name whose access to check.",
                                    "type": "string"
                                },
                                "password": {
                                    "description": "User's password.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/tacacs-plus\/test": {
            "post": {
                "summary": "Test the connectivity of the given TACACS+ server.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "TACACS+ Server Connectivity Results",
                            "description": "TACACS+ server connectivity results.",
                            "type": "object",
                            "required": [
                                "status",
                                "message"
                            ],
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "title": "Status",
                                    "description": "Server connectivity status.",
                                    "enum": [
                                        0,
                                        1,
                                        2,
                                        3,
                                        4
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "title": "Response Message",
                                    "description": "Response message from server.",
                                    "enum": [
                                        "OK",
                                        "Secret invalid",
                                        "Key invalid",
                                        "Server unreachable",
                                        "Error",
                                        "test"
                                    ]
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/user\/tacacs-plus.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkey": {
                                    "description": "Name of FortiGate's TACACS+ object whose settings to test.",
                                    "type": "string"
                                },
                                "ordinal": {
                                    "description": "If 'mkey' is provided, the server-key pair to use from the object: 'primary', 'secondary' or 'tertiary'. Defaults to 'primary'.",
                                    "type": "string"
                                },
                                "server": {
                                    "description": "Host name of IP of a TACACS+ server. If 'mkey' is provided, this overrides the 'server' value in the object.",
                                    "type": "string"
                                },
                                "secret": {
                                    "description": "Secret key for the TACACS+ server. If 'mkey' is provided, this overrides the 'key' value in the object.",
                                    "type": "string"
                                },
                                "port": {
                                    "description": "Port number of the TACACS+ server. If 'mkey' is provided, this overrides the 'port' value in the object. Defaults to 49.",
                                    "type": "integer"
                                },
                                "source_ip": {
                                    "description": "Source IP for communications to TACACS+ server. If 'mkey' is provided, this overrides the 'source-ip' value in the object.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/info\/query": {
            "get": {
                "summary": "Query user info.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "User Info Query",
                            "description": "Retrieve user info that matches the given filter.",
                            "type": "object",
                            "required": [
                                "total",
                                "count",
                                "entries"
                            ],
                            "properties": {
                                "total": {
                                    "type": "integer",
                                    "title": "Total",
                                    "description": "Total number of user info entries that match the filter."
                                },
                                "count": {
                                    "type": "integer",
                                    "title": "Count",
                                    "description": "Number of user info entries returned."
                                },
                                "entries": {
                                    "type": "array",
                                    "title": "User Info Entries",
                                    "description": "List of user information objects.",
                                    "items": {
                                        "type": "object",
                                        "title": "User Info Entry",
                                        "description": "User info entry. A map of attribute name to array of values.",
                                        "properties": {
                                            "cn": {
                                                "type": "array",
                                                "title": "Common Name",
                                                "description": "The name that represents an object.",
                                                "items": {
                                                    "title": "Name",
                                                    "description": "The name of the object.",
                                                    "type": "string"
                                                }
                                            },
                                            "givenName": {
                                                "type": "array",
                                                "title": "Given Name",
                                                "description": "The given name (first name) of the user.",
                                                "items": {
                                                    "title": "Name",
                                                    "description": "The given name (first name) of the user.",
                                                    "type": "string"
                                                }
                                            },
                                            "sn": {
                                                "type": "array",
                                                "title": "Surname",
                                                "description": "The family or last name of the user.",
                                                "items": {
                                                    "title": "Surname",
                                                    "description": "Last name of the user.",
                                                    "type": "string"
                                                }
                                            },
                                            "userPrincipalName": {
                                                "type": "array",
                                                "title": "User Principal Names",
                                                "description": "User Principal Names (UPNs) that are an Internet-style login name for a user based on the Internet standard RFC 822.",
                                                "items": {
                                                    "type": "string",
                                                    "title": "User Principal Name",
                                                    "description": "Login name for the user."
                                                }
                                            },
                                            "telephoneNumber": {
                                                "type": "array",
                                                "title": "Telephone Numbers",
                                                "description": "The primary telephone number.",
                                                "items": {
                                                    "type": "string",
                                                    "title": "Telephone Number",
                                                    "description": "A telephone number for the user."
                                                }
                                            },
                                            "mail": {
                                                "type": "array",
                                                "title": "Mail",
                                                "description": "A list of email addresses for a contact.",
                                                "items": {
                                                    "type": "string",
                                                    "title": "Email Address",
                                                    "description": "An email address for the user."
                                                }
                                            },
                                            "company": {
                                                "type": "array",
                                                "title": "Company",
                                                "description": "The user's company name.",
                                                "items": {
                                                    "type": "string",
                                                    "title": "Company Name",
                                                    "description": "A company name for the user."
                                                }
                                            },
                                            "department": {
                                                "type": "array",
                                                "title": "Department",
                                                "description": "The department in which the user works.",
                                                "items": {
                                                    "type": "string",
                                                    "title": "Department",
                                                    "description": "The department in which the user works."
                                                }
                                            },
                                            "distinguishedName": {
                                                "type": "array",
                                                "title": "Distinguished Name",
                                                "description": "The distinguished name of the user.",
                                                "items": {
                                                    "type": "string",
                                                    "title": "Distinguished Name",
                                                    "description": "The distinguished name of the user."
                                                }
                                            },
                                            "memberOf": {
                                                "type": "array",
                                                "title": "Member Of",
                                                "description": "The distinguished name of the groups to which this object belongs.",
                                                "items": {
                                                    "type": "string",
                                                    "title": "Member Of",
                                                    "description": "The distinguished name of a group to which the user belongs."
                                                }
                                            },
                                            "title": {
                                                "type": "array",
                                                "title": "Title",
                                                "description": "The user's job title.",
                                                "items": {
                                                    "type": "string",
                                                    "title": "Title",
                                                    "description": "A job title for the user."
                                                }
                                            },
                                            "manager": {
                                                "type": "array",
                                                "title": "Manager",
                                                "description": "The distinguished name of the user who is the user's manager.",
                                                "items": {
                                                    "type": "string",
                                                    "title": "Manager",
                                                    "description": "The distinguished name of the user who is the user's manager."
                                                }
                                            },
                                            "streetAddress": {
                                                "type": "array",
                                                "title": "Street Address",
                                                "description": "Street address.",
                                                "items": {
                                                    "type": "string",
                                                    "title": "Street Address",
                                                    "description": "One street address for the user."
                                                }
                                            },
                                            "postOfficeBox": {
                                                "type": "array",
                                                "title": "Post Office Box",
                                                "description": "The post office box number for this object.",
                                                "items": {
                                                    "type": "string",
                                                    "title": "Post Office Box",
                                                    "description": "A post office box number for the user."
                                                }
                                            },
                                            "l": {
                                                "type": "array",
                                                "title": "Locality Name",
                                                "description": "The name of a locality, such as a town or city.",
                                                "items": {
                                                    "type": "string",
                                                    "title": "Locality Name",
                                                    "description": "A locality for this object."
                                                }
                                            },
                                            "st": {
                                                "type": "array",
                                                "title": "State",
                                                "description": "The name of a user's state or province.",
                                                "items": {
                                                    "type": "string",
                                                    "title": "State",
                                                    "description": "A state or province that the user lives in."
                                                }
                                            },
                                            "postalCode": {
                                                "type": "array",
                                                "title": "Postal Code",
                                                "description": "The postal or zip code for mail delivery.",
                                                "items": {
                                                    "type": "string",
                                                    "title": "Postal Code",
                                                    "description": "A postal or zip code for mail delivery."
                                                }
                                            },
                                            "co": {
                                                "type": "array",
                                                "title": "Country",
                                                "description": "The country\/region in which the user is located.",
                                                "items": {
                                                    "type": "string",
                                                    "title": "Country",
                                                    "description": "A country or region in which the user is located."
                                                }
                                            },
                                            "accountExpires": {
                                                "type": "array",
                                                "title": "Account Expires",
                                                "description": "The date when the account expires. This value represents the number of 100-nanosecond intervals since January 1, 1601 (UTC).",
                                                "items": {
                                                    "type": "string",
                                                    "title": "Account Expires",
                                                    "description": "Date when the user's account expires."
                                                }
                                            },
                                            "username": {
                                                "type": "array",
                                                "title": "Usernames",
                                                "description": "Firewall usernames.",
                                                "items": {
                                                    "type": "string",
                                                    "title": "Username",
                                                    "description": "Firewall username for the user."
                                                }
                                            },
                                            "sourceip": {
                                                "type": "array",
                                                "title": "Source IP Address",
                                                "description": "Source IP address.",
                                                "items": {
                                                    "type": "string",
                                                    "title": "Source IP",
                                                    "description": "Source IP address of the user's account."
                                                }
                                            },
                                            "server": {
                                                "type": "array",
                                                "title": "Server",
                                                "description": "Server.",
                                                "items": {
                                                    "type": "string",
                                                    "title": "Server",
                                                    "description": "Server name that the user's account is from."
                                                }
                                            },
                                            "vdom": {
                                                "type": "array",
                                                "title": "VDOM",
                                                "description": "VDOM name.",
                                                "items": {
                                                    "type": "string",
                                                    "title": "VDOM",
                                                    "description": "VDOM of the interface that the user is connected to."
                                                }
                                            },
                                            "domain name": {
                                                "type": "array",
                                                "title": "Domain Names",
                                                "description": "LDAP server\/exchange server domains the user belongs to.",
                                                "items": {
                                                    "title": "Domain Name",
                                                    "description": "LDAP server\/exchange server domain the user belongs to.",
                                                    "type": "string"
                                                }
                                            },
                                            "logon time": {
                                                "type": "array",
                                                "title": "Logon Times",
                                                "description": "Timestamps for the most recent user log ons allowed by FortiGate firewall policy.",
                                                "items": {
                                                    "title": "Logon Time",
                                                    "description": "Timestamp of the most recent user log on allowed by FortiGate firewall policy.",
                                                    "type": "integer"
                                                }
                                            },
                                            "logoff time": {
                                                "type": "array",
                                                "title": "Logoff Times",
                                                "description": "Timestamps for the most recent user log offs allowed by FortiGate firewall policy.",
                                                "items": {
                                                    "title": "Logoff Time",
                                                    "description": "Timestamp of the most recent user log off allowed by FortiGate firewall policy.",
                                                    "type": "integer"
                                                }
                                            },
                                            "source": {
                                                "type": "array",
                                                "title": "Sources",
                                                "description": "Sources from where user information is collected.",
                                                "items": {
                                                    "title": "Source",
                                                    "description": "Source from where user information is collected.",
                                                    "type": "string",
                                                    "enum": [
                                                        "worker",
                                                        "fsae",
                                                        "firewall",
                                                        "forticlient"
                                                    ]
                                                }
                                            },
                                            "thumbnailPhoto": {
                                                "type": "array",
                                                "title": "Thumbnail Photos",
                                                "description": "File paths for user thumbnail photos.",
                                                "items": {
                                                    "title": "Thumbnail Photo",
                                                    "description": "The file path of the user thumbnail photo.",
                                                    "type": "string"
                                                }
                                            },
                                            "device_info": {
                                                "type": "array",
                                                "title": "Detected Devices",
                                                "description": "Detected devices of the user.",
                                                "items": {
                                                    "title": "Detected Device",
                                                    "description": "Device information.",
                                                    "type": "object",
                                                    "properties": {
                                                        "mac": {
                                                            "type": "string",
                                                            "title": "MAC Address",
                                                            "description": "MAC address."
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/user\/info.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Number of entries to skip from the beginning.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Maximum number of entries to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "timestamp_from",
                        "in": "query",
                        "description": "To get entries since the timestamp for unified historical query.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "timestamp_to",
                        "in": "query",
                        "description": "To get entries before the timestamp for unified historical query.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "A list of filters. Type: {\"type\": string, \"value\": string, \"op\": string}. Op: filter operator [exact|contains|greaterThanEqualTo|lessThanEqualTo]. Default is exact.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query_type",
                        "in": "query",
                        "description": "Query type [latest|unified_latest|unified_history]. Default is latest.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "query_id",
                        "in": "query",
                        "description": "Provide a query ID to continue getting data for that unified request. Only available for unified query types.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "cache_query",
                        "in": "query",
                        "description": "Cache query result for 5 mins and return query ID. Only available for unified query types. Default is false.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "key_only",
                        "in": "query",
                        "description": "Return primary key fields only. Default is false.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "filter_logic",
                        "in": "query",
                        "description": "The logic between filters [and|or]). Default is and.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/info\/thumbnail": {
            "get": {
                "summary": "Get user info thumbnail. Returns the first match to the filter.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "A list of filters. Type: {\"type\": string, \"value\": string}",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/user\/info\/thumbnail-file": {
            "get": {
                "summary": "Get user info thumbnail by given file name.\nAccess Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "filename",
                        "in": "query",
                        "description": "Thumbnail file name. The file name is from thumbnailPhoto field of user info query.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "\/utm\/rating-lookup\/select": {
            "post": {
                "summary": "Lookup FortiGuard rating for a specific URL.\nAccess Group: utmgrp.webfilter",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "url": {
                                    "description": "List of URLs to query.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "lang": {
                                    "description": "Language for the rating response.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "utm"
                ]
            }
        },
        "\/utm\/app-lookup": {
            "get": {
                "summary": "Query remote FortiFlow database to resolve hosts to application control entries.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "hosts",
                        "in": "query",
                        "description": "List of hosts to resolve.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "utm"
                ]
            }
        },
        "\/utm\/application-categories": {
            "get": {
                "summary": "Retrieve a list of application control categories.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "utm"
                ]
            }
        },
        "\/utm\/antivirus\/stats": {
            "get": {
                "summary": "Retrieve antivirus scanning statistics.\nAccess Group: utmgrp.antivirus",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "utm"
                ]
            }
        },
        "\/utm\/blacklisted-certificates": {
            "get": {
                "summary": "Retrieve a list of blacklisted SSL certificates.\nAccess Group: fwgrp.others",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Blocked SSL Certificates",
                            "description": "Retrieve a list of blocked SSL certificates.",
                            "type": "array",
                            "items": {
                                "title": "Blocked SSL Certificate",
                                "description": "A blocked SSL certificate.",
                                "type": "object",
                                "required": [
                                    "listing_date",
                                    "hash",
                                    "reason"
                                ],
                                "properties": {
                                    "listing_date": {
                                        "type": "integer",
                                        "title": "Listing Date",
                                        "description": "Date when this certificate was added to the blocklist, in UTC."
                                    },
                                    "hash": {
                                        "type": "string",
                                        "title": "Certificate Hash",
                                        "description": "SHA1 fingerprint for the certificate."
                                    },
                                    "common_name": {
                                        "type": "string",
                                        "title": "Common Name",
                                        "description": "Common name of the certificate."
                                    },
                                    "reason": {
                                        "type": "string",
                                        "title": "Listing Reason",
                                        "description": "Reason why this certificate is blocked."
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/utm\/blacklisted-certificates.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Starting entry index.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of entries to return. Limit is set to 2000.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "utm"
                ]
            }
        },
        "\/utm\/blacklisted-certificates\/statistics": {
            "get": {
                "summary": "Retrieve blacklisted SSL certificates statistics.\nAccess Group: fwgrp.others",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Blocked SSL Certificate Statistics",
                            "description": "Retrieve blocked SSL certificate statistics.",
                            "type": "object",
                            "required": [
                                "count"
                            ],
                            "properties": {
                                "count": {
                                    "type": "integer",
                                    "title": "Certificate Count",
                                    "description": "Number of blocked SSL certificates."
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/utm\/blacklisted-certificates.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "utm"
                ]
            }
        },
        "\/videofilter\/fortiguard-categories": {
            "get": {
                "summary": "Return FortiGuard video filter categories.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiGuard Video Filter Categories",
                            "description": "List of FortiGuard video filter categories.",
                            "type": "array",
                            "items": {
                                "title": "FortiGuard Video Filter Category",
                                "description": "FortiGuard video filter category.",
                                "type": "object",
                                "required": [
                                    "id",
                                    "name"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "title": "FortiGuard Video Filter Category ID",
                                        "description": "FortiGuard video filter category ID."
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "FortiGuard Video Category Name",
                                        "description": "FortiGuard video category name."
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/videofilter\/fortiguard-categories.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "videofilter"
                ]
            }
        },
        "\/virtual-wan\/health-check": {
            "get": {
                "summary": "Retrieve health-check statistics for each SD-WAN link.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "SD-WAN Health Check Statistics",
                            "description": "A map of health check names to their statistics.",
                            "type": "object",
                            "additionalProperties": {
                                "title": "Health Check Statistics",
                                "description": "A map of interface names to their health check statistics.",
                                "type": "object",
                                "additionalProperties": {
                                    "title": "Member Statistics",
                                    "description": "Health check statistics for an SD-WAN member.",
                                    "type": "object",
                                    "required": [
                                        "status"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "title": "Status",
                                            "description": "Status of the health check. If the SD-WAN interface is disabled, \"disable\" will be returned. If the interface does not participate in the health check, \"error\" will be returned.",
                                            "enum": [
                                                "up",
                                                "down",
                                                "disable",
                                                "error"
                                            ]
                                        },
                                        "latency": {
                                            "title": "Latency",
                                            "description": "Measured latency.",
                                            "type": "number"
                                        },
                                        "jitter": {
                                            "title": "Jitter",
                                            "description": "Measured jitter.",
                                            "type": "number"
                                        },
                                        "packet_loss": {
                                            "title": "Packet Loss",
                                            "description": "Measured packet loss.",
                                            "type": "number"
                                        },
                                        "packet_sent": {
                                            "title": "Packets Sent",
                                            "description": "Number of packets sent for this health check.",
                                            "type": "integer"
                                        },
                                        "packet_received": {
                                            "title": "Packets Received",
                                            "description": "Number of packets received for this health check.",
                                            "type": "integer"
                                        },
                                        "session": {
                                            "title": "Sessions",
                                            "description": "Session count for the interface.",
                                            "type": "integer"
                                        },
                                        "tx_bandwidth": {
                                            "title": "Upload Bandwidth",
                                            "description": "Upload bandwidth of the interface.",
                                            "type": "integer"
                                        },
                                        "rx_bandwidth": {
                                            "title": "Download Bandwidth",
                                            "description": "Download bandwidth of the interface.",
                                            "type": "integer"
                                        },
                                        "state_changed": {
                                            "title": "Last State Change",
                                            "description": "Timestamp of the last link state change, in seconds.",
                                            "type": "integer"
                                        },
                                        "sla_targets_met": {
                                            "title": "SLA Targets Met",
                                            "description": "A list of SLA targets that are met.",
                                            "type": "array",
                                            "items": {
                                                "title": "SLA Target ID",
                                                "description": "ID of an SLA target.",
                                                "type": "integer"
                                            }
                                        },
                                        "child_intfs": {
                                            "title": "Child Interface Health Check Statistics",
                                            "description": "A map of child interface names to their health check statistics. This is applicable for shortcut tunnels created by ADVPN interfaces.",
                                            "type": "object",
                                            "additionalProperties": {
                                                "title": "Child Interface Statistics",
                                                "description": "Health check statistics for a child interface.",
                                                "type": "object",
                                                "required": [
                                                    "status"
                                                ],
                                                "properties": {
                                                    "status": {
                                                        "type": "string",
                                                        "title": "Status",
                                                        "description": "Status of the health check. If the SD-WAN interface is disabled, \"disable\" will be returned. If the interface does not participate in the health check, \"error\" will be returned.",
                                                        "enum": [
                                                            "up",
                                                            "down",
                                                            "disable",
                                                            "error"
                                                        ]
                                                    },
                                                    "latency": {
                                                        "title": "Latency",
                                                        "description": "Measured latency.",
                                                        "type": "number"
                                                    },
                                                    "jitter": {
                                                        "title": "Jitter",
                                                        "description": "Measured jitter.",
                                                        "type": "number"
                                                    },
                                                    "packet_loss": {
                                                        "title": "Packet Loss",
                                                        "description": "Measured packet loss.",
                                                        "type": "number"
                                                    },
                                                    "packet_sent": {
                                                        "title": "Packets Sent",
                                                        "description": "Number of packets sent for this health check.",
                                                        "type": "integer"
                                                    },
                                                    "packet_received": {
                                                        "title": "Packets Received",
                                                        "description": "Number of packets received for this health check.",
                                                        "type": "integer"
                                                    },
                                                    "session": {
                                                        "title": "Sessions",
                                                        "description": "Session count for the interface.",
                                                        "type": "integer"
                                                    },
                                                    "tx_bandwidth": {
                                                        "title": "Upload Bandwidth",
                                                        "description": "Upload bandwidth of the interface.",
                                                        "type": "integer"
                                                    },
                                                    "rx_bandwidth": {
                                                        "title": "Download Bandwidth",
                                                        "description": "Download bandwidth of the interface.",
                                                        "type": "integer"
                                                    },
                                                    "state_changed": {
                                                        "title": "Last State Change",
                                                        "description": "Timestamp of the last link state change, in seconds.",
                                                        "type": "integer"
                                                    },
                                                    "sla_targets_met": {
                                                        "title": "SLA Targets Met",
                                                        "description": "A list of SLA targets that are met.",
                                                        "type": "array",
                                                        "items": {
                                                            "title": "SLA Target ID",
                                                            "description": "ID of an SLA target.",
                                                            "type": "integer"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/virtual-wan\/health-check.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "virtual-wan"
                ]
            }
        },
        "\/virtual-wan\/interface-log": {
            "get": {
                "summary": "Retrieve log of SD-WAN interface quality information.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "interface",
                        "in": "query",
                        "description": "Filter: Interface name.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "description": "Filter: Only return SLA logs generated since this Unix timestamp.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "seconds",
                        "in": "query",
                        "description": "Filter: Only return SLA logs generated in the last N seconds.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "virtual-wan"
                ]
            }
        },
        "\/virtual-wan\/sla-log": {
            "get": {
                "summary": "Retrieve log of SLA probe results for for each SD-WAN SLA rule.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "SD-WAN SLA Log",
                            "description": "A list of SLA results.",
                            "type": "array",
                            "items": {
                                "title": "Health Check Entry",
                                "description": "SLA results for one health check of one interface.",
                                "type": "object",
                                "required": [
                                    "name",
                                    "interface",
                                    "logs"
                                ],
                                "properties": {
                                    "name": {
                                        "title": "Health Check Name",
                                        "description": "Name of the health check.",
                                        "type": "string"
                                    },
                                    "interface": {
                                        "title": "Interface Name",
                                        "description": "Name of the interface.",
                                        "type": "string"
                                    },
                                    "logs": {
                                        "title": "SLA Logs",
                                        "description": "A list of health check measurement results.",
                                        "type": "array",
                                        "items": {
                                            "title": "SLA Log Entry",
                                            "description": "Result of a health check measurement.",
                                            "type": "object",
                                            "properties": {
                                                "timestamp": {
                                                    "title": "Timestamp",
                                                    "description": "Unix timestamp for the measurement.",
                                                    "type": "integer"
                                                },
                                                "link": {
                                                    "title": "Link Status",
                                                    "description": "Link status of the connection.",
                                                    "type": "string",
                                                    "enum": [
                                                        "up",
                                                        "down"
                                                    ]
                                                },
                                                "latency": {
                                                    "title": "Latency",
                                                    "description": "Measured latency.",
                                                    "type": "number"
                                                },
                                                "jitter": {
                                                    "title": "Jitter",
                                                    "description": "Measured jitter.",
                                                    "type": "number"
                                                },
                                                "packetloss": {
                                                    "title": "Packet Loss",
                                                    "description": "Measured packet loss.",
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    },
                                    "child_intfs": {
                                        "title": "Child Interface SLA Logs",
                                        "description": "A map of child interface names to their SLA logs. This is applicable for shortcut tunnels created by ADVPN interfaces.",
                                        "type": "object",
                                        "additionalProperties": {
                                            "title": "SLA Logs",
                                            "description": "A list of health check measurement results.",
                                            "type": "array",
                                            "items": {
                                                "title": "SLA Log Entry",
                                                "description": "Result of a health check measurement.",
                                                "type": "object",
                                                "properties": {
                                                    "timestamp": {
                                                        "title": "Timestamp",
                                                        "description": "Unix timestamp for the measurement.",
                                                        "type": "integer"
                                                    },
                                                    "link": {
                                                        "title": "Link Status",
                                                        "description": "Link status of the connection.",
                                                        "type": "string",
                                                        "enum": [
                                                            "up",
                                                            "down"
                                                        ]
                                                    },
                                                    "latency": {
                                                        "title": "Latency",
                                                        "description": "Measured latency.",
                                                        "type": "number"
                                                    },
                                                    "jitter": {
                                                        "title": "Jitter",
                                                        "description": "Measured jitter.",
                                                        "type": "number"
                                                    },
                                                    "packetloss": {
                                                        "title": "Packet Loss",
                                                        "description": "Measured packet loss.",
                                                        "type": "number"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/virtual-wan\/sla-log.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "sla",
                        "in": "query",
                        "description": "Filter: SLA name.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interface",
                        "in": "query",
                        "description": "Filter: Interface name.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "description": "Filter: Only return SLA logs generated since this Unix timestamp.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "seconds",
                        "in": "query",
                        "description": "Filter: Only return SLA logs generated in the last N seconds.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "sampling_interval",
                        "in": "query",
                        "description": "The interval to be used for sampling SLA logs, in seconds (default=5).",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "virtual-wan"
                ]
            }
        },
        "\/virtual-wan\/members": {
            "get": {
                "summary": "Retrieve interface statistics for each SD-WAN link.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "SD-WAN Member Statistics",
                            "description": "A map of interface names to their traffic statistics.",
                            "type": "object",
                            "additionalProperties": {
                                "title": "Member Statistics",
                                "description": "Traffic statistics for an SD-WAN member.",
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "title": "Status",
                                        "description": "Status of traffic monitoring. If this value is present, traffic monitoring is not enabled and other statistics will be absent.",
                                        "type": "string",
                                        "enum": [
                                            "disable",
                                            "error"
                                        ]
                                    },
                                    "link": {
                                        "title": "Link Status",
                                        "description": "Interface link status for the SD-WAN member.",
                                        "type": "string",
                                        "enum": [
                                            "up",
                                            "down"
                                        ]
                                    },
                                    "session": {
                                        "title": "Session Count",
                                        "description": "Session count for the SD-WAN member.",
                                        "type": "integer"
                                    },
                                    "tx_bytes": {
                                        "title": "Bytes Sent",
                                        "description": "Amount of data transmitted by the SD-WAN member, in bytes.",
                                        "type": "integer"
                                    },
                                    "rx_bytes": {
                                        "title": "Bytes Received",
                                        "description": "Amount of data received by the SD-WAN member, in bytes.",
                                        "type": "integer"
                                    },
                                    "tx_bandwidth": {
                                        "title": "Upload Bandwidth",
                                        "description": "Upload bandwidth of the SD-WAN member, in bits per second.",
                                        "type": "integer"
                                    },
                                    "rx_bandwidth": {
                                        "title": "Download Bandwidth",
                                        "description": "Download bandwidth of the SD-WAN member, in bits per second.",
                                        "type": "integer"
                                    },
                                    "state_changed": {
                                        "title": "Last State Change",
                                        "description": "Timestamp of the last link state change, in seconds.",
                                        "type": "integer"
                                    },
                                    "child_intfs": {
                                        "title": "Child Interface",
                                        "description": "The dynamic tunnel of the SD-WAN member.",
                                        "type": "object",
                                        "additionalProperties": {
                                            "title": "Child Member Statistics",
                                            "description": "Traffic statistics for an SD-WAN member.",
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "title": "Status",
                                                    "description": "Status of traffic monitoring. If this value is present, traffic monitoring is not enabled and other statistics will be absent.",
                                                    "type": "string",
                                                    "enum": [
                                                        "disable",
                                                        "error"
                                                    ]
                                                },
                                                "link": {
                                                    "title": "Link Status",
                                                    "description": "Interface link status for the SD-WAN member.",
                                                    "type": "string",
                                                    "enum": [
                                                        "up",
                                                        "down"
                                                    ]
                                                },
                                                "session": {
                                                    "title": "Session Count",
                                                    "description": "Session count for the SD-WAN member.",
                                                    "type": "integer"
                                                },
                                                "tx_bytes": {
                                                    "title": "Bytes Sent",
                                                    "description": "Amount of data transmitted by the SD-WAN member, in bytes.",
                                                    "type": "integer"
                                                },
                                                "rx_bytes": {
                                                    "title": "Bytes Received",
                                                    "description": "Amount of data received by the SD-WAN member, in bytes.",
                                                    "type": "integer"
                                                },
                                                "tx_bandwidth": {
                                                    "title": "Upload Bandwidth",
                                                    "description": "Upload bandwidth of the SD-WAN member, in bits per second.",
                                                    "type": "integer"
                                                },
                                                "rx_bandwidth": {
                                                    "title": "Download Bandwidth",
                                                    "description": "Download bandwidth of the SD-WAN member, in bits per second.",
                                                    "type": "integer"
                                                },
                                                "state_changed": {
                                                    "title": "Last State Change",
                                                    "description": "Timestamp of the last link state change, in seconds.",
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/virtual-wan\/members.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "virtual-wan"
                ]
            }
        },
        "\/vpn\/ike\/clear": {
            "post": {
                "summary": "Clear IKE gateways.\nAccess Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkey": {
                                    "description": "Name of the IKE gateway to clear.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "vpn"
                ]
            }
        },
        "\/vpn\/ipsec": {
            "get": {
                "summary": "Return an array of active IPsec VPNs.\nAccess Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "tunnel",
                        "in": "query",
                        "description": "Filter for a specific IPsec tunnel name.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Starting entry index.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of entries to return.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "vpn"
                ]
            }
        },
        "\/vpn\/ipsec\/tunnel_up": {
            "post": {
                "summary": "Bring up a specific IPsec VPN tunnel.\nAccess Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "p1name": {
                                    "description": "IPsec phase1 name.",
                                    "type": "string"
                                },
                                "p2name": {
                                    "description": "IPsec phase2 name.",
                                    "type": "string"
                                },
                                "p2serial": {
                                    "description": "IPsec phase2 serial.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "vpn"
                ]
            }
        },
        "\/vpn\/ipsec\/tunnel_down": {
            "post": {
                "summary": "Bring down a specific IPsec VPN tunnel.\nAccess Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "p1name": {
                                    "description": "IPsec phase1 name.",
                                    "type": "string"
                                },
                                "p2name": {
                                    "description": "IPsec phase2 name.",
                                    "type": "string"
                                },
                                "p2serial": {
                                    "description": "IPsec phase2 serial.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "vpn"
                ]
            }
        },
        "\/vpn\/ipsec\/tunnel_reset_stats": {
            "post": {
                "summary": "Reset statistics for a specific IPsec VPN tunnel.\nAccess Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "p1name": {
                                    "description": "IPsec phase1 name.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "vpn"
                ]
            }
        },
        "\/vpn\/ocvpn\/members": {
            "get": {
                "summary": "Get information on devices registered in the Overlay Controller VPN cloud assisted group.\nAccess Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "vpn"
                ]
            }
        },
        "\/vpn\/ocvpn\/status": {
            "get": {
                "summary": "Get the last status message from FortiCloud Overlay Controller VPN cloud service.\nAccess Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "vpn"
                ]
            }
        },
        "\/vpn\/ocvpn\/meta": {
            "get": {
                "summary": "Get meta information (e.g. licenses and registered members) from Overlay Controller VPN cloud service.\nAccess Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "vpn"
                ]
            }
        },
        "\/vpn\/ssl": {
            "get": {
                "summary": "Retrieve a list of all SSL-VPN sessions and sub-sessions.\nAccess Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "SSL-VPN Sessions and Sub-Sessions",
                            "description": "List all SSL-VPN sessions and sub-sessions.",
                            "type": "array",
                            "items": {
                                "title": "SSL-VPN Session",
                                "description": "An SSL-VPN session.",
                                "type": "object",
                                "required": [
                                    "index",
                                    "last_login_timestamp",
                                    "interface",
                                    "subsessions",
                                    "duration",
                                    "two_factor_auth"
                                ],
                                "properties": {
                                    "index": {
                                        "type": "integer",
                                        "title": "Index",
                                        "description": "Session index."
                                    },
                                    "user_name": {
                                        "type": "string",
                                        "title": "User Name",
                                        "description": "Name of the user."
                                    },
                                    "remote_host": {
                                        "type": "string",
                                        "title": "Remote Host",
                                        "description": "IP address of the remote host."
                                    },
                                    "last_login_timestamp": {
                                        "type": "integer",
                                        "title": "Last Login Timestamp",
                                        "description": "Last login timestamp, in seconds."
                                    },
                                    "interface": {
                                        "type": "string",
                                        "title": "Interface Name",
                                        "description": "Interface Name."
                                    },
                                    "duration": {
                                        "type": "integer",
                                        "title": "Duration",
                                        "description": "Connection duration, in seconds."
                                    },
                                    "two_factor_auth": {
                                        "type": "boolean",
                                        "title": "Two-Factor Authentication",
                                        "description": "True when the user is using two-factor authentication."
                                    },
                                    "subsessions": {
                                        "title": "SSL-VPN Sub-Sessions Data",
                                        "description": "List of SSL-VPN sub-sessions.",
                                        "type": "array",
                                        "items": {
                                            "title": "SSL-VPN Sub-Session Data",
                                            "description": "Sub-session data.",
                                            "type": "object",
                                            "required": [
                                                "index",
                                                "parent_index",
                                                "mode",
                                                "type",
                                                "desthost"
                                            ],
                                            "properties": {
                                                "index": {
                                                    "type": "integer",
                                                    "title": "Index",
                                                    "description": "Sub-Session index."
                                                },
                                                "parent_index": {
                                                    "type": "integer",
                                                    "title": "Parent Session Index",
                                                    "description": "Parent session index."
                                                },
                                                "mode": {
                                                    "type": "string",
                                                    "title": "Client Mode",
                                                    "description": "Client mode.",
                                                    "enum": [
                                                        "Any",
                                                        "Web",
                                                        "Port Forward",
                                                        "Tunnel",
                                                        "Unknown"
                                                    ]
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "title": "Sub-Session Type",
                                                    "description": "Sub-session type.",
                                                    "enum": [
                                                        "HTTP\/HTTPS",
                                                        "Telnet",
                                                        "SSH",
                                                        "FTP",
                                                        "NFS",
                                                        "SMB",
                                                        "VNC",
                                                        "RDP",
                                                        "Ping",
                                                        "Citrix",
                                                        "Port Forward",
                                                        "Unknown"
                                                    ]
                                                },
                                                "aip": {
                                                    "type": "string",
                                                    "title": "IP Address",
                                                    "description": "IP address of tunnel."
                                                },
                                                "aipv6": {
                                                    "type": "string",
                                                    "title": "IP Address",
                                                    "description": "IP address of tunnel."
                                                },
                                                "in_bytes": {
                                                    "type": "integer",
                                                    "title": "Incoming Bytes",
                                                    "description": "Incoming data size, in bytes."
                                                },
                                                "out_bytes": {
                                                    "type": "integer",
                                                    "title": "Outgoing Bytes",
                                                    "description": "Outgoing data size, in bytes."
                                                },
                                                "desthost": {
                                                    "type": "string",
                                                    "title": "Destination Host",
                                                    "description": "Destination host."
                                                }
                                            }
                                        }
                                    },
                                    "subsession_type": {
                                        "type": "string",
                                        "title": "Sub-Session Type",
                                        "description": "Sub-session type.",
                                        "enum": [
                                            "HTTP\/HTTPS",
                                            "Telnet",
                                            "SSH",
                                            "FTP",
                                            "NFS",
                                            "SMB",
                                            "VNC",
                                            "RDP",
                                            "Ping",
                                            "Citrix",
                                            "Port Forward",
                                            "Unknown"
                                        ]
                                    },
                                    "subsession_desc": {
                                        "type": "string",
                                        "title": "Sub-Session Description",
                                        "description": "Sub-session description."
                                    }
                                },
                                "additionalProperties": true
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/vpn\/ssl.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "vpn"
                ]
            }
        },
        "\/vpn\/ssl\/clear_tunnel": {
            "post": {
                "summary": "Remove all active tunnel sessions in current virtual domain.\nAccess Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "vpn"
                ]
            }
        },
        "\/vpn\/ssl\/delete": {
            "post": {
                "summary": "Terminate the provided SSL-VPN session.\nAccess Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "type": {
                                    "description": "The session type [websession|subsession].",
                                    "type": "string"
                                },
                                "index": {
                                    "description": "The session index.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "vpn"
                ]
            }
        },
        "\/vpn\/ssl\/stats": {
            "get": {
                "summary": "Return statistics about the SSL-VPN.\nAccess Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "vpn"
                ]
            }
        },
        "\/vpn\/ssl\/provision-user": {
            "post": {
                "summary": "Provision SSL-VPN users with target applications. The provisioning message (email or SMS) is sent with no confirmation of success.\nAccess Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Provision SSL-VPN Users",
                            "description": "Provision SSL-VPN users with target applications. The provisioning message (email or SMS) is sent with no confirmation of success.",
                            "type": "object",
                            "required": [
                                "host",
                                "port",
                                "vpn_name"
                            ],
                            "properties": {
                                "host": {
                                    "type": "string",
                                    "title": "Hostname\/IP Address",
                                    "description": "The hostname\/IP address of the VPN server."
                                },
                                "port": {
                                    "type": "integer",
                                    "title": "Server Port",
                                    "description": "The port of the VPN server."
                                },
                                "vpn_name": {
                                    "type": "string",
                                    "title": "VPN Name",
                                    "description": "The name of the VPN configuration."
                                },
                                "method": {
                                    "type": "string",
                                    "title": "Provision Method",
                                    "description": "Method to send provision message.",
                                    "enum": [
                                        "email",
                                        "sms"
                                    ]
                                },
                                "email_list": {
                                    "anyOf": [
                                        {
                                            "title": "Email Address",
                                            "description": "The email address that the VPN configuration message should be sent to.",
                                            "type": "string"
                                        },
                                        {
                                            "title": "Email Addresses",
                                            "description": "The list of email addresses that the VPN configuration message should be sent to.",
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "title": "Email Address",
                                                "description": "The email address that the VPN configuration message should be sent to."
                                            }
                                        }
                                    ]
                                },
                                "phone_user_list": {
                                    "anyOf": [
                                        {
                                            "title": "User",
                                            "description": "The user that the VPN configuration SMS should be sent to.",
                                            "type": "string"
                                        },
                                        {
                                            "title": "Users",
                                            "description": "The list of users that the VPN configuration SMS should be sent to.",
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "title": "User",
                                                "description": "The user that the VPN configuration SMS should be sent to."
                                            }
                                        }
                                    ]
                                },
                                "phone_number_list": {
                                    "anyOf": [
                                        {
                                            "title": "Phone Number",
                                            "description": "The phone number that the VPN configuration SMS should be sent to.",
                                            "type": "string"
                                        },
                                        {
                                            "title": "Phone Numbers",
                                            "description": "The list of phone numbers that the VPN configuration SMS should be sent to.",
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "title": "Phone Number",
                                                "description": "The phone number that the VPN configuration SMS should be sent to."
                                            }
                                        }
                                    ]
                                },
                                "sms_method": {
                                    "type": "string",
                                    "title": "SMS Send Method",
                                    "description": "The method to be used for sending the SMS.",
                                    "enum": [
                                        "fortiguard",
                                        "custom"
                                    ]
                                },
                                "sms_server": {
                                    "type": "string",
                                    "title": "SMS Server",
                                    "description": "The SMS server to be used for sending SMS messages. Required if the \"custom\" SMS method is chosen."
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/vpn\/ssl.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "host": {
                                    "description": "The hostname\/IP address of the VPN server.",
                                    "type": "string"
                                },
                                "port": {
                                    "description": "The port of the VPN server.",
                                    "type": "integer"
                                },
                                "vpn_name": {
                                    "description": "The name of the VPN configuration.",
                                    "type": "string"
                                },
                                "method": {
                                    "description": "Method to send [email|sms]. If not set, email will be the default.",
                                    "type": "string"
                                },
                                "email_list": {
                                    "description": "The email address that the VPN configuration message should be sent to. Required if \"method\" is \"email\".",
                                    "type": "string"
                                },
                                "phone_user_list": {
                                    "description": "The user that the VPN configuration SMS should be sent to. At least one of \"phone_user_list\" or \"phone_number_list\" is required if \"method\" is \"sms\".",
                                    "type": "string"
                                },
                                "phone_number_list": {
                                    "description": "The phone number that the VPN configuration SMS should be sent to. At least one of \"phone_user_list\" or \"phone_number_list\" is required if \"method\" is \"sms\".",
                                    "type": "string"
                                },
                                "sms_method": {
                                    "description": "The method to be used for sending the SMS [fortiguard|custom]. Default is \"fortiguard\".",
                                    "type": "string"
                                },
                                "sms_server": {
                                    "description": "The SMS server to be used for sending SMS messages, required if \"custom\" SMS method is chosen.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "vpn"
                ]
            }
        },
        "\/vpn-certificate\/ca\/import": {
            "post": {
                "summary": "Import CA certificate.\nAccess Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "import_method": {
                                    "description": "Method of importing CA certificate.[file|scep]",
                                    "type": "string"
                                },
                                "scep_url": {
                                    "description": "SCEP server URL. Required for import via SCEP",
                                    "type": "string"
                                },
                                "scep_ca_id": {
                                    "description": "SCEP server CA identifier for import via SCEP.",
                                    "type": "string"
                                },
                                "scope": {
                                    "description": "Scope of CA certificate [vdom*|global]. Global scope is only accessible for global administrators",
                                    "type": "string"
                                },
                                "file_content": {
                                    "description": "Provided when uploading a file: base64 encoded file data. Must not contain whitespace or other invalid base64 characters. Must be included in HTTP body.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "vpn-certificate"
                ]
            }
        },
        "\/vpn-certificate\/crl\/import": {
            "post": {
                "summary": "Import certificate revocation lists (CRL) from file content.\nAccess Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "scope": {
                                    "description": "Scope of CRL [vdom*|global]. Global scope is only accessible for global administrators",
                                    "type": "string"
                                },
                                "file_content": {
                                    "description": "Provided when uploading a file: base64 encoded file data. Must not contain whitespace or other invalid base64 characters. Must be included in HTTP body.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "vpn-certificate"
                ]
            }
        },
        "\/vpn-certificate\/local\/create": {
            "post": {
                "summary": "Generate a new certificate signed by Fortinet_CA_SSL.\nAccess Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "certname": {
                                    "description": "Certificate name.",
                                    "type": "string"
                                },
                                "common_name": {
                                    "description": "Certificate common name.",
                                    "type": "string"
                                },
                                "scope": {
                                    "description": "Scope of local certificate [vdom*|global]. Global scope is only accessible for global administrators.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "vpn-certificate"
                ]
            }
        },
        "\/vpn-certificate\/local\/import": {
            "post": {
                "summary": "Import local certificate.\nAccess Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "type": {
                                    "description": "Type of certificate.[local|pkcs12|regular]",
                                    "type": "string"
                                },
                                "certname": {
                                    "description": "Certificate name for pkcs12 and regular certificate types.",
                                    "type": "string"
                                },
                                "password": {
                                    "description": "Optional password for pkcs12 and regular certificate types.",
                                    "type": "string"
                                },
                                "key_file_content": {
                                    "description": "Key content encoded in BASE64 for regular certificate type.",
                                    "type": "string"
                                },
                                "scope": {
                                    "description": "Scope of local certificate [vdom*|global]. Global scope is only accessible for global administrators",
                                    "type": "string"
                                },
                                "acme_domain": {
                                    "description": "A valid domain that resolves to an IP whose TCP port 443 reaches this FortiGate.",
                                    "type": "string"
                                },
                                "acme_email": {
                                    "description": "Contact email address that is required by some CAs such as LetsEncrypt.",
                                    "type": "string"
                                },
                                "acme_ca_url": {
                                    "description": "URL for the ACME CA server.",
                                    "type": "string"
                                },
                                "acme_rsa_key_size": {
                                    "description": "Length of the RSA private key for the generated cert.",
                                    "type": "integer"
                                },
                                "acme_renew_window": {
                                    "description": "Certificate renewal window in days.",
                                    "type": "integer"
                                },
                                "file_content": {
                                    "description": "Provided when uploading a file: base64 encoded file data. Must not contain whitespace or other invalid base64 characters. Must be included in HTTP body.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "vpn-certificate"
                ]
            }
        },
        "\/vpn-certificate\/remote\/import": {
            "post": {
                "summary": "Import remote certificate.\nAccess Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "scope": {
                                    "description": "Scope of CRL [vdom*|global]. Global scope is only accessible for global administrators",
                                    "type": "string"
                                },
                                "file_content": {
                                    "description": "Provided when uploading a file: base64 encoded file data. Must not contain whitespace or other invalid base64 characters. Must be included in HTTP body.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "vpn-certificate"
                ]
            }
        },
        "\/vpn-certificate\/csr\/generate": {
            "post": {
                "summary": "Generate a certificate signing request (CSR) and a private key. The CSR can be retrieved \/ downloaded from CLI, GUI and REST API.\nAccess Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "certname": {
                                    "description": "Certicate name. Used to retrieve \/ download the CSR. Not included in CSR and key content.",
                                    "type": "string"
                                },
                                "subject": {
                                    "description": "Subject (Host IP\/Domain Name\/E-Mail). Common Name (CN) of the certificate subject.",
                                    "type": "string"
                                },
                                "keytype": {
                                    "description": "Generate a RSA or an elliptic curve certificate request [rsa|ec]. The Elliptic Curve option is unavailable if the FortiGate is a Low Encryption Device (LENC)",
                                    "type": "string"
                                },
                                "keysize": {
                                    "description": "Key size.[1024|1536|2048|4096]. 512 only if the FortiGate is a Low Encryption Device (LENC). Required when keytype is RSA.",
                                    "type": "integer"
                                },
                                "curvename": {
                                    "description": "Elliptic curve name. [secp256r1|secp384r1|secp521r1]. Unavailable if the FortiGate is a Low Encryption Device (LENC). Required when keytype is ec.",
                                    "type": "string"
                                },
                                "orgunits": {
                                    "description": "List of organization units. Organization Units (OU) of the certificate subject.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "org": {
                                    "description": "Organization (O) of the certificate subject.",
                                    "type": "string"
                                },
                                "city": {
                                    "description": "Locality (L) of the certificate subject.",
                                    "type": "string"
                                },
                                "state": {
                                    "description": "State (ST) of the certificate subject.",
                                    "type": "string"
                                },
                                "countrycode": {
                                    "description": "Country (C) of the certificate subject.",
                                    "type": "string"
                                },
                                "email": {
                                    "description": "Email of the certificate subject.",
                                    "type": "string"
                                },
                                "subject_alt_name": {
                                    "description": "Subject alternative name (SAN) of the certificate.",
                                    "type": "string"
                                },
                                "password": {
                                    "description": "Password \/ pass phrase for the private key. If not provided, FortiGate generates a random one.",
                                    "type": "string"
                                },
                                "scep_url": {
                                    "description": "SCEP server URL. If provided, use the url to enroll the csr through SCEP.",
                                    "type": "string"
                                },
                                "scep_password": {
                                    "description": "SCEP challenge password. Some SCEP servers may require challege password. Provide it when SCEP server requires.",
                                    "type": "string"
                                },
                                "scope": {
                                    "description": "Scope of CSR [vdom*|global]. Global scope is only accessible for global administrators",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "vpn-certificate"
                ]
            }
        },
        "\/vpn-certificate\/cert-name-available": {
            "get": {
                "summary": "Check if the local certificate name is available to use.\nAccess Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Certificate Name Available",
                            "description": "Verify that the provided certificate name is available for use.",
                            "type": "object",
                            "required": [
                                "is_valid",
                                "value"
                            ],
                            "properties": {
                                "is_valid": {
                                    "title": "Is Valid",
                                    "description": "True when the provided certificate name is available.",
                                    "type": "boolean"
                                },
                                "value": {
                                    "title": "Value",
                                    "description": "Certificate name.",
                                    "type": "string"
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/vpn-certificate\/cert-name-available.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "The certificate name to be checked.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Scope of certificate name [vdom*|global]. Global scope is only accessible for global administrators",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn-certificate"
                ]
            }
        },
        "\/wanopt\/history": {
            "get": {
                "summary": "Retrieve WAN opt. statistics history.\nAccess Group: wanoptgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Statistics period [10-min*|hour|day|week|30-day].",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "wanopt"
                ]
            }
        },
        "\/wanopt\/history\/reset": {
            "post": {
                "summary": "Reset WAN opt. statistics.\nAccess Group: wanoptgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "wanopt"
                ]
            }
        },
        "\/wanopt\/webcache": {
            "get": {
                "summary": "Retrieve webcache statistics history.\nAccess Group: wanoptgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Statistics period [10-min*|hour|day|week|30-day].",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "wanopt"
                ]
            }
        },
        "\/wanopt\/webcache\/reset": {
            "post": {
                "summary": "Reset webcache statistics.\nAccess Group: wanoptgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "wanopt"
                ]
            }
        },
        "\/wanopt\/peer_stats": {
            "get": {
                "summary": "Retrieve a list of WAN opt peer statistics.\nAccess Group: wanoptgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "wanopt"
                ]
            }
        },
        "\/wanopt\/peer_stats\/reset": {
            "post": {
                "summary": "Reset WAN opt peer statistics.\nAccess Group: wanoptgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "wanopt"
                ]
            }
        },
        "\/web-ui\/language\/import": {
            "post": {
                "summary": "Import localization language file to this FortiGate.\nAccess Group: sysgrp.mnt",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "file_content": {
                                    "description": "Provided when uploading a file: base64 encoded file data. Must not contain whitespace or other invalid base64 characters. Must be included in HTTP body.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "web-ui"
                ]
            }
        },
        "\/web-ui\/custom-language\/create": {
            "post": {
                "summary": "Upload custom language file to this Fortigate.\nAccess Group: sysgrp.mnt",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "filename": {
                                    "description": "Name of custom language file.",
                                    "type": "string"
                                },
                                "lang_name": {
                                    "description": "Name of custom language entry.",
                                    "type": "string"
                                },
                                "lang_comments": {
                                    "description": "Comments of custom language entry.",
                                    "type": "string"
                                },
                                "file_content": {
                                    "description": "Provided when uploading a file: base64 encoded file data. Must not contain whitespace or other invalid base64 characters. Must be included in HTTP body.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "web-ui"
                ]
            }
        },
        "\/web-ui\/custom-language\/update": {
            "post": {
                "summary": "Update custom language file to this Fortigate.\nAccess Group: sysgrp.mnt",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkey": {
                                    "description": "Name of custom language entry.",
                                    "type": "string"
                                },
                                "lang_name": {
                                    "description": "New name of custom language entry.",
                                    "type": "string"
                                },
                                "filename": {
                                    "description": "Name of custom language file.",
                                    "type": "string"
                                },
                                "lang_comments": {
                                    "description": "Comments of custom language entry.",
                                    "type": "string"
                                },
                                "file_content": {
                                    "description": "Provided when uploading a file: base64 encoded file data. Must not contain whitespace or other invalid base64 characters. Must be included in HTTP body.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "web-ui"
                ]
            }
        },
        "\/web-ui\/custom-language\/download": {
            "get": {
                "summary": "Download a custom language file.\nAccess Group: sysgrp.mnt",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "filename",
                        "in": "query",
                        "description": "Name of custom language entry.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "web-ui"
                ]
            }
        },
        "\/webcache\/stats": {
            "get": {
                "summary": "Retrieve webcache statistics.\nAccess Group: wanoptgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Statistics period [10min|hour|day|month].",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "webcache"
                ]
            }
        },
        "\/webcache\/stats\/reset": {
            "post": {
                "summary": "Reset all webcache statistics.\nAccess Group: wanoptgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "webcache"
                ]
            }
        },
        "\/webfilter\/override": {
            "get": {
                "summary": "List all administrative and user initiated webfilter overrides.\nAccess Group: utmgrp.webfilter",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "webfilter"
                ]
            }
        },
        "\/webfilter\/override\/delete": {
            "post": {
                "summary": "Delete a configured webfilter override.\nAccess Group: utmgrp.webfilter",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mkey": {
                                    "description": "ID of webfilter override to delete.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "webfilter"
                ]
            }
        },
        "\/webfilter\/malicious-urls": {
            "get": {
                "summary": "List all URLs in FortiSandbox malicious URL database.\nAccess Group: utmgrp.webfilter",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "webfilter"
                ]
            }
        },
        "\/webfilter\/malicious-urls\/stat": {
            "get": {
                "summary": "Retrieve statistics for the FortiSandbox malicious URL database.\nAccess Group: utmgrp.webfilter",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "webfilter"
                ]
            }
        },
        "\/webfilter\/category-quota": {
            "get": {
                "summary": "Retrieve quota usage statistics for webfilter categories.\nAccess Group: utmgrp.webfilter",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "profile",
                        "in": "query",
                        "description": "Webfilter profile.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User or IP (required if profile specified).",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "webfilter"
                ]
            }
        },
        "\/webfilter\/category-quota\/reset": {
            "post": {
                "summary": "Reset webfilter quota for user or IP.\nAccess Group: utmgrp.webfilter",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "profile": {
                                    "description": "Webfilter profile to reset.",
                                    "type": "string"
                                },
                                "user": {
                                    "description": "User or IP to reset with.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "webfilter"
                ]
            }
        },
        "\/webfilter\/fortiguard-categories": {
            "get": {
                "summary": "Return FortiGuard web filter categories.\nAccess Group: any",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "include_unrated",
                        "in": "query",
                        "description": "Include Unrated category in result list.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "convert_unrated_id",
                        "in": "query",
                        "description": "Convert Unrated category id to the one for CLI use.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "tags": [
                    "webfilter"
                ]
            }
        },
        "\/webfilter\/trusted-urls": {
            "get": {
                "summary": "List all URLs in FortiGuard trusted URL database.\nAccess Group: utmgrp.webfilter",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "webfilter"
                ]
            }
        },
        "\/webproxy\/pacfile\/download": {
            "get": {
                "summary": "Download webproxy PAC file.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "webproxy"
                ]
            }
        },
        "\/webproxy\/pacfile\/upload": {
            "post": {
                "summary": "Upload webproxy PAC file.\nAccess Group: netgrp.cfg",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "filename": {
                                    "description": "Name of PAC file.",
                                    "type": "string"
                                },
                                "file_content": {
                                    "description": "Provided when uploading a file: base64 encoded file data. Must not contain whitespace or other invalid base64 characters. Must be included in HTTP body.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "webproxy"
                ]
            }
        },
        "\/wifi\/client": {
            "get": {
                "summary": "Retrieve a list of connected WiFi clients.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "WiFi Clients",
                            "description": "Retrieve a list of connected WiFi clients.",
                            "type": "array",
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "description": "Connected WiFi client information.",
                                        "title": "Connected WiFi Client",
                                        "required": [
                                            "wtp_name",
                                            "wtp_id",
                                            "wtp_radio",
                                            "wtp_ip",
                                            "mac",
                                            "authentication",
                                            "captive_portal_authenticated",
                                            "data_rate_bps",
                                            "snr",
                                            "idle_time",
                                            "association_time",
                                            "bandwidth_tx",
                                            "bandwidth_rx",
                                            "lan_authenticated",
                                            "channel",
                                            "signal",
                                            "vci",
                                            "host",
                                            "security",
                                            "encrypt",
                                            "noise",
                                            "radio_type",
                                            "mimo",
                                            "vlan_id",
                                            "health"
                                        ],
                                        "properties": {
                                            "ip6": {
                                                "type": "array",
                                                "description": "Client IPv6 addresses.",
                                                "title": "Client IPv6 Addresses",
                                                "items": {
                                                    "type": "string",
                                                    "description": "IPv6 address.",
                                                    "title": "IPv6 Address"
                                                }
                                            },
                                            "ip": {
                                                "type": "string",
                                                "description": "Client IP address.",
                                                "title": "Client IP Address"
                                            },
                                            "wtp_name": {
                                                "type": "string",
                                                "description": "FortiAP name.",
                                                "title": "FortiAP Name"
                                            },
                                            "wtp_id": {
                                                "type": "string",
                                                "description": "FortiAP ID.",
                                                "title": "FortiAP ID"
                                            },
                                            "wtp_radio": {
                                                "type": "integer",
                                                "description": "FortiAP radio ID.",
                                                "title": "FortiAP Radio ID"
                                            },
                                            "wtp_ip": {
                                                "type": "string",
                                                "description": "FortiAP IP address.",
                                                "title": "FortiAP IP Address"
                                            },
                                            "vap_name": {
                                                "type": "string",
                                                "description": "VAP name.",
                                                "title": "VAP Name"
                                            },
                                            "ssid": {
                                                "type": "string",
                                                "description": "SSID.",
                                                "title": "SSID"
                                            },
                                            "user": {
                                                "type": "string",
                                                "description": "User.",
                                                "title": "User"
                                            },
                                            "group": {
                                                "type": "string",
                                                "description": "Group.",
                                                "title": "Group"
                                            },
                                            "mac": {
                                                "type": "string",
                                                "description": "MAC address.",
                                                "title": "MAC Address"
                                            },
                                            "os": {
                                                "type": "string",
                                                "description": "OS version.",
                                                "title": "OS"
                                            },
                                            "hostname": {
                                                "type": "string",
                                                "description": "Hostname.",
                                                "title": "Hostname"
                                            },
                                            "authentication": {
                                                "type": "string",
                                                "description": "Authentication status.",
                                                "title": "Authentication",
                                                "enum": [
                                                    "pass",
                                                    "authenticating"
                                                ]
                                            },
                                            "captive_portal_authenticated": {
                                                "type": "integer",
                                                "description": "Captive portal authentication status code. 1 - Passed, 2 - Failed, 3 - Timed out, 4 - Authenticated.",
                                                "title": "Captive Portal Authentication Status",
                                                "enum": [
                                                    1,
                                                    2,
                                                    3,
                                                    4
                                                ]
                                            },
                                            "manufacturer": {
                                                "type": "string",
                                                "description": "Manufacturer.",
                                                "title": "Manufacturer"
                                            },
                                            "data_rate_bps": {
                                                "type": "integer",
                                                "description": "Data rate, in bps.",
                                                "title": "Data Rate"
                                            },
                                            "snr": {
                                                "type": "integer",
                                                "description": "Signal-to-noise ratio.",
                                                "title": "SNR"
                                            },
                                            "idle_time": {
                                                "type": "integer",
                                                "description": "Idle time, in seconds.",
                                                "title": "Idle Time"
                                            },
                                            "association_time": {
                                                "type": "integer",
                                                "description": "Association time, in milliseconds.",
                                                "title": "Association Time"
                                            },
                                            "bandwidth_tx": {
                                                "type": "integer",
                                                "description": "Transmission bandwidth.",
                                                "title": "Transmission Bandwidth"
                                            },
                                            "bandwidth_rx": {
                                                "type": "integer",
                                                "description": "Reception bandwidth.",
                                                "title": "Reception Bandwidth"
                                            },
                                            "lan_authenticated": {
                                                "type": "boolean",
                                                "description": "True when the LAN port is authenticated.",
                                                "title": "LAN Authentication"
                                            },
                                            "channel": {
                                                "type": "integer",
                                                "description": "Channel ID.",
                                                "title": "Channel"
                                            },
                                            "signal": {
                                                "type": "integer",
                                                "description": "Signal strength (dBm).",
                                                "title": "Signal Strength"
                                            },
                                            "vci": {
                                                "type": "string",
                                                "description": "VCI.",
                                                "title": "VCI"
                                            },
                                            "host": {
                                                "type": "string",
                                                "description": "Host.",
                                                "title": "Host"
                                            },
                                            "security": {
                                                "type": "integer",
                                                "description": "Security type index.",
                                                "title": "Security Type"
                                            },
                                            "encrypt": {
                                                "type": "integer",
                                                "description": "Encryption type index.",
                                                "title": "Encryption Type"
                                            },
                                            "noise": {
                                                "type": "integer",
                                                "description": "Noise level (dB).",
                                                "title": "Noise"
                                            },
                                            "radio_type": {
                                                "type": "string",
                                                "description": "Radio type.",
                                                "title": "Radio Type"
                                            },
                                            "mimo": {
                                                "type": "string",
                                                "description": "MIMO mode.",
                                                "title": "MIMO Mode"
                                            },
                                            "vlan_id": {
                                                "type": "integer",
                                                "description": "VLAN ID.",
                                                "title": "VLAN ID"
                                            },
                                            "tx_discard_percentage": {
                                                "type": "integer",
                                                "description": "Percentage of transmissions that are discarded.",
                                                "title": "Transmission Discard Percentage"
                                            },
                                            "tx_retry_percentage": {
                                                "type": "integer",
                                                "description": "Percentage of transmissions that are transmitted again.",
                                                "title": "Transmission Retry Percentage"
                                            },
                                            "mpsk_name": {
                                                "type": "string",
                                                "description": "Multiple Pre-Shared Key Name.",
                                                "title": "Multiple Pre-Shared Key Name"
                                            },
                                            "triangulation_regions": {
                                                "title": "FortiAPs Detecting the Device",
                                                "description": "Retrieve at most three FortiAPs Detecting the Device.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "description": "FortiAP Detecting the Device.",
                                                    "title": "FortiAP Detecting the Device",
                                                    "properties": {
                                                        "wtp_id": {
                                                            "type": "string",
                                                            "description": "FortiAP ID.",
                                                            "title": "FortiAP ID"
                                                        },
                                                        "rssi": {
                                                            "type": "integer",
                                                            "description": "RSSI.",
                                                            "title": "RSSI"
                                                        },
                                                        "last_seen": {
                                                            "type": "integer",
                                                            "description": "Unix Timestamp for when the Device was Detected by FortiAP.",
                                                            "title": "Last Seen"
                                                        }
                                                    }
                                                }
                                            },
                                            "health": {
                                                "type": "object",
                                                "description": "Client health details.",
                                                "title": "Client Health",
                                                "additionalProperties": {
                                                    "type": "object",
                                                    "description": "Client health metric details.",
                                                    "title": "Client Health Metric",
                                                    "properties": {
                                                        "value": {
                                                            "anyOf": [
                                                                {
                                                                    "type": "string",
                                                                    "description": "String value of this health metric.",
                                                                    "title": "String Value"
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "description": "Integer value of this health metric.",
                                                                    "title": "Integer Value"
                                                                }
                                                            ]
                                                        },
                                                        "severity": {
                                                            "type": "string",
                                                            "description": "Severity label of this health metric.",
                                                            "title": "Severity",
                                                            "enum": [
                                                                "good",
                                                                "fair",
                                                                "poor"
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "additionalProperties": true
                                    },
                                    {
                                        "type": "object",
                                        "description": "Failed Login WiFi client information.",
                                        "title": "Failed Login WiFi Client",
                                        "required": [
                                            "ssid",
                                            "mac",
                                            "hostname"
                                        ],
                                        "properties": {
                                            "time": {
                                                "type": "integer",
                                                "description": "Disconnection time.",
                                                "title": "Disconnection Time"
                                            },
                                            "ssid": {
                                                "type": "string",
                                                "description": "SSID.",
                                                "title": "SSID"
                                            },
                                            "mac": {
                                                "type": "string",
                                                "description": "MAC address.",
                                                "title": "MAC Address"
                                            },
                                            "hostname": {
                                                "type": "string",
                                                "description": "Hostname.",
                                                "title": "Hostname"
                                            },
                                            "user": {
                                                "type": "string",
                                                "description": "User.",
                                                "title": "User"
                                            },
                                            "wtp_name": {
                                                "type": "string",
                                                "description": "FortiAP name.",
                                                "title": "FortiAP Name"
                                            },
                                            "wtpgrp_name": {
                                                "type": "string",
                                                "description": "FortiAP group name.",
                                                "title": "FortiAP Group Name"
                                            },
                                            "wtp_id": {
                                                "type": "string",
                                                "description": "FortiAP ID.",
                                                "title": "FortiAP ID"
                                            }
                                        }
                                    }
                                ]
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/wifi\/client.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Starting entry index.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of entries to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Request type [all*|fail-login].",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "with_triangulation",
                        "in": "query",
                        "description": "Enable to include regions of FortiAP detecting the client.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/client\/disassociate": {
            "post": {
                "summary": "Disassociate a WiFi client from the FortiAP it's currently connected to. The client will need to reassociate with the same FortiAP or another to resume connectivity.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mac": {
                                    "description": "MAC address.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/managed_ap": {
            "get": {
                "summary": "Retrieve a list of managed FortiAPs.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Managed FortiAPs",
                            "description": "Retrieve a list of managed FortiAPs.",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "description": "Managed FortiAP information.",
                                "title": "Managed FortiAP",
                                "required": [
                                    "name",
                                    "is_local",
                                    "serial",
                                    "ap_profile",
                                    "state"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "FortiAP name.",
                                        "title": "FortiAP Name"
                                    },
                                    "wtp_id": {
                                        "type": "string",
                                        "description": "FortiAP ID.",
                                        "title": "FortiAP ID"
                                    },
                                    "vdom": {
                                        "type": "string",
                                        "description": "Virtual domain name.",
                                        "title": "Virtual Domain Name"
                                    },
                                    "serial": {
                                        "type": "string",
                                        "description": "FortiAP serial number.",
                                        "title": "FortiAP Serial"
                                    },
                                    "is_local": {
                                        "type": "boolean",
                                        "description": "True when this is the local WiFi radio.",
                                        "title": "Local WiFi Radio"
                                    },
                                    "ap_profile": {
                                        "type": "string",
                                        "description": "FortiAP profile.",
                                        "title": "FortiAP Profile"
                                    },
                                    "state": {
                                        "type": "string",
                                        "description": "State.",
                                        "title": "State",
                                        "enum": [
                                            "discovered",
                                            "authorized",
                                            "disabled",
                                            ""
                                        ]
                                    },
                                    "mode": {
                                        "type": "string",
                                        "description": "Mode.",
                                        "title": "Mode"
                                    },
                                    "connecting_from": {
                                        "type": "string",
                                        "description": "Connecting from.",
                                        "title": "Connecting From"
                                    },
                                    "connecting_interface": {
                                        "type": "string",
                                        "description": "Connecting interface.",
                                        "title": "Connecting Interface"
                                    },
                                    "parent_wtp_id": {
                                        "type": "string",
                                        "description": "Parent FortiAP ID.",
                                        "title": "Parent FortiAP ID"
                                    },
                                    "status": {
                                        "type": "string",
                                        "description": "Status.",
                                        "title": "Status",
                                        "enum": [
                                            "disconnected",
                                            "connecting",
                                            "connected",
                                            "image_downloading",
                                            "connected_image"
                                        ]
                                    },
                                    "region_code": {
                                        "type": "string",
                                        "description": "Region code.",
                                        "title": "Region Code"
                                    },
                                    "ap_group": {
                                        "type": "string",
                                        "description": "FortiAP group.",
                                        "title": "FortiAP Group"
                                    },
                                    "mgmt_vlanid": {
                                        "type": "integer",
                                        "description": "Management VLAN ID.",
                                        "title": "Management VLAN ID"
                                    },
                                    "mesh_uplink": {
                                        "type": "string",
                                        "description": "Mesh uplink.",
                                        "title": "Mesh Uplink",
                                        "enum": [
                                            "local",
                                            "mesh",
                                            "ethernet"
                                        ]
                                    },
                                    "mesh_hop_count": {
                                        "type": "integer",
                                        "description": "Mesh hop count.",
                                        "title": "Mesh Hop Count"
                                    },
                                    "mesh_uplink_intf": {
                                        "type": "string",
                                        "description": "Mesh uplink interface.",
                                        "title": "Mesh Uplink Interface"
                                    },
                                    "mesh_uplink_intf_speed": {
                                        "type": "number",
                                        "description": "Mesh uplink interface speed in Mbps.",
                                        "title": "Mesh Uplink Interface Speed"
                                    },
                                    "clients": {
                                        "type": "integer",
                                        "description": "Client count.",
                                        "title": "Client Count"
                                    },
                                    "os_version": {
                                        "type": "string",
                                        "description": "OS version.",
                                        "title": "OS Version"
                                    },
                                    "local_ipv4_addr": {
                                        "type": "string",
                                        "description": "Local IPv4 address.",
                                        "title": "Local IPv4 Address"
                                    },
                                    "board_mac": {
                                        "type": "string",
                                        "description": "Board MAC address.",
                                        "title": "Board MAC Address"
                                    },
                                    "join_time": {
                                        "type": "string",
                                        "description": "Join time.",
                                        "title": "Join Time"
                                    },
                                    "join_time_raw": {
                                        "type": "integer",
                                        "description": "Join time, in seconds.",
                                        "title": "Raw Join Time"
                                    },
                                    "last_reboot_time": {
                                        "type": "string",
                                        "description": "Last reboot time.",
                                        "title": "Last Reboot Time"
                                    },
                                    "last_reboot_time_raw": {
                                        "type": "integer",
                                        "description": "Last reboot time, in seconds.",
                                        "title": "Raw Last Reboot Time"
                                    },
                                    "reboot_last_day": {
                                        "type": "boolean",
                                        "description": "True when the FortiAP has been rebooted within the last 24 hours.",
                                        "title": "Reboot Within One Day"
                                    },
                                    "connection_state": {
                                        "type": "string",
                                        "description": "Connection state.",
                                        "title": "Connection State"
                                    },
                                    "image_download_progress": {
                                        "type": "integer",
                                        "description": "Image download progress.",
                                        "title": "Image Download Progress"
                                    },
                                    "last_failure": {
                                        "type": "string",
                                        "description": "Details of the last failure.",
                                        "title": "Last Failure"
                                    },
                                    "last_failure_code": {
                                        "type": "integer",
                                        "description": "Last failure code.",
                                        "title": "Last Failure Code"
                                    },
                                    "last_failure_param": {
                                        "type": "string",
                                        "description": "Last failure parameters.",
                                        "title": "Last Failure Parameters"
                                    },
                                    "last_failure_time": {
                                        "type": "string",
                                        "description": "Last failure time.",
                                        "title": "Last Failure Time"
                                    },
                                    "override_profile": {
                                        "type": "boolean",
                                        "description": "True when the associated profile is overridden.",
                                        "title": "Override Profile"
                                    },
                                    "ssid": {
                                        "type": "array",
                                        "description": "SSIDs.",
                                        "title": "SSIDs",
                                        "items": {
                                            "type": "object",
                                            "description": "SSID information grouped by radios.",
                                            "title": "SSID by Radios",
                                            "required": [
                                                "radio",
                                                "list"
                                            ],
                                            "properties": {
                                                "radio": {
                                                    "type": "integer",
                                                    "description": "Radio ID.",
                                                    "title": "Radio ID"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "description": "List of SSIDs.",
                                                    "title": "SSID List",
                                                    "items": {
                                                        "type": "string",
                                                        "description": "SSID name.",
                                                        "title": "SSID Name"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "data_chan_sec": {
                                        "type": "string",
                                        "description": "Data security type.",
                                        "title": "Data Security Type",
                                        "enum": [
                                            "clear-text",
                                            "dtls-enabled",
                                            "ipsec-vpn"
                                        ]
                                    },
                                    "dedicated_scan_enabled": {
                                        "type": "boolean",
                                        "description": "True when dedicated scan is enabled.",
                                        "title": "Dedicated Scan Enabled"
                                    },
                                    "indoor_outdoor": {
                                        "type": "integer",
                                        "description": "FortiAP indoor\/outdoor configuration value (0 = indoor, 1 = outdoor, 2 = default).",
                                        "title": "Indoor\/Outdoor Value",
                                        "enum": [
                                            0,
                                            1,
                                            2
                                        ]
                                    },
                                    "subtype": {
                                        "type": "integer",
                                        "description": "FortiAP subtype.",
                                        "title": "FortiAP Subtype"
                                    },
                                    "sensors_temperatures": {
                                        "title": "Temperatures",
                                        "description": "List of temperatures, in Celsius.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "title": "Temperature",
                                            "description": "Temperature, in Celsius."
                                        }
                                    },
                                    "radio": {
                                        "type": "array",
                                        "description": "Information for radios.",
                                        "title": "Radios",
                                        "items": {
                                            "type": "object",
                                            "description": "Radio information.",
                                            "title": "Radio",
                                            "required": [
                                                "radio_id",
                                                "mode",
                                                "radio_type"
                                            ],
                                            "properties": {
                                                "radio_id": {
                                                    "type": "integer",
                                                    "description": "Radio ID.",
                                                    "title": "Radio ID"
                                                },
                                                "mode": {
                                                    "type": "string",
                                                    "description": "Mode.",
                                                    "title": "Mode"
                                                },
                                                "country_name": {
                                                    "type": "string",
                                                    "description": "Country name.",
                                                    "title": "Country Name"
                                                },
                                                "country_code": {
                                                    "type": "integer",
                                                    "description": "Country code.",
                                                    "title": "Country Code"
                                                },
                                                "client_count": {
                                                    "type": "integer",
                                                    "description": "Client count.",
                                                    "title": "Client Count"
                                                },
                                                "base_bssid": {
                                                    "type": "string",
                                                    "description": "Base BSSID.",
                                                    "title": "Base BSSID"
                                                },
                                                "max_vaps": {
                                                    "type": "integer",
                                                    "description": "Maximum number of virtual APs.",
                                                    "title": "Maximum Virtual APs"
                                                },
                                                "oper_chan": {
                                                    "type": "integer",
                                                    "description": "Operating channel.",
                                                    "title": "Operating Channel"
                                                },
                                                "oper_txpower": {
                                                    "type": "integer",
                                                    "description": "Operating transmit power.",
                                                    "title": "Operating Transmit Power"
                                                },
                                                "channel_utilization_timestamp": {
                                                    "type": "integer",
                                                    "description": "Channel utilization timestamp.",
                                                    "title": "Channel Utilization Timestamp"
                                                },
                                                "channel_utilization_percent": {
                                                    "type": "integer",
                                                    "description": "Channel utilization percent.",
                                                    "title": "Channel Utilization Percent"
                                                },
                                                "noise_floor": {
                                                    "type": "integer",
                                                    "description": "Noise floor.",
                                                    "title": "Noise Floor"
                                                },
                                                "bandwidth_rx": {
                                                    "type": "integer",
                                                    "description": "Receive bandwidth.",
                                                    "title": "Receive Bandwidth"
                                                },
                                                "bandwidth_tx": {
                                                    "type": "integer",
                                                    "description": "Transmit bandwidth.",
                                                    "title": "Transmit Bandwidth"
                                                },
                                                "bytes_rx": {
                                                    "type": "integer",
                                                    "description": "The number of received bytes.",
                                                    "title": "Receive Bytes"
                                                },
                                                "bytes_tx": {
                                                    "type": "integer",
                                                    "description": "The number of transmitted bytes.",
                                                    "title": "Transmit Bytes"
                                                },
                                                "interfering_aps": {
                                                    "type": "integer",
                                                    "description": "Number of interfering FortiAPs.",
                                                    "title": "Interfering FortiAPs"
                                                },
                                                "mac_errors_rx": {
                                                    "type": "integer",
                                                    "description": "The number of received MAC errors.",
                                                    "title": "Receive MAC Errors"
                                                },
                                                "mac_errors_tx": {
                                                    "type": "integer",
                                                    "description": "The number of transmitted MAC errors.",
                                                    "title": "Transmit MAC Errors"
                                                },
                                                "background_scan_enabled": {
                                                    "type": "boolean",
                                                    "description": "True when background scan is enabled.",
                                                    "title": "Background Scan Enabled"
                                                },
                                                "detect_interfering": {
                                                    "type": "boolean",
                                                    "description": "True when interference is being detected.",
                                                    "title": "Detect Interfering"
                                                },
                                                "sta_locate": {
                                                    "type": "boolean",
                                                    "description": "True when station locating is enabled.",
                                                    "title": "Station Locate Enabled"
                                                },
                                                "override_band": {
                                                    "type": "boolean",
                                                    "description": "True when the band is overridden.",
                                                    "title": "Band Overridden"
                                                },
                                                "radio_type": {
                                                    "type": "string",
                                                    "description": "Radio Type.",
                                                    "title": "Radio Type"
                                                },
                                                "override_txpower": {
                                                    "type": "boolean",
                                                    "description": "True when transmit power is overridden.",
                                                    "title": "Transmit Power Overridden"
                                                },
                                                "auto_txpower": {
                                                    "type": "boolean",
                                                    "description": "True when auto transmit power is enabled.",
                                                    "title": "Auto Transmit Power"
                                                },
                                                "auto_txpower_high": {
                                                    "type": "integer",
                                                    "description": "Highest auto transmit power.",
                                                    "title": "Auto Transmit Power High"
                                                },
                                                "auto_txpower_low": {
                                                    "type": "integer",
                                                    "description": "Lowest auto transmit power.",
                                                    "title": "Auto Transmit Power Low"
                                                },
                                                "txpower": {
                                                    "type": "integer",
                                                    "description": "Transmit power.",
                                                    "title": "Transmit Power"
                                                },
                                                "override_sa": {
                                                    "type": "boolean",
                                                    "description": "True when spectrum analysis is overridden.",
                                                    "title": "Spectrum Analysis Overridden"
                                                },
                                                "override_vaps": {
                                                    "type": "boolean",
                                                    "description": "True when virtual APs are overridden.",
                                                    "title": "Virtual APs Overridden"
                                                },
                                                "ssid": {
                                                    "type": "object",
                                                    "description": "SSID.",
                                                    "title": "SSID",
                                                    "additionalProperties": {
                                                        "type": "string",
                                                        "description": "SSID name.",
                                                        "title": "SSID Name"
                                                    }
                                                },
                                                "all_ssids": {
                                                    "type": "boolean",
                                                    "description": "True when it contains all SSIDs.",
                                                    "title": "All SSIDs"
                                                },
                                                "override_channel": {
                                                    "type": "boolean",
                                                    "description": "True when channel is overridden.",
                                                    "title": "Channel Overridden"
                                                },
                                                "channels": {
                                                    "type": "array",
                                                    "description": "List of channels.",
                                                    "title": "Channels",
                                                    "items": {
                                                        "type": "string",
                                                        "description": "Channel.",
                                                        "title": "Channel"
                                                    }
                                                },
                                                "tx_discard_percentage": {
                                                    "type": "integer",
                                                    "description": "Current transmit discard percentage.",
                                                    "title": "Transmit Discard Percentage"
                                                },
                                                "tx_retries_percent": {
                                                    "type": "integer",
                                                    "description": "Current transmit retry percentage.",
                                                    "title": "Transmit Retry Percentage"
                                                },
                                                "channel_utilization": {
                                                    "type": "boolean",
                                                    "description": "True when channel utilization is enabled.",
                                                    "title": "Channel Utilization Enabled"
                                                },
                                                "ssid_mode": {
                                                    "type": "string",
                                                    "description": "SSID mode.",
                                                    "title": "SSID Mode",
                                                    "enum": [
                                                        "manual",
                                                        "tunnel",
                                                        "bridge",
                                                        ""
                                                    ]
                                                },
                                                "health": {
                                                    "type": "object",
                                                    "description": "Radio health details.",
                                                    "title": "Radio Health",
                                                    "additionalProperties": {
                                                        "type": "object",
                                                        "description": "Radio health metric details.",
                                                        "title": "Radio Health Metric",
                                                        "properties": {
                                                            "value": {
                                                                "anyOf": [
                                                                    {
                                                                        "type": "string",
                                                                        "description": "Value of this health metric.",
                                                                        "title": "Value"
                                                                    },
                                                                    {
                                                                        "type": "integer",
                                                                        "description": "Value of this health metric.",
                                                                        "title": "Value"
                                                                    }
                                                                ]
                                                            },
                                                            "severity": {
                                                                "type": "string",
                                                                "description": "Severity label of this health metric.",
                                                                "title": "Severity",
                                                                "enum": [
                                                                    "good",
                                                                    "fair",
                                                                    "poor"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                },
                                                "min_2g_channel": {
                                                    "type": "integer",
                                                    "description": "The 2.4GHz channel with the lowest channel utilization.",
                                                    "title": "2.4GHz Channel With Lowest Utilization"
                                                },
                                                "min_2g_channel_utilization": {
                                                    "type": "integer",
                                                    "description": "The lowest channel utilization in 2.4GHz channels.",
                                                    "title": "Lowest 2.4GHz Channel Utilization"
                                                },
                                                "max_2g_channel": {
                                                    "type": "integer",
                                                    "description": "The 2.4GHz channel with the highest channel utilization.",
                                                    "title": "2.4GHz Channel With Highest Utilization"
                                                },
                                                "max_2g_channel_utilization": {
                                                    "type": "integer",
                                                    "description": "The highest channel utilization in 2.4GHz channels.",
                                                    "title": "Highest 2.4GHz Channel Utilization"
                                                },
                                                "min_5g_channel": {
                                                    "type": "integer",
                                                    "description": "The 5GHz channel with the lowest channel utilization.",
                                                    "title": "5GHz Channel With Lowest Utilization"
                                                },
                                                "min_5g_channel_utilization": {
                                                    "type": "integer",
                                                    "description": "The lowest channel utilization in 5GHz channels.",
                                                    "title": "Lowest 5GHz Channel Utilization"
                                                },
                                                "max_5g_channel": {
                                                    "type": "integer",
                                                    "description": "The 5GHz channel with the highest channel utilization.",
                                                    "title": "5GHz Channel With Highest Utilization"
                                                },
                                                "max_5g_channel_utilization": {
                                                    "type": "integer",
                                                    "description": "The highest channel utilization in 5GHz channels.",
                                                    "title": "Highest 5GHz Channel Utilization"
                                                },
                                                "supported_bands": {
                                                    "type": "array",
                                                    "title": "Supported Bands",
                                                    "description": "Supported bands.",
                                                    "items": {
                                                        "type": "string",
                                                        "title": "Supported Band",
                                                        "description": "Supported band.",
                                                        "enum": [
                                                            "a",
                                                            "b",
                                                            "g",
                                                            "n",
                                                            "n-5G",
                                                            "ac",
                                                            "ac-2G",
                                                            "ax",
                                                            "ax-5G"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "health": {
                                        "type": "object",
                                        "description": "FortiAP health details.",
                                        "title": "FortiAP Health",
                                        "required": [
                                            "general"
                                        ],
                                        "properties": {
                                            "general": {
                                                "type": "object",
                                                "description": "General health details.",
                                                "title": "General Health",
                                                "properties": {
                                                    "uplink_status": {
                                                        "type": "array",
                                                        "description": "Details for health of uplinks.",
                                                        "title": "Health of Uplinks",
                                                        "items": {
                                                            "type": "object",
                                                            "description": "Uplink health details.",
                                                            "title": "Uplink Health",
                                                            "properties": {
                                                                "value": {
                                                                    "type": "integer",
                                                                    "description": "Value.",
                                                                    "title": "Value"
                                                                },
                                                                "severity": {
                                                                    "type": "string",
                                                                    "description": "Severity label.",
                                                                    "title": "Severity",
                                                                    "enum": [
                                                                        "good",
                                                                        "fair",
                                                                        "poor"
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "additionalProperties": {
                                                    "type": "object",
                                                    "description": "General health metric details.",
                                                    "title": "General Health Metric",
                                                    "properties": {
                                                        "value": {
                                                            "anyOf": [
                                                                {
                                                                    "type": "string",
                                                                    "description": "Value of this health metric.",
                                                                    "title": "Value"
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "description": "Value of this health metric.",
                                                                    "title": "Value"
                                                                }
                                                            ]
                                                        },
                                                        "severity": {
                                                            "type": "string",
                                                            "description": "Severity label of this health metric.",
                                                            "title": "Severity",
                                                            "enum": [
                                                                "good",
                                                                "fair",
                                                                "poor"
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "wired": {
                                        "type": "array",
                                        "description": "Wired interfaces.",
                                        "title": "Wired Interfaces",
                                        "items": {
                                            "type": "object",
                                            "description": "Wired interface.",
                                            "title": "Wired Interface",
                                            "required": [
                                                "interface",
                                                "bytes_rx",
                                                "bytes_tx",
                                                "packets_rx",
                                                "packets_tx",
                                                "errors_rx",
                                                "errors_tx",
                                                "dropped_rx",
                                                "dropped_tx",
                                                "collisions"
                                            ],
                                            "properties": {
                                                "interface": {
                                                    "type": "string",
                                                    "description": "Interface.",
                                                    "title": "Interface"
                                                },
                                                "bytes_rx": {
                                                    "type": "integer",
                                                    "description": "The number of received bytes.",
                                                    "title": "Receive Bytes"
                                                },
                                                "bytes_tx": {
                                                    "type": "integer",
                                                    "description": "The number of transmitted Bytes.",
                                                    "title": "Transmit Bytes"
                                                },
                                                "packets_rx": {
                                                    "type": "integer",
                                                    "description": "The number of received packets.",
                                                    "title": "Receive Packets"
                                                },
                                                "packets_tx": {
                                                    "type": "integer",
                                                    "description": "The number of transmitted packets.",
                                                    "title": "Transmit Packets"
                                                },
                                                "errors_rx": {
                                                    "type": "integer",
                                                    "description": "The number of bad received packets.",
                                                    "title": "Receive Errors"
                                                },
                                                "errors_tx": {
                                                    "type": "integer",
                                                    "description": "The number of bad transmitted packets.",
                                                    "title": "Transmit Errors"
                                                },
                                                "dropped_rx": {
                                                    "type": "integer",
                                                    "description": "The number of dropped received packets.",
                                                    "title": "Dropped Receive Packets"
                                                },
                                                "dropped_tx": {
                                                    "type": "integer",
                                                    "description": "The number of dropped transmitted packets.",
                                                    "title": "Dropped Transmit Packets"
                                                },
                                                "collisions": {
                                                    "type": "integer",
                                                    "description": "Number of collisions.",
                                                    "title": "Collisions"
                                                }
                                            }
                                        }
                                    },
                                    "wan_status": {
                                        "type": "array",
                                        "description": "WAN statuses.",
                                        "title": "WAN Statuses",
                                        "items": {
                                            "type": "object",
                                            "description": "WAN status.",
                                            "title": "WAN Status",
                                            "required": [
                                                "interface",
                                                "link_speed_mbps",
                                                "carrier_link"
                                            ],
                                            "properties": {
                                                "interface": {
                                                    "type": "string",
                                                    "description": "Interface.",
                                                    "title": "Interface"
                                                },
                                                "link_speed_mbps": {
                                                    "type": "integer",
                                                    "description": "Link speed, in Mbps.",
                                                    "title": "Link Speed"
                                                },
                                                "carrier_link": {
                                                    "type": "boolean",
                                                    "description": "True when the WAN has a carrier link.",
                                                    "title": "Carrier Link"
                                                },
                                                "full_duplex": {
                                                    "type": "boolean",
                                                    "description": "True when the WAN has full duplex.",
                                                    "title": "Full Duplex"
                                                }
                                            }
                                        }
                                    },
                                    "country_code_conflict": {
                                        "type": "integer",
                                        "description": "Country code conflict.",
                                        "title": "Country Code Conflict"
                                    },
                                    "configured_country_name": {
                                        "type": "string",
                                        "description": "Configured country name.",
                                        "title": "Configured Country Name"
                                    },
                                    "configured_country_code": {
                                        "type": "integer",
                                        "description": "Configured country code.",
                                        "title": "Configured Country Code"
                                    },
                                    "cli_enabled": {
                                        "type": "boolean",
                                        "description": "True when the CLI is enabled.",
                                        "title": "CLI Enabled"
                                    },
                                    "region": {
                                        "type": "string",
                                        "description": "Region.",
                                        "title": "Region"
                                    },
                                    "location": {
                                        "type": "string",
                                        "description": "Location.",
                                        "title": "Location"
                                    },
                                    "wtp_mode": {
                                        "type": "string",
                                        "description": "FortiAP mode.",
                                        "title": "FortiAP Mode"
                                    },
                                    "lldp_enable": {
                                        "type": "boolean",
                                        "description": "True when Link Layer Discovery Protocol is enabled.",
                                        "title": "Link Layer Discovery Protocol Enabled"
                                    },
                                    "lldp": {
                                        "type": "array",
                                        "description": "List of Link Layer Discovery Protocols.",
                                        "title": "Link Layer Discovery Protocols",
                                        "items": {
                                            "type": "object",
                                            "description": "Link Layer Discovery Protocol information.",
                                            "title": "Link Layer Discovery Protocol",
                                            "required": [
                                                "local_port",
                                                "chassis_id",
                                                "system_name",
                                                "system_description",
                                                "capability",
                                                "port_id",
                                                "port_description",
                                                "mau_operating_mode",
                                                "ip",
                                                "vlan"
                                            ],
                                            "properties": {
                                                "local_port": {
                                                    "type": "string",
                                                    "description": "Local port.",
                                                    "title": "Local Port"
                                                },
                                                "chassis_id": {
                                                    "type": "string",
                                                    "description": "Chassis ID.",
                                                    "title": "Chassis ID"
                                                },
                                                "system_name": {
                                                    "type": "string",
                                                    "description": "System name.",
                                                    "title": "System Name"
                                                },
                                                "system_description": {
                                                    "type": "string",
                                                    "description": "System description.",
                                                    "title": "System Description"
                                                },
                                                "capability": {
                                                    "type": "string",
                                                    "description": "Capability.",
                                                    "title": "Capability"
                                                },
                                                "port_id": {
                                                    "type": "string",
                                                    "description": "Port ID.",
                                                    "title": "Port ID"
                                                },
                                                "port_description": {
                                                    "type": "string",
                                                    "description": "Port description.",
                                                    "title": "Port Description"
                                                },
                                                "mau_operating_mode": {
                                                    "type": "string",
                                                    "description": "Media access unit operating mode.",
                                                    "title": "Media Access Unit Operating Mode"
                                                },
                                                "ip": {
                                                    "type": "string",
                                                    "description": "IP address.",
                                                    "title": "IP Address"
                                                },
                                                "vlan": {
                                                    "type": "integer",
                                                    "description": "VLAN.",
                                                    "title": "VLAN"
                                                }
                                            }
                                        }
                                    },
                                    "led_blink": {
                                        "type": "boolean",
                                        "description": "True when the LED is blinking.",
                                        "title": "LED Blink"
                                    },
                                    "led_blink_unlimited": {
                                        "type": "boolean",
                                        "description": "True when the LED is blinking indefinitely.",
                                        "title": "LED Blink Unlimited"
                                    },
                                    "led_blink_duration": {
                                        "type": "integer",
                                        "description": "LED blink duration, in seconds.",
                                        "title": "LED Blink Duration"
                                    },
                                    "cpu_usage": {
                                        "type": "integer",
                                        "description": "CPU usage, in percentage.",
                                        "title": "CPU Usage"
                                    },
                                    "mem_free": {
                                        "type": "integer",
                                        "description": "Free memory, in KB.",
                                        "title": "Memory Free"
                                    },
                                    "mem_total": {
                                        "type": "integer",
                                        "description": "Total memory, in KB.",
                                        "title": "Memory Total"
                                    },
                                    "is_wpa3_supported": {
                                        "type": "boolean",
                                        "description": "True when WPA3 is supported.",
                                        "title": "WPA3 Supported"
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/wifi\/managed_ap.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "wtp_id",
                        "in": "query",
                        "description": "Filter: single managed FortiAP by ID.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "incl_local",
                        "in": "query",
                        "description": "Enable to include the local FortiWiFi device in the results.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/managed_ap\/set_status": {
            "post": {
                "summary": "Update administrative state for a given FortiAP (enable or disable authorization).\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "wtpname": {
                                    "description": "FortiAP name.",
                                    "type": "string"
                                },
                                "admin": {
                                    "description": "New FortiAP administrative state [enable|disable|discovered].",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/firmware": {
            "get": {
                "summary": "Retrieve a list of current and recommended firmware for FortiAPs in use.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#",
                            "title": "FortiAP Firmware",
                            "definitions": {
                                "image_id": {
                                    "type": "string",
                                    "description": "FortiAP image ID.",
                                    "title": "Image ID"
                                },
                                "version": {
                                    "type": "string",
                                    "description": "Firmware version in string format.",
                                    "title": "Version"
                                },
                                "major": {
                                    "type": "number",
                                    "title": "Major Version",
                                    "description": "Major number of firmware version."
                                },
                                "minor": {
                                    "type": "number",
                                    "title": "Minor Version",
                                    "description": "Minor number of firmware version."
                                },
                                "patch": {
                                    "type": "number",
                                    "title": "Patch Version",
                                    "description": "Patch number of firmware version."
                                },
                                "build": {
                                    "type": "number",
                                    "title": "Firmware Build Number",
                                    "description": "Build number of firmware version."
                                },
                                "available": {
                                    "type": "boolean",
                                    "description": "True when firmware is available.",
                                    "title": "Availability"
                                },
                                "version_segments": {
                                    "type": "array",
                                    "description": "Version segments (major version, minor version and build number).",
                                    "title": "Version Segments",
                                    "items": {
                                        "type": "integer",
                                        "title": "Version Segment",
                                        "description": "Version segment."
                                    }
                                },
                                "model": {
                                    "type": "string",
                                    "description": "FortiAP model name.",
                                    "title": "Model"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Error description.",
                                    "title": "Error",
                                    "enum": [
                                        "timeout"
                                    ]
                                }
                            },
                            "description": "Retrieve a list of current and recommended firmware for FortiAPs in use.",
                            "type": "object",
                            "required": [
                                "models",
                                "status"
                            ],
                            "properties": {
                                "models": {
                                    "type": "object",
                                    "description": "List of models and corresponding firmware.",
                                    "title": "Models",
                                    "additionalProperties": {
                                        "type": "object",
                                        "description": "Firmware for this FortiAP model.",
                                        "title": "FortiAP Model",
                                        "properties": {
                                            "available": {
                                                "$ref": "#\/definitions\/available"
                                            },
                                            "version_segments": {
                                                "$ref": "#\/definitions\/version_segments"
                                            },
                                            "model": {
                                                "$ref": "#\/definitions\/model"
                                            },
                                            "major": {
                                                "$ref": "#\/definitions\/major"
                                            },
                                            "minor": {
                                                "$ref": "#\/definitions\/minor"
                                            },
                                            "patch": {
                                                "$ref": "#\/definitions\/patch"
                                            },
                                            "build": {
                                                "$ref": "#\/definitions\/build"
                                            },
                                            "version": {
                                                "$ref": "#\/definitions\/version"
                                            },
                                            "image_id": {
                                                "$ref": "#\/definitions\/image_id"
                                            },
                                            "error": {
                                                "$ref": "#\/definitions\/error"
                                            }
                                        }
                                    }
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Status of the firmware API request.",
                                    "title": "Status",
                                    "enum": [
                                        "error",
                                        "success"
                                    ]
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/wifi\/firmware.json"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "description": "FortiGuard connection timeout (defaults to 2 seconds).",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Target firmware version of the parent FortiGate.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/firmware\/download": {
            "post": {
                "summary": "Download FortiAP firmware from FortiGuard to the FortiGate according to FortiAP image ID.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "anyOf": [
                                {
                                    "title": "Firmware Download",
                                    "description": "Download FortiAP firmware from FortiGuard to the FortiGate according to the FortiAP image ID.",
                                    "type": "object",
                                    "required": [
                                        "downloaded",
                                        "image_id"
                                    ],
                                    "properties": {
                                        "downloaded": {
                                            "type": "boolean",
                                            "description": "True when firmware is successfully downloaded.",
                                            "title": "Downloaded"
                                        },
                                        "image_id": {
                                            "type": "string",
                                            "description": "FortiAP image ID.",
                                            "title": "Image ID"
                                        }
                                    }
                                },
                                {
                                    "title": "Firmware Download Failure",
                                    "description": "Indicates a failure to download FortiAP firmware.",
                                    "type": "integer"
                                }
                            ],
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/wifi\/firmware.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "image_id": {
                                    "description": "FortiAP image ID.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/firmware\/push": {
            "post": {
                "summary": "Push FortiAP firmware to the given device.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "serial": {
                                    "description": "The target device's serial.",
                                    "type": "string"
                                },
                                "image_id": {
                                    "description": "FortiAP image ID.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/firmware\/upload": {
            "post": {
                "summary": "Upload FortiAP firmware to the management FortiGate and then push to target FortiAPs.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Firmware Upload",
                            "description": "Upload FortiAP firmware to the management FortiGate and then push to target FortiAPs.",
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean",
                                "description": "True when FortiAP is successfully upgraded.",
                                "title": "FortiAP Upgrade Success"
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/wifi\/firmware.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "serials": {
                                    "description": "The target device's serial.",
                                    "type": "string"
                                },
                                "file_content": {
                                    "description": "Provided when uploading a file: base64 encoded file data. Must not contain whitespace or other invalid base64 characters. Must be included in HTTP body.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/managed_ap\/restart": {
            "post": {
                "summary": "Restart a given FortiAP.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "wtpname": {
                                    "description": "FortiAP name.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/managed_ap\/led-blink": {
            "post": {
                "summary": "Turn a managed FortiAP's LED blinking on or off.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiAP LED Blinking Control",
                            "description": "Enable\/disable LED blinking on a managed FortiAP.",
                            "type": "object",
                            "additionalProperties": {
                                "title": "FortiAP LED Blink Result",
                                "description": "True when LED blink on the FortiAP was successful.",
                                "type": "boolean"
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/wifi\/managed_ap.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "serials": {
                                    "description": "FortiAP IDs to turn LED blink on\/off.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "blink": {
                                    "description": "True to turn on blinking, false to turn off.",
                                    "type": "boolean"
                                },
                                "duration": {
                                    "description": "Time to blink, in seconds. 0 or omit for indefinite.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/network\/list": {
            "get": {
                "summary": "When FortiWiFi is in client mode, retrieve list of local WiFi networks.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "WiFi Client Network List",
                            "description": "A list of the WiFi devices known by the FortiWiFi for use in client mode.",
                            "type": "array",
                            "items": {
                                "title": "WiFi Client Network",
                                "description": "A WiFi client device that is known by the FortiWiFi.",
                                "type": "object",
                                "required": [
                                    "ssid",
                                    "channel",
                                    "mac_address",
                                    "vendor",
                                    "transmission_rate",
                                    "security",
                                    "signal_strength"
                                ],
                                "properties": {
                                    "ssid": {
                                        "title": "Network SSID",
                                        "description": "SSID of the WiFi device.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "title": "Status",
                                        "description": "Current connection status of the WiFi network to the FortiWiFi's WiFi client.",
                                        "type": "string",
                                        "enum": [
                                            "none",
                                            "connecting",
                                            "connected",
                                            "failed",
                                            "unknown"
                                        ]
                                    },
                                    "channel": {
                                        "title": "Channel",
                                        "description": "Channel number used by the WiFi device.",
                                        "type": "integer"
                                    },
                                    "mac_address": {
                                        "title": "MAC Address",
                                        "description": "MAC Address of the WiFi device.",
                                        "type": "string"
                                    },
                                    "vendor": {
                                        "title": "Manufacturer",
                                        "description": "Manufacturer of the WiFi device.",
                                        "type": "string"
                                    },
                                    "transmission_rate": {
                                        "title": "Transmission Rate",
                                        "description": "Data transmission rate of the WiFi device, in megabits\/s.",
                                        "type": "integer"
                                    },
                                    "security": {
                                        "title": "Security",
                                        "description": "Security type used by the WiFi device.",
                                        "type": "string"
                                    },
                                    "signal_strength": {
                                        "title": "Signal Strength",
                                        "description": "The strength of the signal received from the WiFi device, in dBm.",
                                        "type": "integer"
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/wifi\/network.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/network\/status": {
            "get": {
                "summary": "When FortiWiFi is in client mode, retrieve status of currently connected WiFi network, if any.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "WiFi Client Network Status",
                            "description": "FortiWiFi network connection status when in client mode.",
                            "type": "object",
                            "required": [
                                "status"
                            ],
                            "properties": {
                                "status": {
                                    "title": "Status",
                                    "description": "Current status of the WiFi connection.",
                                    "type": "string",
                                    "enum": [
                                        "none",
                                        "connecting",
                                        "connected",
                                        "failed",
                                        "invalid_mode",
                                        "unknown"
                                    ]
                                },
                                "ssid": {
                                    "title": "Network SSID",
                                    "description": "SSID of the current network the FortiWiFi WiFi client is associated with.",
                                    "type": "string"
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/wifi\/network.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/network\/connect": {
            "post": {
                "summary": "When FortiWiFi is in client mode, connect to the specified network, if configured in the 'wifi' interface.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ssid": {
                                    "description": "SSID of network to connect to.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/network\/scan": {
            "post": {
                "summary": "When FortiWiFi is in client mode, start a scan for local WiFi networks.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/ap_status": {
            "get": {
                "summary": "Retrieve statistics for all managed FortiAPs.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiAP Statistics",
                            "description": "Retrieve statistics for all managed FortiAPs.",
                            "type": "object",
                            "properties": {
                                "wtp_session_count": {
                                    "type": "integer",
                                    "description": "Number of FortiAP sessions.",
                                    "title": "FortiAP Session Count"
                                },
                                "wtp_active": {
                                    "type": "integer",
                                    "description": "Number of active FortiAPs.",
                                    "title": "Active FortiAPs"
                                },
                                "wtp_down": {
                                    "type": "integer",
                                    "description": "Number of FortiAPs that are down.",
                                    "title": "Down FortiAPs"
                                },
                                "wtp_rebooted": {
                                    "type": "integer",
                                    "description": "Number of rebooted FortiAPs.",
                                    "title": "Rebooted FortiAPs"
                                },
                                "client_count": {
                                    "type": "integer",
                                    "description": "Number of clients.",
                                    "title": "Client Count"
                                },
                                "client_count_max": {
                                    "type": "integer",
                                    "description": "Maximum number of allowed clients.",
                                    "title": "Max Client Count"
                                },
                                "client_peak_2g_1hour": {
                                    "type": "array",
                                    "description": "Tracks the peak number of 2.4GHz clients in each 15-minute window of an hour.",
                                    "title": "Peak 2.4G Clients Per Hour",
                                    "items": {
                                        "type": "integer",
                                        "description": "Peak 2.4G client count in a 15-minute window.",
                                        "title": "2.4G Client Count"
                                    }
                                },
                                "client_peak_5g_1hour": {
                                    "type": "array",
                                    "description": "Tracks the peak number of 5GHz clients in each 15-minute window of an hour.",
                                    "title": "Peak 5G Clients Per Hour",
                                    "items": {
                                        "type": "integer",
                                        "description": "Peak 5G client count in a 15-minute window.",
                                        "title": "5G Client Count"
                                    }
                                },
                                "client_peak_2g_24hour": {
                                    "type": "array",
                                    "description": "Tracks the peak number of 2.4GHz clients in each hour of a day.",
                                    "title": "Peak 2.4G Clients Per Day",
                                    "items": {
                                        "type": "integer",
                                        "description": "Peak 2.4G client count in each hour.",
                                        "title": "2.4G Client Count"
                                    }
                                },
                                "client_peak_5g_24hour": {
                                    "type": "array",
                                    "description": "Tracks the peak number of 5GHz clients in each hour of a day.",
                                    "title": "Peak 5G Clients Per Day",
                                    "items": {
                                        "type": "integer",
                                        "description": "Peak 5G client count in each hour.",
                                        "title": "5G Client Count"
                                    }
                                },
                                "client_peak_2g_30day": {
                                    "type": "array",
                                    "description": "Tracks the peak number of 2.4GHz clients on each day of a month.",
                                    "title": "Peak 2.4G Clients Per Month",
                                    "items": {
                                        "type": "integer",
                                        "description": "Peak 2.4G client count in each day.",
                                        "title": "2.4G Client Count"
                                    }
                                },
                                "client_peak_5g_30day": {
                                    "type": "array",
                                    "description": "Tracks the peak number of 5GHz clients on each day of a month.",
                                    "title": "Peak 5G Clients Per Month",
                                    "items": {
                                        "type": "integer",
                                        "description": "Peak 5G client count in each day.",
                                        "title": "5G Client Count"
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/wifi\/ap_status.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/interfering_ap": {
            "get": {
                "summary": "Retrieve a list of interfering APs for one FortiAP radio.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Interfering SSIDs",
                            "description": "Retrieve a list of interfering SSIDs for one FortiAP radio.",
                            "type": "array",
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "description": "Interfering SSIDs detected by one FortiAP radio.",
                                        "title": "Interfering SSIDs",
                                        "properties": {
                                            "mac": {
                                                "type": "string",
                                                "description": "MAC address of the interfering SSID.",
                                                "title": "MAC Address"
                                            },
                                            "channel": {
                                                "type": "integer",
                                                "description": "Channel ID of the interfering SSID.",
                                                "title": "Channel"
                                            },
                                            "ssid": {
                                                "type": "string",
                                                "description": "SSID of the interfering SSID.",
                                                "title": "SSID"
                                            },
                                            "signal": {
                                                "type": "integer",
                                                "description": "Signal strength (dBm).",
                                                "title": "Signal Strength"
                                            },
                                            "is_infra_ssid": {
                                                "type": "boolean",
                                                "description": "True when this is an infrastructure interfering SSID.",
                                                "title": "Infrastructure Interfering SSID"
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "description": "Interfering SSIDs detected all FortiAPs of current FortiGate.",
                                        "title": "Interfering SSIDs",
                                        "properties": {
                                            "mac": {
                                                "type": "string",
                                                "description": "MAC address of the interfering SSID.",
                                                "title": "MAC Address"
                                            },
                                            "wtps": {
                                                "type": "array",
                                                "description": "List of FortiAPs.",
                                                "title": "FortiAPs",
                                                "items": {
                                                    "type": "object",
                                                    "description": "FortiAP which detects this interfering SSID.",
                                                    "title": "FortiAP",
                                                    "properties": {
                                                        "wtp_id": {
                                                            "type": "string",
                                                            "description": "Serial number of the FortiAP.",
                                                            "title": "FortiAP Serial Number"
                                                        },
                                                        "radio": {
                                                            "type": "integer",
                                                            "description": "Radio ID of the FortiAP.",
                                                            "title": "Radio ID"
                                                        },
                                                        "signal": {
                                                            "type": "integer",
                                                            "description": "Signal strength (dBm).",
                                                            "title": "Signal Strength"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/wifi\/interfering_ap.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "wtp",
                        "in": "query",
                        "description": "FortiAP ID to query.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "radio",
                        "in": "query",
                        "description": "Radio ID.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Starting entry index.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of entries to return.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/euclid": {
            "get": {
                "summary": "Retrieve presence analytics statistics.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "WiFi Analytics Statistics",
                            "description": "Retrieve statistics for presence analytics.",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "description": "Analytics statistics.",
                                "title": "Analytics Statistics",
                                "required": [
                                    "vs",
                                    "sn",
                                    "sq",
                                    "tp",
                                    "ht"
                                ],
                                "properties": {
                                    "vs": {
                                        "type": "integer",
                                        "description": "The version number of the sensor message.",
                                        "title": "Sensor Message Version"
                                    },
                                    "sn": {
                                        "type": "string",
                                        "description": "Sensor ID.",
                                        "title": "Sensor ID"
                                    },
                                    "sq": {
                                        "type": "integer",
                                        "description": "Sequence number - running count of messages from this sensor (resets to 0 if sensor turns off).",
                                        "title": "Sequence Number"
                                    },
                                    "tp": {
                                        "type": "string",
                                        "description": "Type of message.",
                                        "title": "Message Type",
                                        "enum": [
                                            "ht",
                                            "hl"
                                        ]
                                    },
                                    "ht": {
                                        "type": "array",
                                        "description": "Detected devices.",
                                        "title": "Detected Devices",
                                        "items": {
                                            "type": "object",
                                            "description": "Detected device information.",
                                            "title": "Detected Device",
                                            "required": [
                                                "si",
                                                "bi",
                                                "sm",
                                                "ap",
                                                "cn",
                                                "ot",
                                                "ct",
                                                "cf",
                                                "is",
                                                "i2",
                                                "i3",
                                                "il",
                                                "ih",
                                                "ss",
                                                "s2",
                                                "s3",
                                                "sl",
                                                "sh",
                                                "so",
                                                "sc"
                                            ],
                                            "properties": {
                                                "si": {
                                                    "type": "string",
                                                    "description": "Station ID of the detected device. Encrypted (using a shared key) or hashed.",
                                                    "title": "Station ID"
                                                },
                                                "bi": {
                                                    "type": "string",
                                                    "description": "BSSID associated with the device. Encrypted (using a shared key) or hashed.",
                                                    "title": "BSSID"
                                                },
                                                "sm": {
                                                    "type": "string",
                                                    "description": "Station OUI (Organizationally Unique Identifier, or manufacturer ID).",
                                                    "title": "Station OUI"
                                                },
                                                "ap": {
                                                    "type": "integer",
                                                    "description": "Set to a non-zero value if this is a FortiAP.",
                                                    "title": "FortiAP"
                                                },
                                                "cn": {
                                                    "type": "integer",
                                                    "description": "Count of frames summarized in this message for this device.",
                                                    "title": "Frame Count"
                                                },
                                                "ot": {
                                                    "type": "integer",
                                                    "description": "The timestamp of the first frame in this window (Unix time, in seconds).",
                                                    "title": "First Frame Timestamp"
                                                },
                                                "ct": {
                                                    "type": "integer",
                                                    "description": "The timestamp of the last frame in this window (Unix time, in seconds).",
                                                    "title": "Last Frame Timestamp"
                                                },
                                                "cf": {
                                                    "type": "integer",
                                                    "description": "Frequency of the last frame received.",
                                                    "title": "Last Frame Frequency"
                                                },
                                                "is": {
                                                    "type": "integer",
                                                    "description": "Sum of intervals.",
                                                    "title": "Sum of Intervals"
                                                },
                                                "i2": {
                                                    "type": "integer",
                                                    "description": "Sum of squared intervals.",
                                                    "title": "Sum of Squared Intervals"
                                                },
                                                "i3": {
                                                    "type": "integer",
                                                    "description": "Sum of cubed intervals.",
                                                    "title": "Sum of Cubed Intervals"
                                                },
                                                "il": {
                                                    "type": "integer",
                                                    "description": "Minimum interval.",
                                                    "title": "Minimum Interval"
                                                },
                                                "ih": {
                                                    "type": "integer",
                                                    "description": "Maximum interval.",
                                                    "title": "Maximum Interval"
                                                },
                                                "ss": {
                                                    "type": "integer",
                                                    "description": "Sum of signal strength; should be a negative number.",
                                                    "title": "Sum of Signal Strength"
                                                },
                                                "s2": {
                                                    "type": "integer",
                                                    "description": "Sum of squared signal strength; used to calculate variance.",
                                                    "title": "Sum of Squared Signal Strength"
                                                },
                                                "s3": {
                                                    "type": "integer",
                                                    "description": "Sum of cubed signal strength; used to calculate skew.",
                                                    "title": "Sum of Cubed Signal Strength"
                                                },
                                                "sl": {
                                                    "type": "integer",
                                                    "description": "Minimum signal strength.",
                                                    "title": "Minimum Signal Strength"
                                                },
                                                "sh": {
                                                    "type": "integer",
                                                    "description": "Maximum signal strength.",
                                                    "title": "Maximum Signal Strength"
                                                },
                                                "so": {
                                                    "type": "integer",
                                                    "description": "First signal strength detected.",
                                                    "title": "First Signal Strength Detected"
                                                },
                                                "sc": {
                                                    "type": "integer",
                                                    "description": "Last signal strength detected.",
                                                    "title": "Last Signal Strength Detected"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/wifi\/euclid.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/euclid\/reset": {
            "post": {
                "summary": "Reset presence analytics statistics.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "WiFi Analytics Statistics Reset",
                            "description": "Reset presence analytics statistics.",
                            "type": "object",
                            "required": [
                                "status"
                            ],
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Reset status.",
                                    "title": "Reset Status",
                                    "enum": [
                                        "success"
                                    ]
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/wifi\/euclid.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/region-image": {
            "get": {
                "summary": "Retrieves a floorplan\/region image from a configured FortiAP region.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "region_name",
                        "in": "query",
                        "description": "Region name to retrieve image from.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/region-image\/upload": {
            "post": {
                "summary": "Saves a floorplan\/region image to an existing region.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "region_name": {
                                    "description": "Region name to save image to.",
                                    "type": "string"
                                },
                                "image_type": {
                                    "description": "MIME type of the image (png|jpeg|gif).",
                                    "type": "string"
                                },
                                "file_content": {
                                    "description": "Provided when uploading a file: base64 encoded file data. Must not contain whitespace or other invalid base64 characters. Must be included in HTTP body.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/rogue_ap": {
            "get": {
                "summary": "Retrieve a list of detected rogue APs.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Rogue APs",
                            "description": "Retrieve a list of detected rogue APs.",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "description": "Rogue AP information.",
                                "title": "Rogue AP",
                                "required": [
                                    "status",
                                    "is_managed",
                                    "is_dead",
                                    "is_wired",
                                    "is_fake",
                                    "capinfo",
                                    "sta_mac",
                                    "wtp_count",
                                    "onwire"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "description": "Status of the AP.",
                                        "title": "Status",
                                        "enum": [
                                            "unclassified",
                                            "accepted",
                                            "rogue",
                                            "suppressed"
                                        ]
                                    },
                                    "is_managed": {
                                        "type": "string",
                                        "description": "The management status of the AP.",
                                        "title": "Managed",
                                        "enum": [
                                            "unmanaged",
                                            "AC",
                                            "vdom"
                                        ]
                                    },
                                    "is_dead": {
                                        "type": "boolean",
                                        "description": "True when the AP is dead.",
                                        "title": "Dead"
                                    },
                                    "is_wired": {
                                        "type": "boolean",
                                        "description": "True when the AP is wired.",
                                        "title": "Wired"
                                    },
                                    "is_fake": {
                                        "type": "boolean",
                                        "description": "True when the AP is fake.",
                                        "title": "Fake"
                                    },
                                    "capinfo": {
                                        "type": "string",
                                        "description": "AP capability information.",
                                        "title": "AP Capability Information"
                                    },
                                    "ssid": {
                                        "type": "string",
                                        "description": "SSID of the AP.",
                                        "title": "SSID"
                                    },
                                    "mac": {
                                        "type": "string",
                                        "description": "MAC address of the AP.",
                                        "title": "MAC Address"
                                    },
                                    "manufacturer": {
                                        "type": "string",
                                        "description": "Manufacturer of the AP.",
                                        "title": "Manufacturer"
                                    },
                                    "security_mode": {
                                        "type": "string",
                                        "description": "Security mode of the AP.",
                                        "title": "Security Mode"
                                    },
                                    "encryption": {
                                        "type": "string",
                                        "description": "Encryption type of the AP.",
                                        "title": "Encryption"
                                    },
                                    "signal_strength_noise": {
                                        "type": "string",
                                        "description": "Signal strength noise.",
                                        "title": "Signal Strength Noise"
                                    },
                                    "signal_strength": {
                                        "type": "integer",
                                        "description": "Signal strength.",
                                        "title": "Signal Strength"
                                    },
                                    "noise": {
                                        "type": "integer",
                                        "description": "Noise.",
                                        "title": "Noise"
                                    },
                                    "channel": {
                                        "type": "integer",
                                        "description": "Channel ID of the AP.",
                                        "title": "Channel"
                                    },
                                    "rate": {
                                        "type": "integer",
                                        "description": "Rate of the AP.",
                                        "title": "Rate"
                                    },
                                    "first_seen": {
                                        "type": "string",
                                        "description": "Timestamp of when the AP was seen for the first time.",
                                        "title": "First Seen"
                                    },
                                    "last_seen": {
                                        "type": "string",
                                        "description": "Timestamp of when the AP was seen for the last time.",
                                        "title": "Last Seen"
                                    },
                                    "sta_mac": {
                                        "type": "string",
                                        "description": "Client MAC address.",
                                        "title": "Client MAC Address"
                                    },
                                    "wtp_count": {
                                        "type": "integer",
                                        "description": "Number of FortiAPs that detected this Rogue AP.",
                                        "title": "FortiAP Count"
                                    },
                                    "detected_by_wtp": {
                                        "type": "array",
                                        "description": "List of FortiAPs that detected this Rogue AP.",
                                        "title": "FortiAPs",
                                        "items": {
                                            "type": "object",
                                            "description": "Information of the FortiAP that detected this Rogue AP.",
                                            "title": "FortiAP",
                                            "required": [
                                                "is_managed",
                                                "channel",
                                                "rate",
                                                "security_mode",
                                                "signal_strength",
                                                "noise",
                                                "wtp_ip",
                                                "wtp_port",
                                                "wtp_index",
                                                "wtp_radio"
                                            ],
                                            "properties": {
                                                "is_managed": {
                                                    "type": "string",
                                                    "description": "The management status of the FortiAP.",
                                                    "title": "Managed",
                                                    "enum": [
                                                        "unmanaged",
                                                        "AC",
                                                        "vdom"
                                                    ]
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "description": "Name of the FortiAP.",
                                                    "title": "Name"
                                                },
                                                "serial": {
                                                    "type": "string",
                                                    "description": "Serial number of the FortiAP.",
                                                    "title": "Serial Number"
                                                },
                                                "wtp_id": {
                                                    "type": "string",
                                                    "description": "FortiAP ID.",
                                                    "title": "FortiAP ID"
                                                },
                                                "ssid": {
                                                    "type": "string",
                                                    "description": "SSID of the FortiAP.",
                                                    "title": "SSID"
                                                },
                                                "channel": {
                                                    "type": "integer",
                                                    "description": "Channel ID of the FortiAP.",
                                                    "title": "Channel"
                                                },
                                                "rate": {
                                                    "type": "integer",
                                                    "description": "Rate of the FortiAP.",
                                                    "title": "Rate"
                                                },
                                                "security_mode": {
                                                    "type": "string",
                                                    "description": "Security mode of the FortiAP.",
                                                    "title": "Security Mode"
                                                },
                                                "signal_strength": {
                                                    "type": "integer",
                                                    "description": "Signal strength.",
                                                    "title": "Signal Strength"
                                                },
                                                "noise": {
                                                    "type": "integer",
                                                    "description": "Noise.",
                                                    "title": "Noise"
                                                },
                                                "last_seen": {
                                                    "type": "string",
                                                    "description": "Timestamp of when the FortiAP was seen for the last time.",
                                                    "title": "Last Seen"
                                                },
                                                "wtp_ip": {
                                                    "type": "string",
                                                    "description": "FortiAP IP address.",
                                                    "title": "FortiAP IP Address"
                                                },
                                                "wtp_port": {
                                                    "type": "integer",
                                                    "description": "FortiAP port.",
                                                    "title": "FortiAP Port"
                                                },
                                                "wtp_index": {
                                                    "type": "integer",
                                                    "description": "FortiAP index.",
                                                    "title": "FortiAP Index"
                                                },
                                                "wtp_radio": {
                                                    "type": "integer",
                                                    "description": "FortiAP radio ID.",
                                                    "title": "FortiAP Radio ID"
                                                }
                                            }
                                        }
                                    },
                                    "onwire": {
                                        "type": "boolean",
                                        "description": "True when the AP is on wire.",
                                        "title": "On Wire"
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/wifi\/rogue_ap.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "managed_ssid_only",
                        "in": "query",
                        "description": "Filter: True to include only WiFi controller managed SSIDs.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Starting entry index.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Maximum number of entries to return.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/rogue_ap\/clear_all": {
            "post": {
                "summary": "Clear all detected rogue APs.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/rogue_ap\/set_status": {
            "post": {
                "summary": "Mark detected APs as rogue APs.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "bssid": {
                                    "description": "List of rogue AP MAC addresses.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "ssid": {
                                    "description": "Corresponding list of rogue AP SSIDs.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "status": {
                                    "description": "Status to assign matching APs [unclassified|rogue|accepted|suppressed].",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/spectrum": {
            "get": {
                "summary": "Retrieve spectrum analysis information for a specific FortiAP.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "WiFi Spectrum Data",
                            "description": "Spectrum scan data for supported radios on a FortiAP.",
                            "type": "object",
                            "required": [
                                "name",
                                "serial",
                                "bands"
                            ],
                            "properties": {
                                "name": {
                                    "title": "Name",
                                    "description": "The name of the FortiAP.",
                                    "type": "string"
                                },
                                "serial": {
                                    "title": "Serial",
                                    "description": "The serial of the FortiAP.",
                                    "type": "string"
                                },
                                "bands": {
                                    "title": "Spectrum Scan Data List",
                                    "description": "List of spectrum scan analysis data per band and channel.",
                                    "type": "array",
                                    "items": {
                                        "title": "Spectrum Scan Data",
                                        "description": "Spectrum scan data for a range of frequencies.",
                                        "type": "object",
                                        "required": [
                                            "name",
                                            "freq_min",
                                            "freq_max",
                                            "chan_min",
                                            "chan_max",
                                            "freq_resolution",
                                            "bins",
                                            "interferences"
                                        ],
                                        "properties": {
                                            "name": {
                                                "title": "Spectrum Scan Data Name",
                                                "description": "Name of this range.",
                                                "type": "string"
                                            },
                                            "freq_min": {
                                                "title": "Minimum Frequency",
                                                "description": "The minimum frequency for this range.",
                                                "type": "integer"
                                            },
                                            "freq_max": {
                                                "title": "Maximum Frequency",
                                                "description": "The maximum frequency for this range.",
                                                "type": "integer"
                                            },
                                            "chan_min": {
                                                "title": "Minimum Channel",
                                                "description": "The minimum channel for this range.",
                                                "type": "integer"
                                            },
                                            "chan_max": {
                                                "title": "Maximum Channel",
                                                "description": "The maximum channel for this range.",
                                                "type": "integer"
                                            },
                                            "freq_resolution": {
                                                "title": "Frequency Resolution",
                                                "description": "The number of samples per 5 MHz bin.",
                                                "type": "integer"
                                            },
                                            "bins": {
                                                "title": "Data Bins List",
                                                "description": "List of data bins with samples for a 5 MHz range.",
                                                "type": "array",
                                                "items": {
                                                    "title": "Data Bin",
                                                    "description": "A bin of data with samples for a 5 MHz range.",
                                                    "type": "object",
                                                    "required": [
                                                        "rssi",
                                                        "duty_cycle",
                                                        "age",
                                                        "generation"
                                                    ],
                                                    "properties": {
                                                        "rssi": {
                                                            "title": "Received Signal Strength Indicator",
                                                            "description": "The power level of the RF signal.",
                                                            "type": "integer"
                                                        },
                                                        "duty_cycle": {
                                                            "title": "Duty Cycle",
                                                            "description": "Proportion of time during which interference was active.",
                                                            "type": "integer"
                                                        },
                                                        "age": {
                                                            "title": "Age",
                                                            "description": "Interference detection age, in seconds.",
                                                            "type": "integer"
                                                        },
                                                        "generation": {
                                                            "title": "Generation",
                                                            "description": "Generation of data from the FortiAP. If unchanged, interference data is stale.",
                                                            "type": "integer"
                                                        }
                                                    }
                                                }
                                            },
                                            "interferences": {
                                                "title": "Detected Interferences",
                                                "description": "Various types of interferences detected across all radios on the FortiAP.",
                                                "type": "array",
                                                "items": {
                                                    "title": "Interference",
                                                    "description": "A detected interference.",
                                                    "type": "object",
                                                    "required": [
                                                        "type",
                                                        "frequency",
                                                        "age"
                                                    ],
                                                    "properties": {
                                                        "type": {
                                                            "title": "Interference Type",
                                                            "description": "The type of interference.",
                                                            "type": "string",
                                                            "enum": [
                                                                "dsss",
                                                                "fhss",
                                                                "microwave",
                                                                "continuous_wave",
                                                                "unknown"
                                                            ]
                                                        },
                                                        "frequency": {
                                                            "title": "Interference Frequency",
                                                            "description": "Frequency that the interference was detected on.",
                                                            "type": "integer"
                                                        },
                                                        "age": {
                                                            "title": "Age",
                                                            "description": "Detection age, in seconds.",
                                                            "type": "integer"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/wifi\/spectrum.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "wtp_id",
                        "in": "query",
                        "description": "FortiAP ID to query.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/spectrum\/start": {
            "post": {
                "summary": "Start spectrum analysis for a specific FortiAP for a duration of time.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "wtp_id": {
                                    "description": "FortiAP ID.",
                                    "type": "string"
                                },
                                "radio_id": {
                                    "description": "Radio ID.",
                                    "type": "integer"
                                },
                                "channels": {
                                    "description": "Channels.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "duration": {
                                    "description": "Duration in seconds.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/spectrum\/keep-alive": {
            "post": {
                "summary": "Extend duration of an existing spectrum analysis for a specific FortiAP.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "wtp_id": {
                                    "description": "FortiAP ID.",
                                    "type": "string"
                                },
                                "radio_id": {
                                    "description": "Radio ID.",
                                    "type": "integer"
                                },
                                "duration": {
                                    "description": "Duration in seconds.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/spectrum\/stop": {
            "post": {
                "summary": "Stop spectrum analysis for a specific FortiAP.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "wtp_id": {
                                    "description": "FortiAP ID.",
                                    "type": "string"
                                },
                                "radio_id": {
                                    "description": "Radio ID.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/meta": {
            "get": {
                "summary": "Retrieve WiFi related meta data.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "WiFi Meta",
                            "description": "Retrieve WiFi related meta data.",
                            "type": "object",
                            "required": [
                                "wtp_total_size",
                                "wtp_normal_size",
                                "fapc_supported_countries",
                                "security_types",
                                "encryption_types",
                                "band_spectrum_map",
                                "signal_strength_scale"
                            ],
                            "properties": {
                                "wtp_total_size": {
                                    "type": "integer",
                                    "description": "Maximum number of Managed FortiAPs.",
                                    "title": "FortiAP Total Size"
                                },
                                "wtp_normal_size": {
                                    "type": "integer",
                                    "description": "Maximum number of Managed FortiAPs in tunnel mode. This is the hard limit as the limit could change based on number of bridged FortiAPs.",
                                    "title": "FortiAP Normal Size"
                                },
                                "fapc_supported_countries": {
                                    "type": "object",
                                    "description": "Supported countries.",
                                    "title": "Supported Countries",
                                    "additionalProperties": {
                                        "type": "integer",
                                        "description": "Country code.",
                                        "title": "Country Code"
                                    }
                                },
                                "security_types": {
                                    "type": "array",
                                    "description": "Security types.",
                                    "title": "Security Types",
                                    "items": {
                                        "type": "object",
                                        "description": "Security type information.",
                                        "title": "Security Type",
                                        "required": [
                                            "type_code",
                                            "lang",
                                            "uses_encryption",
                                            "uses_captive_portal"
                                        ],
                                        "properties": {
                                            "type_code": {
                                                "type": "integer",
                                                "description": "Security type code.",
                                                "title": "Type Code"
                                            },
                                            "lang": {
                                                "type": "string",
                                                "description": "Language.",
                                                "title": "Language"
                                            },
                                            "uses_encryption": {
                                                "type": "boolean",
                                                "description": "True when the security type uses encryption.",
                                                "title": "Encryption"
                                            },
                                            "uses_captive_portal": {
                                                "type": "boolean",
                                                "description": "True when the security type uses captive portal.",
                                                "title": "Captive Portal"
                                            }
                                        }
                                    }
                                },
                                "encryption_types": {
                                    "type": "array",
                                    "description": "Encryption types.",
                                    "title": "Encryption Types",
                                    "items": {
                                        "type": "string",
                                        "description": "Encryption type.",
                                        "title": "Encryption Type"
                                    }
                                },
                                "band_spectrum_map": {
                                    "type": "object",
                                    "description": "Band spectrum map.",
                                    "title": "Band Spectrum Map",
                                    "additionalProperties": {
                                        "type": "string",
                                        "description": "Band spectrum.",
                                        "title": "Band Spectrum"
                                    }
                                },
                                "signal_strength_scale": {
                                    "type": "array",
                                    "description": "Signal strength scales.",
                                    "title": "Signal Strength Scales",
                                    "items": {
                                        "type": "object",
                                        "description": "Signal strength scale.",
                                        "title": "Signal Strength Scale",
                                        "required": [
                                            "lower_bound",
                                            "scale_value"
                                        ],
                                        "properties": {
                                            "lower_bound": {
                                                "type": "integer",
                                                "description": "Lower bound.",
                                                "title": "Lower Bound"
                                            },
                                            "scale_value": {
                                                "type": "integer",
                                                "description": "Scale value.",
                                                "title": "Scale Value"
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/wifi\/meta.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/ap_channels": {
            "get": {
                "summary": "Retrieve the set of channel lists for all possible band\/configurations for the given FortiAP platform.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiAP Channels",
                            "description": "Retrieve the set of channel lists for all possible bands for the given FortiAP platform.",
                            "type": "object",
                            "required": [
                                "outdoor",
                                "local",
                                "channel_lists"
                            ],
                            "properties": {
                                "outdoor": {
                                    "type": "boolean",
                                    "description": "True when this FortiAP has outdoor working capability.",
                                    "title": "Outdoor Capability"
                                },
                                "local": {
                                    "type": "boolean",
                                    "description": "True when this is the local WiFi radio.",
                                    "title": "Local WiFi Radio"
                                },
                                "channel_lists": {
                                    "type": "object",
                                    "description": "List of supported bands for this platform.",
                                    "title": "Platform Band Map",
                                    "additionalProperties": {
                                        "type": "object",
                                        "description": "Band name.",
                                        "title": "Band",
                                        "required": [
                                            "channel_widths"
                                        ],
                                        "properties": {
                                            "channel_widths": {
                                                "type": "array",
                                                "description": "List of channel widths.",
                                                "title": "Channel Widths",
                                                "items": {
                                                    "type": "string",
                                                    "title": "Channel Width",
                                                    "description": "Channel width.",
                                                    "enum": [
                                                        "20MHz",
                                                        "40MHz",
                                                        "80MHz",
                                                        "160MHz"
                                                    ]
                                                }
                                            }
                                        },
                                        "additionalProperties": {
                                            "type": "array",
                                            "description": "Channel specifications.",
                                            "title": "Channel Specifications",
                                            "items": {
                                                "type": "object",
                                                "description": "Channels.",
                                                "title": "Channels",
                                                "properties": {
                                                    "darrp": {
                                                        "type": "string",
                                                        "description": "Distributed Radio Resource Provisioning status.",
                                                        "title": "Distributed Radio Resource Provisioning Status",
                                                        "enum": [
                                                            "disable",
                                                            "enable"
                                                        ]
                                                    },
                                                    "channels": {
                                                        "type": "object",
                                                        "description": "DFS channel settings.",
                                                        "title": "DFS Channels",
                                                        "additionalProperties": {
                                                            "type": "string",
                                                            "description": "DFS channel setting.",
                                                            "title": "DFS Channel",
                                                            "enum": [
                                                                "dfs",
                                                                ""
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/wifi\/ap_channels.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Two-letter code for the country the AP is operating in.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "platform_type",
                        "in": "query",
                        "description": "Short name for platform type (e.g. '220A')",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "indoor_outdoor",
                        "in": "query",
                        "description": "FortiAP indoor\/outdoor configuration value (0 for indoor, 1 for outdoor, 2 for default).",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/ap-names": {
            "get": {
                "summary": "Retrieve list of objects, each containing the valid serial number prefix, platform short name and full-length model name for a FortiAP platform.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "FortiAP Model Names",
                            "description": "Retrieve a list of objects, each containing the valid serial number prefix, platform short name, and full-length model name.",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "title": "FortiAP Model Name",
                                "description": "FortiAP model name.",
                                "required": [
                                    "prefix",
                                    "model",
                                    "platform"
                                ],
                                "properties": {
                                    "prefix": {
                                        "type": "string",
                                        "description": "Valid serial number prefix.",
                                        "title": "Prefix"
                                    },
                                    "model": {
                                        "type": "string",
                                        "description": "FortiAP full-length model name.",
                                        "title": "Model"
                                    },
                                    "platform": {
                                        "type": "string",
                                        "description": "FortiAP platform name.",
                                        "title": "Platform"
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/wifi\/ap-names.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/vlan-probe": {
            "get": {
                "summary": "Retrieve the VLAN probe results.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "VLAN Probe",
                            "description": "Retrieve VLAN probe information.",
                            "type": "object",
                            "required": [
                                "results",
                                "probe_results_exist",
                                "probe_in_progress"
                            ],
                            "properties": {
                                "results": {
                                    "type": "array",
                                    "description": "VLAN probe results.",
                                    "title": "VLAN Probe Results",
                                    "items": {
                                        "type": "object",
                                        "description": "VLAN information.",
                                        "title": "VLAN Information",
                                        "required": [
                                            "vlan_id",
                                            "ap_interface",
                                            "subnet",
                                            "detect_time"
                                        ],
                                        "properties": {
                                            "vlan_id": {
                                                "type": "integer",
                                                "description": "VLAN ID.",
                                                "title": "VLAN ID"
                                            },
                                            "ap_interface": {
                                                "type": "string",
                                                "description": "FortiAP probe port.",
                                                "title": "FortiAP Probe Port"
                                            },
                                            "subnet": {
                                                "type": "string",
                                                "description": "VLAN subnet.",
                                                "title": "VLAN Subnet"
                                            },
                                            "detect_time": {
                                                "type": "integer",
                                                "description": "Timestamp of when the VLAN was detected.",
                                                "title": "Detection Time"
                                            }
                                        }
                                    }
                                },
                                "probe_results_exist": {
                                    "type": "boolean",
                                    "description": "True when a previous probe result exists.",
                                    "title": "Previous Probe Result Exists"
                                },
                                "probe_in_progress": {
                                    "type": "boolean",
                                    "description": "True when a VLAN probe is in progress.",
                                    "title": "Probe in Progress"
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/wifi\/vlan-probe.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "ap_interface",
                        "in": "query",
                        "description": "FortiAP interface to send the probe on.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "wtp",
                        "in": "query",
                        "description": "FortiAP ID.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/vlan-probe\/start": {
            "post": {
                "summary": "Start a VLAN probe.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ap_interface": {
                                    "description": "FortiAP interface to send the probe on.",
                                    "type": "integer"
                                },
                                "wtp": {
                                    "description": "FortiAP ID.",
                                    "type": "string"
                                },
                                "start_vlan_id": {
                                    "description": "The starting VLAN ID for the probe.",
                                    "type": "integer"
                                },
                                "end_vlan_id": {
                                    "description": "The ending VLAN ID for the probe.",
                                    "type": "integer"
                                },
                                "retries": {
                                    "description": "Number of times to retry a probe for a particular VLAN.",
                                    "type": "integer"
                                },
                                "timeout": {
                                    "description": "Timeout duration (in seconds) to wait for a VLAN probe response.",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/vlan-probe\/stop": {
            "post": {
                "summary": "Stop a VLAN probe.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ap_interface": {
                                    "description": "FortiAP interface to send the probe on.",
                                    "type": "integer"
                                },
                                "wtp": {
                                    "description": "FortiAP ID.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/ssid\/generate-keys": {
            "post": {
                "summary": "Generate pre-shared keys for specific multi pre-shared key profile.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request.",
                        "required": true,
                        "schema": {
                            "properties": {
                                "mpsk_profile": {
                                    "description": "Multi pre-shared key profile to add keys to.",
                                    "type": "string"
                                },
                                "group": {
                                    "description": "Multi pre-shared key group to add keys to.",
                                    "type": "string"
                                },
                                "prefix": {
                                    "description": "Prefix to be added at the start of the generated key's name.",
                                    "type": "string"
                                },
                                "count": {
                                    "description": "Number of keys to be generated [1-512].",
                                    "type": "integer"
                                },
                                "key_length": {
                                    "description": "Length of the keys to be generated [8-63].",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/unassociated-devices": {
            "get": {
                "summary": "Retrieve a list of unassociated and BLE devices\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "WiFi Unassociated Devices",
                            "description": "Retrieve a list of unassociated and BLE devices.",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "description": "Unassociated and BLE devices information.",
                                "title": "Unassociated and BLE Devices",
                                "required": [
                                    "type",
                                    "mac"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Device Type.",
                                        "title": "Device Type"
                                    },
                                    "mac": {
                                        "type": "string",
                                        "description": "MAC address.",
                                        "title": "MAC Address"
                                    },
                                    "manufacturer": {
                                        "type": "string",
                                        "description": "Manufacturer.",
                                        "title": "Manufacturer"
                                    },
                                    "triangulation_regions": {
                                        "title": "FortiAPs Detecting the Device",
                                        "description": "Retrieve at most three FortiAPs Detecting the Device.",
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "description": "FortiAP Detecting the Device.",
                                            "title": "FortiAP Detecting the Device",
                                            "properties": {
                                                "wtp_id": {
                                                    "type": "string",
                                                    "description": "FortiAP ID.",
                                                    "title": "FortiAP ID"
                                                },
                                                "rssi": {
                                                    "type": "integer",
                                                    "description": "RSSI.",
                                                    "title": "RSSI"
                                                },
                                                "last_seen": {
                                                    "type": "integer",
                                                    "description": "Unix Timestamp for when the Device was Detected by FortiAP.",
                                                    "title": "Last Seen"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/wifi\/unassociated-devices.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "with_triangulation",
                        "in": "query",
                        "description": "Enable to include regions of FortiAP detecting the device.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "tags": [
                    "wifi"
                ]
            }
        },
        "\/wifi\/matched-devices": {
            "get": {
                "summary": "Return a list of devices that match NAC WiFi settings.\nAccess Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Matched Devices",
                            "description": "List WiFi devices that match NAC policy.",
                            "type": "array",
                            "items": {
                                "title": "Device Entry",
                                "description": "Details of the device.",
                                "type": "object",
                                "required": [
                                    "mac"
                                ],
                                "properties": {
                                    "mac": {
                                        "type": "string",
                                        "title": "MAC",
                                        "description": "The MAC address of the device."
                                    },
                                    "ip": {
                                        "type": "string",
                                        "title": "IP",
                                        "description": "The IP address of the device."
                                    },
                                    "matched_nac_policy": {
                                        "type": "string",
                                        "title": "Matched NAC Policy",
                                        "description": "The NAC policy that matches the device."
                                    },
                                    "wlan_name": {
                                        "type": "string",
                                        "title": "WLAN Name",
                                        "description": "The name of the wireless LAN."
                                    },
                                    "wlan_type": {
                                        "type": "string",
                                        "title": "WLAN Type",
                                        "description": "The type of wireless network the WLAN is configured as."
                                    },
                                    "vlan_id": {
                                        "type": "number",
                                        "title": "VLAN ID",
                                        "description": "The VLAN ID the device is assigned."
                                    },
                                    "default_vlan_id": {
                                        "type": "number",
                                        "title": "Default VLAN ID",
                                        "description": "The default VLAN ID assigned to the device."
                                    }
                                }
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/monitor\/wifi\/matched-devices.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "tags": [
                    "wifi"
                ]
            }
        }
    }
}