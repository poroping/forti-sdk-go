{
    "swagger": "2.0",
    "info": {
        "termsOfService": "http:\/\/fortinet.com\/terms\/",
        "version": "v2",
        "contact": {
            "url": "http:\/\/modskristensen.net",
            "name": "FortiOS Web Application Team",
            "email": "fosguiqateam@fortinet.com"
        },
        "description": "REST API for configuring FortiOS objects and settings",
        "title": "FortiOS log"
    },
    "host": "172.16.177.65",
    "basePath": "\/api\/v2\/log",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application\/x-www-form-urlencoded"
    ],
    "produces": [
        "application\/json"
    ],
    "securityDefinitions": {
        "APIKeyQueryParam": {
            "type": "apiKey",
            "name": "access_token",
            "in": "query"
        }
    },
    "security": [
        {
            "APIKeyQueryParam": []
        }
    ],
    "paths": {
        "\/disk\/virus\/archive": {
            "get": {
                "summary": "Return a description of the quarantined virus file.",
                "tags": [
                    "disk"
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Virus Quarantine Archive Metadata",
                            "description": "Metadata describing the quarantined virus archive data.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "title": "Quarantine Status",
                                    "type": "string",
                                    "enum": [
                                        "Infected",
                                        "Machine Learning",
                                        "Intercepted"
                                    ],
                                    "description": "Quarantine status of the virus archive."
                                },
                                "status_description": {
                                    "title": "Status Description",
                                    "type": "string",
                                    "description": "Description of the archived virus."
                                },
                                "checksum": {
                                    "title": "File Checksum",
                                    "description": "Checksum of the archived virus.",
                                    "type": "string",
                                    "pattern": "^[a-f\\d]"
                                },
                                "filename": {
                                    "title": "File Name",
                                    "description": "Initial name of the file input.",
                                    "type": "string"
                                },
                                "timestamp": {
                                    "title": "Timestamp",
                                    "description": "Time when the file was scanned. Milliseconds since Unix Epoch.",
                                    "type": "integer"
                                },
                                "service": {
                                    "title": "Service",
                                    "description": "Name of the service which requested the quarantine.",
                                    "type": "string"
                                },
                                "duplicates": {
                                    "title": "Duplicates",
                                    "description": "Number of times a duplicate file matching this sample has been submitted.",
                                    "type": "integer"
                                },
                                "ttl": {
                                    "title": "Time to Live",
                                    "description": "Time until this quarantine entry expires or \"FOREVER\".",
                                    "type": "string",
                                    "pattern": "^FOREVER|Exp.\\d{2}:\\d{2}$"
                                }
                            },
                            "required": [
                                "status",
                                "status_description",
                                "checksum",
                                "filename",
                                "timestamp",
                                "service",
                                "duplicates",
                                "ttl"
                            ],
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/log\/:source\/virus.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "The checksum column from the virus log.",
                        "required": false,
                        "type": "integer"
                    }
                ]
            }
        },
        "\/disk\/{type}\/archive": {
            "get": {
                "summary": "Return a list of archived items for the desired type. :type can be app-ctrl or ips",
                "tags": [
                    "disk"
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Packet Capture Archive",
                            "description": "Summary of Packet Capture data from IPS or Application Control.",
                            "type": "array",
                            "items": {
                                "title": "Archived Packet Capture Details",
                                "description": "Details of a captured packet.",
                                "type": "object",
                                "properties": {
                                    "src": {
                                        "type": "string",
                                        "title": "Source IP",
                                        "description": "Source IP address."
                                    },
                                    "dst": {
                                        "type": "string",
                                        "title": "Destination IP",
                                        "description": "Destination IP address."
                                    },
                                    "proto": {
                                        "type": "string",
                                        "title": "Protocol",
                                        "description": "Protocol of the captured packet(s).",
                                        "enum": [
                                            "all",
                                            "igmp",
                                            "tcp",
                                            "udp",
                                            "sctp",
                                            "icmp",
                                            "icmp6",
                                            "gre",
                                            "esp",
                                            "ah",
                                            "ospf",
                                            "pim",
                                            "vrrp"
                                        ]
                                    },
                                    "src_port": {
                                        "type": "integer",
                                        "title": "Source Port",
                                        "description": "Source Port for the captured packet(s)."
                                    },
                                    "dst_port": {
                                        "type": "integer",
                                        "title": "Destination Port",
                                        "description": "Destination Port for the captured packet(s)."
                                    },
                                    "len": {
                                        "type": "integer",
                                        "title": "Length",
                                        "description": "Size in bytes of the captured packet data."
                                    },
                                    "data": {
                                        "title": "Data",
                                        "description": "Array of bytes representing the content of the captured packet.",
                                        "type": "array",
                                        "items": {
                                            "title": "Byte Data",
                                            "description": "Byte data of the captured packet.",
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 255
                                        }
                                    }
                                },
                                "required": [
                                    "src",
                                    "dst",
                                    "proto",
                                    "src_port",
                                    "dst_port",
                                    "len",
                                    "data"
                                ]
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/log\/:source\/:type.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of log that can be retrieved",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "ips",
                            "app-ctrl"
                        ]
                    },
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Archive identifier.",
                        "required": false,
                        "type": "integer"
                    }
                ]
            }
        },
        "\/disk\/{type}\/archive-download": {
            "get": {
                "summary": "Download an archived file.",
                "tags": [
                    "disk"
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of log that can be retrieved",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "ips",
                            "app-ctrl"
                        ]
                    },
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Archive identifier.",
                        "required": false,
                        "type": "integer"
                    }
                ]
            }
        },
        "\/disk\/{type}\/raw": {
            "get": {
                "summary": "Log data for the given log type in raw format.",
                "tags": [
                    "disk"
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of log that can be retrieved",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "virus",
                            "webfilter",
                            "waf",
                            "ips",
                            "anomaly",
                            "app-ctrl",
                            "emailfilter",
                            "dlp",
                            "voip",
                            "gtp",
                            "dns",
                            "ssh",
                            "ssl",
                            "cifs",
                            "file-filter"
                        ]
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "\/disk\/traffic\/{subtype}\/raw": {
            "get": {
                "summary": "Log data for the given log type in raw format.",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subtype",
                        "in": "path",
                        "description": "Select the subtype for the Traffic log category",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "forward",
                            "local",
                            "multicast",
                            "sniffer",
                            "fortiview",
                            "threat"
                        ]
                    }
                ],
                "tags": [
                    "disk"
                ]
            }
        },
        "\/disk\/event\/{subtype}\/raw": {
            "get": {
                "summary": "Log data for the given log type in raw format.",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subtype",
                        "in": "path",
                        "description": "Select the subtype for the Event log category",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "vpn",
                            "user",
                            "router",
                            "wireless",
                            "wad",
                            "endpoint",
                            "ha",
                            "compliance-check",
                            "security-rating",
                            "fortiextender",
                            "connector",
                            "system"
                        ]
                    }
                ],
                "tags": [
                    "disk"
                ]
            }
        },
        "\/disk\/{type}": {
            "get": {
                "summary": "Log data for the given log type (and subtype). Append '\/raw' to retrieve in raw format.",
                "tags": [
                    "disk"
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of log that can be retrieved",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "virus",
                            "webfilter",
                            "waf",
                            "ips",
                            "anomaly",
                            "app-ctrl",
                            "emailfilter",
                            "dlp",
                            "voip",
                            "gtp",
                            "dns",
                            "ssh",
                            "ssl",
                            "cifs",
                            "file-filter"
                        ]
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "extra",
                        "in": "query",
                        "description": "Flag(s) for extra data to be included [reverse_lookup|country_id].",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "\/disk\/traffic\/{subtype}": {
            "get": {
                "summary": "Log data for the given log type (and subtype). Append '\/raw' to retrieve in raw format.",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "extra",
                        "in": "query",
                        "description": "Flag(s) for extra data to be included [reverse_lookup|country_id].",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "subtype",
                        "in": "path",
                        "description": "Select the subtype for the Traffic log category",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "forward",
                            "local",
                            "multicast",
                            "sniffer",
                            "fortiview",
                            "threat"
                        ]
                    }
                ],
                "tags": [
                    "disk"
                ]
            }
        },
        "\/disk\/event\/{subtype}": {
            "get": {
                "summary": "Log data for the given log type (and subtype). Append '\/raw' to retrieve in raw format.",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "extra",
                        "in": "query",
                        "description": "Flag(s) for extra data to be included [reverse_lookup|country_id].",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "subtype",
                        "in": "path",
                        "description": "Select the subtype for the Event log category",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "vpn",
                            "user",
                            "router",
                            "wireless",
                            "wad",
                            "endpoint",
                            "ha",
                            "compliance-check",
                            "security-rating",
                            "fortiextender",
                            "connector",
                            "system"
                        ]
                    }
                ],
                "tags": [
                    "disk"
                ]
            }
        },
        "\/fortianalyzer\/virus\/archive": {
            "get": {
                "summary": "Return a description of the quarantined virus file.",
                "tags": [
                    "fortianalyzer"
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Virus Quarantine Archive Metadata",
                            "description": "Metadata describing the quarantined virus archive data.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "title": "Quarantine Status",
                                    "type": "string",
                                    "enum": [
                                        "Infected",
                                        "Machine Learning",
                                        "Intercepted"
                                    ],
                                    "description": "Quarantine status of the virus archive."
                                },
                                "status_description": {
                                    "title": "Status Description",
                                    "type": "string",
                                    "description": "Description of the archived virus."
                                },
                                "checksum": {
                                    "title": "File Checksum",
                                    "description": "Checksum of the archived virus.",
                                    "type": "string",
                                    "pattern": "^[a-f\\d]"
                                },
                                "filename": {
                                    "title": "File Name",
                                    "description": "Initial name of the file input.",
                                    "type": "string"
                                },
                                "timestamp": {
                                    "title": "Timestamp",
                                    "description": "Time when the file was scanned. Milliseconds since Unix Epoch.",
                                    "type": "integer"
                                },
                                "service": {
                                    "title": "Service",
                                    "description": "Name of the service which requested the quarantine.",
                                    "type": "string"
                                },
                                "duplicates": {
                                    "title": "Duplicates",
                                    "description": "Number of times a duplicate file matching this sample has been submitted.",
                                    "type": "integer"
                                },
                                "ttl": {
                                    "title": "Time to Live",
                                    "description": "Time until this quarantine entry expires or \"FOREVER\".",
                                    "type": "string",
                                    "pattern": "^FOREVER|Exp.\\d{2}:\\d{2}$"
                                }
                            },
                            "required": [
                                "status",
                                "status_description",
                                "checksum",
                                "filename",
                                "timestamp",
                                "service",
                                "duplicates",
                                "ttl"
                            ],
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/log\/:source\/virus.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "The checksum column from the virus log.",
                        "required": false,
                        "type": "integer"
                    }
                ]
            }
        },
        "\/fortianalyzer\/{type}\/archive": {
            "get": {
                "summary": "Return a list of archived items for the desired type. :type can be app-ctrl or ips",
                "tags": [
                    "fortianalyzer"
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Packet Capture Archive",
                            "description": "Summary of Packet Capture data from IPS or Application Control.",
                            "type": "array",
                            "items": {
                                "title": "Archived Packet Capture Details",
                                "description": "Details of a captured packet.",
                                "type": "object",
                                "properties": {
                                    "src": {
                                        "type": "string",
                                        "title": "Source IP",
                                        "description": "Source IP address."
                                    },
                                    "dst": {
                                        "type": "string",
                                        "title": "Destination IP",
                                        "description": "Destination IP address."
                                    },
                                    "proto": {
                                        "type": "string",
                                        "title": "Protocol",
                                        "description": "Protocol of the captured packet(s).",
                                        "enum": [
                                            "all",
                                            "igmp",
                                            "tcp",
                                            "udp",
                                            "sctp",
                                            "icmp",
                                            "icmp6",
                                            "gre",
                                            "esp",
                                            "ah",
                                            "ospf",
                                            "pim",
                                            "vrrp"
                                        ]
                                    },
                                    "src_port": {
                                        "type": "integer",
                                        "title": "Source Port",
                                        "description": "Source Port for the captured packet(s)."
                                    },
                                    "dst_port": {
                                        "type": "integer",
                                        "title": "Destination Port",
                                        "description": "Destination Port for the captured packet(s)."
                                    },
                                    "len": {
                                        "type": "integer",
                                        "title": "Length",
                                        "description": "Size in bytes of the captured packet data."
                                    },
                                    "data": {
                                        "title": "Data",
                                        "description": "Array of bytes representing the content of the captured packet.",
                                        "type": "array",
                                        "items": {
                                            "title": "Byte Data",
                                            "description": "Byte data of the captured packet.",
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 255
                                        }
                                    }
                                },
                                "required": [
                                    "src",
                                    "dst",
                                    "proto",
                                    "src_port",
                                    "dst_port",
                                    "len",
                                    "data"
                                ]
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/log\/:source\/:type.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of log that can be retrieved",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "ips",
                            "app-ctrl"
                        ]
                    },
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Archive identifier.",
                        "required": false,
                        "type": "integer"
                    }
                ]
            }
        },
        "\/fortianalyzer\/{type}\/archive-download": {
            "get": {
                "summary": "Download an archived file.",
                "tags": [
                    "fortianalyzer"
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of log that can be retrieved",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "ips",
                            "app-ctrl"
                        ]
                    },
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Archive identifier.",
                        "required": false,
                        "type": "integer"
                    }
                ]
            }
        },
        "\/fortianalyzer\/{type}\/raw": {
            "get": {
                "summary": "Log data for the given log type in raw format.",
                "tags": [
                    "fortianalyzer"
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of log that can be retrieved",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "virus",
                            "webfilter",
                            "waf",
                            "ips",
                            "anomaly",
                            "app-ctrl",
                            "emailfilter",
                            "dlp",
                            "voip",
                            "gtp",
                            "dns",
                            "ssh",
                            "ssl",
                            "cifs",
                            "file-filter"
                        ]
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "\/fortianalyzer\/traffic\/{subtype}\/raw": {
            "get": {
                "summary": "Log data for the given log type in raw format.",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subtype",
                        "in": "path",
                        "description": "Select the subtype for the Traffic log category",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "forward",
                            "local",
                            "multicast",
                            "sniffer",
                            "fortiview",
                            "threat"
                        ]
                    }
                ],
                "tags": [
                    "fortianalyzer"
                ]
            }
        },
        "\/fortianalyzer\/event\/{subtype}\/raw": {
            "get": {
                "summary": "Log data for the given log type in raw format.",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subtype",
                        "in": "path",
                        "description": "Select the subtype for the Event log category",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "vpn",
                            "user",
                            "router",
                            "wireless",
                            "wad",
                            "endpoint",
                            "ha",
                            "compliance-check",
                            "security-rating",
                            "fortiextender",
                            "connector",
                            "system"
                        ]
                    }
                ],
                "tags": [
                    "fortianalyzer"
                ]
            }
        },
        "\/fortianalyzer\/{type}": {
            "get": {
                "summary": "Log data for the given log type (and subtype). Append '\/raw' to retrieve in raw format.",
                "tags": [
                    "fortianalyzer"
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of log that can be retrieved",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "virus",
                            "webfilter",
                            "waf",
                            "ips",
                            "anomaly",
                            "app-ctrl",
                            "emailfilter",
                            "dlp",
                            "voip",
                            "gtp",
                            "dns",
                            "ssh",
                            "ssl",
                            "cifs",
                            "file-filter"
                        ]
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "extra",
                        "in": "query",
                        "description": "Flag(s) for extra data to be included [reverse_lookup|country_id].",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "\/fortianalyzer\/traffic\/{subtype}": {
            "get": {
                "summary": "Log data for the given log type (and subtype). Append '\/raw' to retrieve in raw format.",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "extra",
                        "in": "query",
                        "description": "Flag(s) for extra data to be included [reverse_lookup|country_id].",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "subtype",
                        "in": "path",
                        "description": "Select the subtype for the Traffic log category",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "forward",
                            "local",
                            "multicast",
                            "sniffer",
                            "fortiview",
                            "threat"
                        ]
                    }
                ],
                "tags": [
                    "fortianalyzer"
                ]
            }
        },
        "\/fortianalyzer\/event\/{subtype}": {
            "get": {
                "summary": "Log data for the given log type (and subtype). Append '\/raw' to retrieve in raw format.",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "extra",
                        "in": "query",
                        "description": "Flag(s) for extra data to be included [reverse_lookup|country_id].",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "subtype",
                        "in": "path",
                        "description": "Select the subtype for the Event log category",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "vpn",
                            "user",
                            "router",
                            "wireless",
                            "wad",
                            "endpoint",
                            "ha",
                            "compliance-check",
                            "security-rating",
                            "fortiextender",
                            "connector",
                            "system"
                        ]
                    }
                ],
                "tags": [
                    "fortianalyzer"
                ]
            }
        },
        "\/forticloud\/virus\/archive": {
            "get": {
                "summary": "Return a description of the quarantined virus file.",
                "tags": [
                    "forticloud"
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Virus Quarantine Archive Metadata",
                            "description": "Metadata describing the quarantined virus archive data.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "title": "Quarantine Status",
                                    "type": "string",
                                    "enum": [
                                        "Infected",
                                        "Machine Learning",
                                        "Intercepted"
                                    ],
                                    "description": "Quarantine status of the virus archive."
                                },
                                "status_description": {
                                    "title": "Status Description",
                                    "type": "string",
                                    "description": "Description of the archived virus."
                                },
                                "checksum": {
                                    "title": "File Checksum",
                                    "description": "Checksum of the archived virus.",
                                    "type": "string",
                                    "pattern": "^[a-f\\d]"
                                },
                                "filename": {
                                    "title": "File Name",
                                    "description": "Initial name of the file input.",
                                    "type": "string"
                                },
                                "timestamp": {
                                    "title": "Timestamp",
                                    "description": "Time when the file was scanned. Milliseconds since Unix Epoch.",
                                    "type": "integer"
                                },
                                "service": {
                                    "title": "Service",
                                    "description": "Name of the service which requested the quarantine.",
                                    "type": "string"
                                },
                                "duplicates": {
                                    "title": "Duplicates",
                                    "description": "Number of times a duplicate file matching this sample has been submitted.",
                                    "type": "integer"
                                },
                                "ttl": {
                                    "title": "Time to Live",
                                    "description": "Time until this quarantine entry expires or \"FOREVER\".",
                                    "type": "string",
                                    "pattern": "^FOREVER|Exp.\\d{2}:\\d{2}$"
                                }
                            },
                            "required": [
                                "status",
                                "status_description",
                                "checksum",
                                "filename",
                                "timestamp",
                                "service",
                                "duplicates",
                                "ttl"
                            ],
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/log\/:source\/virus.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "The checksum column from the virus log.",
                        "required": false,
                        "type": "integer"
                    }
                ]
            }
        },
        "\/forticloud\/{type}\/archive": {
            "get": {
                "summary": "Return a list of archived items for the desired type. :type can be app-ctrl or ips",
                "tags": [
                    "forticloud"
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Packet Capture Archive",
                            "description": "Summary of Packet Capture data from IPS or Application Control.",
                            "type": "array",
                            "items": {
                                "title": "Archived Packet Capture Details",
                                "description": "Details of a captured packet.",
                                "type": "object",
                                "properties": {
                                    "src": {
                                        "type": "string",
                                        "title": "Source IP",
                                        "description": "Source IP address."
                                    },
                                    "dst": {
                                        "type": "string",
                                        "title": "Destination IP",
                                        "description": "Destination IP address."
                                    },
                                    "proto": {
                                        "type": "string",
                                        "title": "Protocol",
                                        "description": "Protocol of the captured packet(s).",
                                        "enum": [
                                            "all",
                                            "igmp",
                                            "tcp",
                                            "udp",
                                            "sctp",
                                            "icmp",
                                            "icmp6",
                                            "gre",
                                            "esp",
                                            "ah",
                                            "ospf",
                                            "pim",
                                            "vrrp"
                                        ]
                                    },
                                    "src_port": {
                                        "type": "integer",
                                        "title": "Source Port",
                                        "description": "Source Port for the captured packet(s)."
                                    },
                                    "dst_port": {
                                        "type": "integer",
                                        "title": "Destination Port",
                                        "description": "Destination Port for the captured packet(s)."
                                    },
                                    "len": {
                                        "type": "integer",
                                        "title": "Length",
                                        "description": "Size in bytes of the captured packet data."
                                    },
                                    "data": {
                                        "title": "Data",
                                        "description": "Array of bytes representing the content of the captured packet.",
                                        "type": "array",
                                        "items": {
                                            "title": "Byte Data",
                                            "description": "Byte data of the captured packet.",
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 255
                                        }
                                    }
                                },
                                "required": [
                                    "src",
                                    "dst",
                                    "proto",
                                    "src_port",
                                    "dst_port",
                                    "len",
                                    "data"
                                ]
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/log\/:source\/:type.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of log that can be retrieved",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "ips",
                            "app-ctrl"
                        ]
                    },
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Archive identifier.",
                        "required": false,
                        "type": "integer"
                    }
                ]
            }
        },
        "\/forticloud\/{type}\/archive-download": {
            "get": {
                "summary": "Download an archived file.",
                "tags": [
                    "forticloud"
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of log that can be retrieved",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "ips",
                            "app-ctrl"
                        ]
                    },
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Archive identifier.",
                        "required": false,
                        "type": "integer"
                    }
                ]
            }
        },
        "\/forticloud\/{type}\/raw": {
            "get": {
                "summary": "Log data for the given log type in raw format.",
                "tags": [
                    "forticloud"
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of log that can be retrieved",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "virus",
                            "webfilter",
                            "waf",
                            "ips",
                            "anomaly",
                            "app-ctrl",
                            "emailfilter",
                            "dlp",
                            "voip",
                            "gtp",
                            "dns",
                            "ssh",
                            "ssl",
                            "cifs",
                            "file-filter"
                        ]
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "\/forticloud\/traffic\/{subtype}\/raw": {
            "get": {
                "summary": "Log data for the given log type in raw format.",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subtype",
                        "in": "path",
                        "description": "Select the subtype for the Traffic log category",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "forward",
                            "local",
                            "multicast",
                            "sniffer",
                            "fortiview",
                            "threat"
                        ]
                    }
                ],
                "tags": [
                    "forticloud"
                ]
            }
        },
        "\/forticloud\/event\/{subtype}\/raw": {
            "get": {
                "summary": "Log data for the given log type in raw format.",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subtype",
                        "in": "path",
                        "description": "Select the subtype for the Event log category",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "vpn",
                            "user",
                            "router",
                            "wireless",
                            "wad",
                            "endpoint",
                            "ha",
                            "compliance-check",
                            "security-rating",
                            "fortiextender",
                            "connector",
                            "system"
                        ]
                    }
                ],
                "tags": [
                    "forticloud"
                ]
            }
        },
        "\/forticloud\/{type}": {
            "get": {
                "summary": "Log data for the given log type (and subtype). Append '\/raw' to retrieve in raw format.",
                "tags": [
                    "forticloud"
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of log that can be retrieved",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "virus",
                            "webfilter",
                            "waf",
                            "ips",
                            "anomaly",
                            "app-ctrl",
                            "emailfilter",
                            "dlp",
                            "voip",
                            "gtp",
                            "dns",
                            "ssh",
                            "ssl",
                            "cifs",
                            "file-filter"
                        ]
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "extra",
                        "in": "query",
                        "description": "Flag(s) for extra data to be included [reverse_lookup|country_id].",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "\/forticloud\/traffic\/{subtype}": {
            "get": {
                "summary": "Log data for the given log type (and subtype). Append '\/raw' to retrieve in raw format.",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "extra",
                        "in": "query",
                        "description": "Flag(s) for extra data to be included [reverse_lookup|country_id].",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "subtype",
                        "in": "path",
                        "description": "Select the subtype for the Traffic log category",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "forward",
                            "local",
                            "multicast",
                            "sniffer",
                            "fortiview",
                            "threat"
                        ]
                    }
                ],
                "tags": [
                    "forticloud"
                ]
            }
        },
        "\/forticloud\/event\/{subtype}": {
            "get": {
                "summary": "Log data for the given log type (and subtype). Append '\/raw' to retrieve in raw format.",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "extra",
                        "in": "query",
                        "description": "Flag(s) for extra data to be included [reverse_lookup|country_id].",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "subtype",
                        "in": "path",
                        "description": "Select the subtype for the Event log category",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "vpn",
                            "user",
                            "router",
                            "wireless",
                            "wad",
                            "endpoint",
                            "ha",
                            "compliance-check",
                            "security-rating",
                            "fortiextender",
                            "connector",
                            "system"
                        ]
                    }
                ],
                "tags": [
                    "forticloud"
                ]
            }
        },
        "\/memory\/virus\/archive": {
            "get": {
                "summary": "Return a description of the quarantined virus file.",
                "tags": [
                    "memory"
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Virus Quarantine Archive Metadata",
                            "description": "Metadata describing the quarantined virus archive data.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "title": "Quarantine Status",
                                    "type": "string",
                                    "enum": [
                                        "Infected",
                                        "Machine Learning",
                                        "Intercepted"
                                    ],
                                    "description": "Quarantine status of the virus archive."
                                },
                                "status_description": {
                                    "title": "Status Description",
                                    "type": "string",
                                    "description": "Description of the archived virus."
                                },
                                "checksum": {
                                    "title": "File Checksum",
                                    "description": "Checksum of the archived virus.",
                                    "type": "string",
                                    "pattern": "^[a-f\\d]"
                                },
                                "filename": {
                                    "title": "File Name",
                                    "description": "Initial name of the file input.",
                                    "type": "string"
                                },
                                "timestamp": {
                                    "title": "Timestamp",
                                    "description": "Time when the file was scanned. Milliseconds since Unix Epoch.",
                                    "type": "integer"
                                },
                                "service": {
                                    "title": "Service",
                                    "description": "Name of the service which requested the quarantine.",
                                    "type": "string"
                                },
                                "duplicates": {
                                    "title": "Duplicates",
                                    "description": "Number of times a duplicate file matching this sample has been submitted.",
                                    "type": "integer"
                                },
                                "ttl": {
                                    "title": "Time to Live",
                                    "description": "Time until this quarantine entry expires or \"FOREVER\".",
                                    "type": "string",
                                    "pattern": "^FOREVER|Exp.\\d{2}:\\d{2}$"
                                }
                            },
                            "required": [
                                "status",
                                "status_description",
                                "checksum",
                                "filename",
                                "timestamp",
                                "service",
                                "duplicates",
                                "ttl"
                            ],
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/log\/:source\/virus.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "The checksum column from the virus log.",
                        "required": false,
                        "type": "integer"
                    }
                ]
            }
        },
        "\/memory\/{type}\/archive": {
            "get": {
                "summary": "Return a list of archived items for the desired type. :type can be app-ctrl or ips",
                "tags": [
                    "memory"
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "title": "Packet Capture Archive",
                            "description": "Summary of Packet Capture data from IPS or Application Control.",
                            "type": "array",
                            "items": {
                                "title": "Archived Packet Capture Details",
                                "description": "Details of a captured packet.",
                                "type": "object",
                                "properties": {
                                    "src": {
                                        "type": "string",
                                        "title": "Source IP",
                                        "description": "Source IP address."
                                    },
                                    "dst": {
                                        "type": "string",
                                        "title": "Destination IP",
                                        "description": "Destination IP address."
                                    },
                                    "proto": {
                                        "type": "string",
                                        "title": "Protocol",
                                        "description": "Protocol of the captured packet(s).",
                                        "enum": [
                                            "all",
                                            "igmp",
                                            "tcp",
                                            "udp",
                                            "sctp",
                                            "icmp",
                                            "icmp6",
                                            "gre",
                                            "esp",
                                            "ah",
                                            "ospf",
                                            "pim",
                                            "vrrp"
                                        ]
                                    },
                                    "src_port": {
                                        "type": "integer",
                                        "title": "Source Port",
                                        "description": "Source Port for the captured packet(s)."
                                    },
                                    "dst_port": {
                                        "type": "integer",
                                        "title": "Destination Port",
                                        "description": "Destination Port for the captured packet(s)."
                                    },
                                    "len": {
                                        "type": "integer",
                                        "title": "Length",
                                        "description": "Size in bytes of the captured packet data."
                                    },
                                    "data": {
                                        "title": "Data",
                                        "description": "Array of bytes representing the content of the captured packet.",
                                        "type": "array",
                                        "items": {
                                            "title": "Byte Data",
                                            "description": "Byte data of the captured packet.",
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 255
                                        }
                                    }
                                },
                                "required": [
                                    "src",
                                    "dst",
                                    "proto",
                                    "src_port",
                                    "dst_port",
                                    "len",
                                    "data"
                                ]
                            },
                            "id": "http:\/\/schema.fortinet.com\/fos\/api\/v2\/log\/:source\/:type.json",
                            "$schema": "http:\/\/json-schema.org\/draft-07\/schema#"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of log that can be retrieved",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "ips",
                            "app-ctrl"
                        ]
                    },
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Archive identifier.",
                        "required": false,
                        "type": "integer"
                    }
                ]
            }
        },
        "\/memory\/{type}\/archive-download": {
            "get": {
                "summary": "Download an archived file.",
                "tags": [
                    "memory"
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of log that can be retrieved",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "ips",
                            "app-ctrl"
                        ]
                    },
                    {
                        "name": "mkey",
                        "in": "query",
                        "description": "Archive identifier.",
                        "required": false,
                        "type": "integer"
                    }
                ]
            }
        },
        "\/memory\/{type}\/raw": {
            "get": {
                "summary": "Log data for the given log type in raw format.",
                "tags": [
                    "memory"
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of log that can be retrieved",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "virus",
                            "webfilter",
                            "waf",
                            "ips",
                            "anomaly",
                            "app-ctrl",
                            "emailfilter",
                            "dlp",
                            "voip",
                            "gtp",
                            "dns",
                            "ssh",
                            "ssl",
                            "cifs",
                            "file-filter"
                        ]
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "\/memory\/traffic\/{subtype}\/raw": {
            "get": {
                "summary": "Log data for the given log type in raw format.",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subtype",
                        "in": "path",
                        "description": "Select the subtype for the Traffic log category",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "forward",
                            "local",
                            "multicast",
                            "sniffer",
                            "fortiview",
                            "threat"
                        ]
                    }
                ],
                "tags": [
                    "memory"
                ]
            }
        },
        "\/memory\/event\/{subtype}\/raw": {
            "get": {
                "summary": "Log data for the given log type in raw format.",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subtype",
                        "in": "path",
                        "description": "Select the subtype for the Event log category",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "vpn",
                            "user",
                            "router",
                            "wireless",
                            "wad",
                            "endpoint",
                            "ha",
                            "compliance-check",
                            "security-rating",
                            "fortiextender",
                            "connector",
                            "system"
                        ]
                    }
                ],
                "tags": [
                    "memory"
                ]
            }
        },
        "\/memory\/{type}": {
            "get": {
                "summary": "Log data for the given log type (and subtype). Append '\/raw' to retrieve in raw format.",
                "tags": [
                    "memory"
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of log that can be retrieved",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "virus",
                            "webfilter",
                            "waf",
                            "ips",
                            "anomaly",
                            "app-ctrl",
                            "emailfilter",
                            "dlp",
                            "voip",
                            "gtp",
                            "dns",
                            "ssh",
                            "ssl",
                            "cifs",
                            "file-filter"
                        ]
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "extra",
                        "in": "query",
                        "description": "Flag(s) for extra data to be included [reverse_lookup|country_id].",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "\/memory\/traffic\/{subtype}": {
            "get": {
                "summary": "Log data for the given log type (and subtype). Append '\/raw' to retrieve in raw format.",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "extra",
                        "in": "query",
                        "description": "Flag(s) for extra data to be included [reverse_lookup|country_id].",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "subtype",
                        "in": "path",
                        "description": "Select the subtype for the Traffic log category",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "forward",
                            "local",
                            "multicast",
                            "sniffer",
                            "fortiview",
                            "threat"
                        ]
                    }
                ],
                "tags": [
                    "memory"
                ]
            }
        },
        "\/memory\/event\/{subtype}": {
            "get": {
                "summary": "Log data for the given log type (and subtype). Append '\/raw' to retrieve in raw format.",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Row number for the first row to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of rows to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Provide a session_id to continue getting data for that request.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "serial_no",
                        "in": "query",
                        "description": "Retrieve log from the specified device.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_ha_member",
                        "in": "query",
                        "description": "Is the specified device an HA member.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR using ,    |    Separate filters using commas ','\nLogical AND using &   |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "extra",
                        "in": "query",
                        "description": "Flag(s) for extra data to be included [reverse_lookup|country_id].",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "subtype",
                        "in": "path",
                        "description": "Select the subtype for the Event log category",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "vpn",
                            "user",
                            "router",
                            "wireless",
                            "wad",
                            "endpoint",
                            "ha",
                            "compliance-check",
                            "security-rating",
                            "fortiextender",
                            "connector",
                            "system"
                        ]
                    }
                ],
                "tags": [
                    "memory"
                ]
            }
        },
        "\/search\/abort\/{session_id}": {
            "post": {
                "summary": "Abort a running log search session.",
                "tags": [
                    "search"
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API."
                    },
                    "401": {
                        "description": "Not Authorized: Authentication not successful."
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource."
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request."
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity. "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. Source is blocked by IP Address."
                    }
                },
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "path",
                        "description": "Provide the session ID for the request",
                        "required": true,
                        "type": "integer"
                    }
                ]
            }
        }
    }
}