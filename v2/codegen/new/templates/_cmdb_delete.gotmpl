{{define "cmdb_delete"}}
{{if (eq (deref .Category) "complex")}}
{{template "_cmdb_delete_complex" .}}
{{else if .ReadOnly}}
{{template "_cmdb_delete_readonly" .}}
{{else}}
{{template "_cmdb_delete" .}}
{{end}}
{{end}}

{{define "_cmdb_delete"}}
func (c *Client) Delete{{(mixedCase .FullPath)}}(mkey string, params *models.CmdbRequestParams) error {
	req := &models.CmdbRequest{}
	req.HTTPMethod = "DELETE"
	req.Mkey = &mkey
	req.Payload = nil
	req.Path = models.CmdbBasePath + models.{{(mixedCase .FullPath)}}Path + url.QueryEscape(mkey) + "/"
	req.Params = *params

	err := request.Delete(c.config, req)
	return err
}
{{end}}

{{define "_cmdb_delete_complex"}}
func (c *Client) Delete{{(mixedCase .FullPath)}}(mkey string, params *models.CmdbRequestParams) error {
	payload := &models.{{(mixedCase .FullPath)}}{}
	_, err := c.Update{{(mixedCase .FullPath)}}("", payload, params)
	return err
}
{{end}}

{{define "_cmdb_delete_readonly"}}
func (c *Client) Delete{{(mixedCase .FullPath)}}(mkey string, params *models.CmdbRequestParams) error {
	payload := &models.{{(mixedCase .FullPath)}}{}
	payload.Defaults()
	_, err := c.Update{{(mixedCase .FullPath)}}("", payload, params)
	return err
}
{{end}}