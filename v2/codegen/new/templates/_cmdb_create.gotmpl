{{define "cmdb_create"}}
{{if (eq (deref .Category) "complex")}}
{{template "_cmdb_create_complex" .}}{{else}}{{template "_cmdb_create" .}}
{{end}}
{{end}}


{{define "_cmdb_create"}}
func (c *Client) Create{{(mixedCase .FullPath)}}(payload *models.{{(mixedCase .FullPath)}}, params *models.CmdbRequestParams) (*models.CmdbResponse, error) {
	body, err := json.Marshal(payload)
	if err != nil {
		return nil, err
	}

	mkey := ""
	if payload.{{(mixedCase .Mkey)}} != nil && *params.AllowAppend {
		mkey = {{if eq (deref .MkeyType) "integer"}}strconv.Itoa(int(*payload.{{(mixedCase .Mkey)}})){{else}}*payload.{{(mixedCase .Mkey)}}{{end}}
		read, err := c.Read{{(mixedCase .FullPath)}}(mkey, params)
		if err != nil {
			return nil, err
		}
		if read != nil {
			log.Printf("[WARN] Resource at path %q with mkey %q detected upon CREATE with flag set to to overwrite. Changing to UPDATE.", models.{{(mixedCase .FullPath)}}Path, mkey)
			return c.Update{{(mixedCase .FullPath)}}(mkey, payload, params)
		}
	}

	req := &models.CmdbRequest{}
	req.HTTPMethod = "POST"
	req.Payload = body
	req.Path = models.CmdbBasePath + models.{{(mixedCase .FullPath)}}Path
	req.Params = *params

	res, err := request.CreateUpdate(c.config, req)
	if err != nil {
		return nil, err
	}
	return res, nil
}
{{end}}

{{define "_cmdb_create_complex"}}
func (c *Client) Create{{(mixedCase .FullPath)}}(payload *models.{{(mixedCase .FullPath)}}, params *models.CmdbRequestParams) (*models.CmdbResponse, error) {
	log.Printf("[INFO] Resource at path %q is complex type. Changing to UPDATE.", models.{{(mixedCase .FullPath)}}Path)
	return c.Update{{(mixedCase .FullPath)}}("", payload, params)
}
{{end}}